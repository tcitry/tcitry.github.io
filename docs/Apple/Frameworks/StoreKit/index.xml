<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>StoreKit on LYon's Blog</title><link>https://yindongliang.com/docs/Apple/Frameworks/StoreKit/</link><description>Recent content in StoreKit on LYon's Blog</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://yindongliang.com/docs/Apple/Frameworks/StoreKit/index.xml" rel="self" type="application/rss+xml"/><item><title>IAP 支付流程</title><link>https://yindongliang.com/docs/Apple/Frameworks/StoreKit/In-App-Purchase/</link><pubDate>Sat, 10 May 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Apple/Frameworks/StoreKit/In-App-Purchase/</guid><description>&lt;p>StoreKit 2 是苹果在 WWDC 2021 (iOS 15+, macOS 12+, watchOS 8+, tvOS 15+) 推出的现代化应用内购买框架。它基于 Swift 的 &lt;code>async/await&lt;/code> 语法，大大简化了产品获取、交易处理和凭据验证的流程。&lt;/p>
&lt;h3 id="storekit-2-核心体系概览">StoreKit 2 核心体系概览&lt;a class="anchor" href="#storekit-2-%e6%a0%b8%e5%bf%83%e4%bd%93%e7%b3%bb%e6%a6%82%e8%a7%88">#&lt;/a>&lt;/h3>
&lt;p>StoreKit 2 的工作流程更加简洁和安全：&lt;/p></description></item><item><title>SubscriptionStoreView</title><link>https://yindongliang.com/docs/Apple/Frameworks/StoreKit/SubscriptionStoreView/</link><pubDate>Thu, 08 May 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Apple/Frameworks/StoreKit/SubscriptionStoreView/</guid><description>&lt;p>好的，我们来详细了解一下 &lt;code>SubscriptionStoreView&lt;/code>，这是苹果在 StoreKit 中引入的一个强大的 SwiftUI 组件，旨在极大简化应用内订阅购买界面的构建。&lt;/p></description></item><item><title>purchase</title><link>https://yindongliang.com/docs/Apple/Frameworks/StoreKit/purchase/</link><pubDate>Tue, 06 May 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Apple/Frameworks/StoreKit/purchase/</guid><description>&lt;h1 id="storekit-中-product-的-purchase-方法介绍">StoreKit 中 Product 的 purchase 方法介绍&lt;a class="anchor" href="#storekit-%e4%b8%ad-product-%e7%9a%84-purchase-%e6%96%b9%e6%b3%95%e4%bb%8b%e7%bb%8d">#&lt;/a>&lt;/h1>
&lt;p>在 Swift 的 StoreKit 框架中，&lt;code>Product&lt;/code> 类型的 &lt;code>purchase()&lt;/code> 方法是用于发起应用内购买(In-App Purchase)的核心方法。以下是关于这个方法的详细介绍：&lt;/p></description></item><item><title>Product</title><link>https://yindongliang.com/docs/Apple/Frameworks/StoreKit/Product/</link><pubDate>Mon, 05 May 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Apple/Frameworks/StoreKit/Product/</guid><description>&lt;p>在 StoreKit 框架中，&lt;strong>&lt;code>Product&lt;/code>&lt;/strong> 是表示应用内购买商品的核心类型，用于定义用户在应用中可购买的虚拟商品或服务（如消耗型商品、非消耗型商品、自动续期订阅等）。它是 StoreKit 2（iOS 15+）引入的新 API 的一部分，提供了更简洁、安全的操作方式。以下是 &lt;code>Product&lt;/code> 的详细介绍：&lt;/p></description></item><item><title>sync</title><link>https://yindongliang.com/docs/Apple/Frameworks/StoreKit/sync/</link><pubDate>Mon, 05 May 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Apple/Frameworks/StoreKit/sync/</guid><description>&lt;blockquote class='book-hint '>
&lt;p>Synchronizes your app’s transaction information and subscription status with information from the App Store.&lt;/p>&lt;/blockquote>&lt;p>&lt;code>StoreKit&lt;/code> 框架中的 &lt;code>sync()&lt;/code> 方法是 Apple 提供的一个用于同步用户应用内购买（特别是订阅）状态的重要方法。它属于 &lt;code>AppStore&lt;/code> 协议，旨在确保本地设备与 App Store 服务器之间的订阅状态一致。以下是详细介绍：&lt;/p></description></item><item><title>Transaction</title><link>https://yindongliang.com/docs/Apple/Frameworks/StoreKit/Transaction/</link><pubDate>Mon, 05 May 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Apple/Frameworks/StoreKit/Transaction/</guid><description>&lt;p>在 StoreKit 框架中，&lt;strong>&lt;code>Transaction&lt;/code>&lt;/strong> 是表示应用内购买交易的核心类型，用于管理购买状态、验证收据信息以及处理订阅生命周期。它在 StoreKit 2（iOS 15+）中被重新设计，提供了更简洁的 API 和更高的安全性。以下是 &lt;code>Transaction&lt;/code> 的详细介绍：&lt;/p></description></item><item><title>ProductView</title><link>https://yindongliang.com/docs/Apple/Frameworks/StoreKit/ProductView/</link><pubDate>Sun, 04 May 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Apple/Frameworks/StoreKit/ProductView/</guid><description>&lt;p>StoreKit 的 &lt;code>ProductView&lt;/code> 是苹果在 &lt;strong>StoreKit 2&lt;/strong> 框架中引入的一个 SwiftUI 组件，用于在应用中快速集成和展示应用内购买（In-App Purchase）的商品信息界面。它简化了商品展示和购买流程的代码实现，帮助开发者以极少的代码量构建符合苹果设计规范的商店界面。&lt;/p></description></item><item><title>StoreView</title><link>https://yindongliang.com/docs/Apple/Frameworks/StoreKit/StoreView/</link><pubDate>Sun, 04 May 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Apple/Frameworks/StoreKit/StoreView/</guid><description>&lt;p>&lt;a href="https://developer.apple.com/documentation/storekit/storeview">&lt;code>StoreView&lt;/code>&lt;/a> 是 &lt;strong>StoreKit 框架中的一个 SwiftUI 组件&lt;/strong>，专门用于展示应用内购买商品（包括一次性购买、消耗型商品和订阅）的集合视图。它比 &lt;code>ProductView&lt;/code> 更强大，支持以列表、网格或其他布局形式展示多个商品，并提供统一的购买管理接口。&lt;/p></description></item></channel></rss>