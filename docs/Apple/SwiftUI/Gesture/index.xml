<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gesture on LYon's Blog</title><link>https://yindongliang.com/docs/Apple/SwiftUI/Gesture/</link><description>Recent content in Gesture on LYon's Blog</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://yindongliang.com/docs/Apple/SwiftUI/Gesture/index.xml" rel="self" type="application/rss+xml"/><item><title>多个 onTapGesture 会怎样？</title><link>https://yindongliang.com/docs/Apple/SwiftUI/Gesture/%E5%A4%9A%E4%B8%AA-onTapGesture/</link><pubDate>Mon, 08 Sep 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Apple/SwiftUI/Gesture/%E5%A4%9A%E4%B8%AA-onTapGesture/</guid><description>&lt;p>你在 SwiftUI 中为同一组件添加多个 &lt;code>onTapGesture&lt;/code> 时，&lt;strong>它们不会同时生效&lt;/strong>。SwiftUI 默认采用&amp;quot;手势竞争&amp;quot;机制，它会优先响应最内层或最上层的手势识别器。&lt;/p></description></item><item><title>onTapGesture</title><link>https://yindongliang.com/docs/Apple/SwiftUI/Gesture/onTapGesture/</link><pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Apple/SwiftUI/Gesture/onTapGesture/</guid><description>&lt;p>SwiftUI 的 &lt;code>onTapGesture&lt;/code> 是用于为视图添加点击交互的修饰符，支持单击、双击等手势识别。以下是其使用方法的详细介绍：&lt;/p>
&lt;hr>
&lt;h3 id="1-基本用法">&lt;strong>1. 基本用法&lt;/strong>&lt;a class="anchor" href="#1-%e5%9f%ba%e6%9c%ac%e7%94%a8%e6%b3%95">#&lt;/a>&lt;/h3>
&lt;p>在视图上附加 &lt;code>.onTapGesture&lt;/code>，并在闭包中定义点击触发的操作：&lt;/p></description></item><item><title>DragGesture</title><link>https://yindongliang.com/docs/Apple/SwiftUI/Gesture/DragGesture/</link><pubDate>Mon, 13 Jan 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Apple/SwiftUI/Gesture/DragGesture/</guid><description>&lt;p>在 SwiftUI 的 &lt;strong>&lt;code>DragGesture&lt;/code>&lt;/strong> 中，&lt;strong>&lt;code>DragGesture.Value&lt;/code>&lt;/strong> 是非常重要的类型，封装了用户手势的实时数据（例如当前手指位置、起点位置、相对偏移量、滑动速度等）。其中，属性 &lt;strong>&lt;code>predictedEndLocation&lt;/code>&lt;/strong> 是用于预测拖拽手势的 &lt;em>结束位置&lt;/em>，这是基于手势的当前速度和方向推算出来的。&lt;/p></description></item><item><title>GestureState</title><link>https://yindongliang.com/docs/Apple/SwiftUI/Gesture/GestureState/</link><pubDate>Mon, 13 Jan 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Apple/SwiftUI/Gesture/GestureState/</guid><description>&lt;h3 id="gesturestate">&lt;strong>&lt;code>GestureState&lt;/code> 的使用与场景&lt;/strong>&lt;a class="anchor" href="#gesturestate">#&lt;/a>&lt;/h3>
&lt;p>&lt;code>GestureState&lt;/code> 是 &lt;strong>SwiftUI&lt;/strong> 中一个专门用于捕获和管理手势状态的属性包装器（&lt;code>@GestureState&lt;/code>）。它适用于在 &lt;strong>手势操作中临时存储状态&lt;/strong>，并能让手势操作在结束时自动重置状态值。&lt;/p></description></item></channel></rss>