<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C/C++ on LYon's Blog</title><link>https://yindongliang.com/docs/Clang/</link><description>Recent content in C/C++ on LYon's Blog</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://yindongliang.com/docs/Clang/index.xml" rel="self" type="application/rss+xml"/><item><title>C 语言基础</title><link>https://yindongliang.com/docs/Clang/C/</link><pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Clang/C/</guid><description>&lt;p>出于看一些源码的需要，比如 Redis，发现很多之前的 C 语法细节已经忘了，现在再补回来，时过境迁，现在的感觉就是 C 语言已经和当初上学看的那个东西完全不一样了，先上 hello world 镇楼。&lt;/p></description></item><item><title>系统调用</title><link>https://yindongliang.com/docs/Clang/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/</link><pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Clang/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/</guid><description>&lt;p>Unix 操作系统通过一系列的系统调用提供服务，这些系统调用实际上是操作系统内的函数，它们可以被用户程序调用。本文介绍如何在 C 语言程序中使用一些重要的系统调用。&lt;/p></description></item><item><title>C 标准库</title><link>https://yindongliang.com/docs/Clang/C-%E6%A0%87%E5%87%86%E5%BA%93/</link><pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Clang/C-%E6%A0%87%E5%87%86%E5%BA%93/</guid><description>&lt;p>可能有一些想要查看的内容并不在本文的标准库，而是在&lt;a href="https://yindongliang.com/docs/Linux/%e7%b3%bb%e7%bb%9f%e6%8e%a5%e5%8f%a3/">系统接口&lt;/a>。&lt;/p>
&lt;h2 id="输入与输出-stdioh">输入与输出 &amp;lt;stdio.h&amp;gt;&lt;a class="anchor" href="#%e8%be%93%e5%85%a5%e4%b8%8e%e8%be%93%e5%87%ba-stdioh">#&lt;/a>&lt;/h2>
&lt;h3 id="printf">printf&lt;a class="anchor" href="#printf">#&lt;/a>&lt;/h3>
&lt;h3 id="scanf">scanf&lt;a class="anchor" href="#scanf">#&lt;/a>&lt;/h3>
&lt;h3 id="fprintf">fprintf&lt;a class="anchor" href="#fprintf">#&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>stdin&lt;/li>
&lt;li>stdout&lt;/li>
&lt;li>stderr&lt;/li>
&lt;/ul>
&lt;h3 id="exit">exit&lt;a class="anchor" href="#exit">#&lt;/a>&lt;/h3>
&lt;h3 id="getchar-和-putchar">getchar 和 putchar&lt;a class="anchor" href="#getchar-%e5%92%8c-putchar">#&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#include&lt;/span> &lt;span style="color:#8a93a5;font-style:italic">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">c&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">c&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#00b1f7">getchar&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">while&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">c&lt;/span> &lt;span style="color:#54b1c7">!=&lt;/span> &lt;span style="color:#aa89ea">EOF&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00b1f7">putchar&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">c&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">c&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#00b1f7">getchar&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>getchar&lt;/code> 得到的数据在机器内部以位模式存储，char 类型专门用于存储这种字符型数据，当然 int 也可以，但是 &lt;code>getchar&lt;/code> 的返回值为 int 类型。&lt;/p></description></item></channel></rss>