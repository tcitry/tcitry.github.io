<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Frontend on LYon's Blog</title><link>https://yindongliang.com/docs/Frontend/</link><description>Recent content in Frontend on LYon's Blog</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://yindongliang.com/docs/Frontend/index.xml" rel="self" type="application/rss+xml"/><item><title>Chrome URLs</title><link>https://yindongliang.com/docs/Frontend/Chrome/</link><pubDate>Sun, 07 Sep 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/Chrome/</guid><description>&lt;p>Chrome 浏览器提供了大量以 &lt;code>chrome://&lt;/code> 开头的特殊内部页面（有时称为 &amp;ldquo;chrome URLs&amp;rdquo; 或 &amp;ldquo;about URLs&amp;rdquo;），这些页面用于访问浏览器的各种内部信息、设置、调试和实验功能。下面是一些比较常用和实用的内部地址：&lt;/p></description></item><item><title>HTML</title><link>https://yindongliang.com/docs/Frontend/HTML/</link><pubDate>Tue, 04 Jun 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/HTML/</guid><description>&lt;h2 id="viewport">Viewport&lt;a class="anchor" href="#viewport">#&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Viewport_meta_tag">https://developer.mozilla.org/zh-CN/docs/Web/HTML/Viewport_meta_tag&lt;/a>&lt;/p>
&lt;h2 id="aside">aside&lt;a class="anchor" href="#aside">#&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/aside">https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/aside&lt;/a>&lt;/p></description></item><item><title>包管理 - npm</title><link>https://yindongliang.com/docs/Frontend/%E5%8C%85%E7%AE%A1%E7%90%86-npm/</link><pubDate>Wed, 15 May 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/%E5%8C%85%E7%AE%A1%E7%90%86-npm/</guid><description>&lt;h2 id="版本管理">版本管理&lt;a class="anchor" href="#%e7%89%88%e6%9c%ac%e7%ae%a1%e7%90%86">#&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>&lt;code>~&lt;/code>: 当安装依赖时获取到有新版本时，安装到 &lt;code>x.y.z&lt;/code> 中 &lt;code>z&lt;/code> 的最新的版本。即保持主版本号、次版本号不变的情况下，保持修订号的最新版本。&lt;/li>
&lt;li>&lt;code>^&lt;/code>: 当安装依赖时获取到有新版本时，安装到 &lt;code>x.y.z&lt;/code> 中 &lt;code>y&lt;/code> 和 &lt;code>z&lt;/code> 都为最新版本。 即保持主版本号不变的情况下，保持次版本号、修订版本号为最新版本。&lt;/li>
&lt;/ul>
&lt;p>参考文档：&lt;/p></description></item><item><title>内置对象</title><link>https://yindongliang.com/docs/Frontend/Global_Objects/</link><pubDate>Sun, 02 Jan 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/Global_Objects/</guid><description>&lt;p>JavaScript 没有标准库，但是有一些&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects">内置对象&lt;/a>，可以不需要导入就使用一些类似其他语言的标准库的方法。&lt;/p>
&lt;h2 id="object">Object&lt;a class="anchor" href="#object">#&lt;/a>&lt;/h2>
&lt;h3 id="assign">assign&lt;a class="anchor" href="#assign">#&lt;/a>&lt;/h3>
&lt;h3 id="keys">keys&lt;a class="anchor" href="#keys">#&lt;/a>&lt;/h3>
&lt;h3 id="hasownproperty">hasOwnProperty&lt;a class="anchor" href="#hasownproperty">#&lt;/a>&lt;/h3>
&lt;p>判断 key 是否在对象中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">function&lt;/span> &lt;span style="color:#aa89ea">main&lt;/span>&lt;span style="color:#abb2bf">()&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>&lt;span style="color:#aa89ea">hello&lt;/span>&lt;span style="color:#54b1c7">:&lt;/span> &lt;span style="color:#63c381">&amp;#34;world&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;hello&amp;#34;&lt;/span> &lt;span style="color:#76a9f9">in&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">console&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">log&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;has 1&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">hasOwnProperty&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;hello&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">))&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">console&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">log&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;has 2&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">// output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">// has 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">// has 2
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="undefined">undefined&lt;a class="anchor" href="#undefined">#&lt;/a>&lt;/h2>
&lt;p>undefined 表示的是一个变量为初始化时没有被赋值，得到的就是 &lt;code>undefined&lt;/code>。&lt;/p></description></item><item><title>React</title><link>https://yindongliang.com/docs/Frontend/react/</link><pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/react/</guid><description>&lt;h2 id="jsx">JSX&lt;a class="anchor" href="#jsx">#&lt;/a>&lt;/h2>
&lt;h3 id="classname">className&lt;a class="anchor" href="#classname">#&lt;/a>&lt;/h3>
&lt;h2 id="props">props&lt;a class="anchor" href="#props">#&lt;/a>&lt;/h2>
&lt;p>组件无论是使用函数声明还是通过 class 声明，都决不能修改自身的 props。所有 React 组件都必须像纯函数一样保护它们的 props 不被更改。&lt;/p>
&lt;p>建议从组件本身的角度来命名 props 而不是它被使用的上下文环境。&lt;/p></description></item><item><title>构建工具</title><link>https://yindongliang.com/docs/Frontend/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/</link><pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/</guid><description>&lt;h2 id="参考">参考&lt;a class="anchor" href="#%e5%8f%82%e8%80%83">#&lt;/a>&lt;/h2>
&lt;p>文档 &lt;a href="https://webpack.docschina.org">https://webpack.docschina.org&lt;/a>&lt;/p>
&lt;p>demo &lt;a href="https://github.com/ruanyf/webpack-demos">https://github.com/ruanyf/webpack-demos&lt;/a>&lt;/p>
&lt;h2 id="构建一般做哪些事情">构建一般做哪些事情？&lt;a class="anchor" href="#%e6%9e%84%e5%bb%ba%e4%b8%80%e8%88%ac%e5%81%9a%e5%93%aa%e4%ba%9b%e4%ba%8b%e6%83%85">#&lt;/a>&lt;/h2>
&lt;p>代码转换：将 TypeScript 编译成 JavaScript、将 SCSS 编译成 CSS 等。&lt;/p>
&lt;p>文件优化：压缩 JavaScript、CSS、HTML 代码，压缩合并图片等。&lt;/p>
&lt;p>代码分割：提取多个页面的公共代码，提取首屏不需要执行部分的代码让其异步加载。&lt;/p></description></item><item><title>Vue</title><link>https://yindongliang.com/docs/Frontend/vue/</link><pubDate>Fri, 21 May 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/vue/</guid><description>&lt;h2 id="模板语法">模板语法&lt;a class="anchor" href="#%e6%a8%a1%e6%9d%bf%e8%af%ad%e6%b3%95">#&lt;/a>&lt;/h2>
&lt;p>Mustache 语法不能作用在 HTML attribute 上，遇到这种情况应该使用 &lt;a href="https://cn.vuejs.org/v2/api/#v-bind">&lt;code>v-bind&lt;/code> 指令&lt;/a>来给 attribute 赋值一个变量。&lt;/p>
&lt;p>v-model&lt;/p>
&lt;p>v-bind:key&lt;/p>
&lt;h2 id="data">data&lt;a class="anchor" href="#data">#&lt;/a>&lt;/h2>
&lt;p>以 &lt;code>$data&lt;/code> 的形式存储在组件实例中。为方便起见，该对象的任何顶级 property 也会直接通过组件实例暴露出来&lt;/p></description></item><item><title/><link>https://yindongliang.com/docs/Frontend/Angular/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/Angular/</guid><description/></item><item><title/><link>https://yindongliang.com/docs/Frontend/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7/</guid><description>&lt;h2 id="d3js">D3.js&lt;a class="anchor" href="#d3js">#&lt;/a>&lt;/h2>
&lt;h2 id="chartjs">Chart.js&lt;a class="anchor" href="#chartjs">#&lt;/a>&lt;/h2>
&lt;h2 id="threejs">Three.js&lt;a class="anchor" href="#threejs">#&lt;/a>&lt;/h2></description></item><item><title/><link>https://yindongliang.com/docs/Frontend/%E6%8F%92%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/%E6%8F%92%E4%BB%B6/</guid><description>&lt;h2 id="prettier">Prettier&lt;a class="anchor" href="#prettier">#&lt;/a>&lt;/h2>
&lt;h2 id="eslint">ESLint&lt;a class="anchor" href="#eslint">#&lt;/a>&lt;/h2></description></item><item><title>Deno</title><link>https://yindongliang.com/docs/Frontend/Deno/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/Deno/</guid><description>&lt;p>&lt;a href="https://manual.deno.js.cn/">Deno中文手册&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://llever.com/deno-website-zh/manual.html">Deno手册&lt;/a>&lt;/p>
&lt;h2 id="命令行">命令行&lt;a class="anchor" href="#%e5%91%bd%e4%bb%a4%e8%a1%8c">#&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>&lt;code>--allow-read&lt;/code>：打开读权限，可以指定可读的目录，比如&lt;code>--allow-read=/temp&lt;/code>。&lt;/li>
&lt;li>&lt;code>--allow-write&lt;/code>：打开写权限。&lt;/li>
&lt;li>&lt;code>--allow-net=google.com&lt;/code>：允许网络通信，可以指定可请求的域，比如&lt;code>--allow-net=google.com&lt;/code>。&lt;/li>
&lt;li>&lt;code>--allow-env&lt;/code>：允许读取环境变量。&lt;/li>
&lt;/ul></description></item><item><title>jQuery</title><link>https://yindongliang.com/docs/Frontend/jQuery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/jQuery/</guid><description/></item><item><title>Next.js</title><link>https://yindongliang.com/docs/Frontend/Next/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/Next/</guid><description>&lt;h2 id="meta-tag">&lt;code>&amp;lt;meta&amp;gt;&lt;/code> tag&lt;a class="anchor" href="#meta-tag">#&lt;/a>&lt;/h2>
&lt;h3 id="metadata">Metadata&lt;a class="anchor" href="#metadata">#&lt;/a>&lt;/h3>
&lt;h3 id="viewport">Viewport&lt;a class="anchor" href="#viewport">#&lt;/a>&lt;/h3>
&lt;p>在 Next.js 中，&lt;code>viewport&lt;/code> 是一个 HTML &lt;code>&amp;lt;meta&amp;gt;&lt;/code> 标签的属性，用于控制网页在移动设备上的显示方式。它是响应式网页设计的一个关键组成部分，确保网页可以在不同尺寸的屏幕上正确显示。&lt;/p></description></item></channel></rss>