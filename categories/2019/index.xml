<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2019 on LYon's Blog</title><link>https://yindongliang.com/categories/2019/</link><description>Recent content in 2019 on LYon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sat, 18 Oct 2025 13:05:57 +0800</lastBuildDate><atom:link href="https://yindongliang.com/categories/2019/index.xml" rel="self" type="application/rss+xml"/><item><title>语法</title><link>https://yindongliang.com/docs/Apple/Swift/%E8%AF%AD%E6%B3%95/</link><pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Apple/Swift/%E8%AF%AD%E6%B3%95/</guid><description>&lt;h2 id="官方文档">官方文档&lt;a class="anchor" href="#%e5%ae%98%e6%96%b9%e6%96%87%e6%a1%a3">#&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://docs.swift.org/swift-book/documentation/the-swift-programming-language">官方文档：The Swift Programming Language&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://developer.apple.com/documentation/swift">https://developer.apple.com/documentation/swift&lt;/a>&lt;/p>
&lt;h2 id="语言特点">语言特点&lt;a class="anchor" href="#%e8%af%ad%e8%a8%80%e7%89%b9%e7%82%b9">#&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://www.swift.org/about/">https://www.swift.org/about/&lt;/a>&lt;/p>
&lt;p>Swift is a general-purpose programming language that’s approachable for newcomers and powerful for experts. It is fast, modern, safe, and a joy to write.&lt;/p>
&lt;h2 id="变量声明">变量声明&lt;a class="anchor" href="#%e5%8f%98%e9%87%8f%e5%a3%b0%e6%98%8e">#&lt;/a>&lt;/h2>
&lt;p>swift 使用 &lt;code>let&lt;/code> 来声明常量，使用 &lt;code>var&lt;/code> 来声明变量。常量只能赋值一次。即：&lt;code>let&lt;/code> 的内存地址不能变，&lt;code>var&lt;/code> 的内存地址可变。&lt;/p></description></item><item><title>学习钢琴半年的体会</title><link>https://yindongliang.com/posts/learn-piano/</link><pubDate>Fri, 27 Dec 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/learn-piano/</guid><description>&lt;p>婚礼上为了给媳妇制造一个印象深刻的惊喜，我提前三个月去学了钢琴，现在回想起来也算是一件有意思的事情。6 月底报名后，经过和钢琴老师的讨论，对于我这种零基础短期想突击的，同时后期还想继续学下去的，最后老师推荐了我《月亮代表我的心》，尤其在老师弹了以后我自己也觉得这首曲子非常好。&lt;/p></description></item><item><title>Github Actions 实践总结</title><link>https://yindongliang.com/posts/use-github-action/</link><pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/use-github-action/</guid><description>&lt;p>Github Actions 发布有一段时间了，自己用的也挺嗨，过来总结一下。我主要在两个地方用到了，一个是博客，另一个是打包、发布前端项目。整体功能上 Actions 和 &lt;a href="https://docs.gitlab.com/ee/ci/">GitLab CI/CD&lt;/a> 差不多，同样实现了项目的自动化测试、打包、部署，不过 Actions 利用了 GitHub 开源项目平台的特点，提供了 &lt;a href="https://github.com/marketplace">Marketplace&lt;/a>，可以直接复用其他作者的 Action。&lt;/p></description></item><item><title>Redis 实现布隆过滤器</title><link>https://yindongliang.com/posts/bloom-filter/</link><pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/bloom-filter/</guid><description>&lt;p>布隆过滤器（Bloom Filter，BF），能够确定一个东西&lt;strong>一定不存在或可能存在&lt;/strong>，常用于在海量并发情况下防止缓存击穿，相比较传统的 List、Set、Map 数据结构，布隆过滤器能够在大数据量的情况下，相比其他结构更能节省大量的内存空间。&lt;/p></description></item><item><title>Redis 基础知识</title><link>https://yindongliang.com/posts/redis-101/</link><pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/redis-101/</guid><description>&lt;h2 id="redis-介绍">Redis 介绍&lt;a class="anchor" href="#redis-%e4%bb%8b%e7%bb%8d">#&lt;/a>&lt;/h2>
&lt;h3 id="历史">历史&lt;a class="anchor" href="#%e5%8e%86%e5%8f%b2">#&lt;/a>&lt;/h3>
&lt;blockquote class='book-hint '>
&lt;p>Redis 是一个使用 ANSI C 编写的开源、支持网络、基于内存、分布式、可选持久性的键值对存储数据库，由来自意大利西西里岛的 Salvatore Sanfilippo（Antirez）发起并编写。从2015年6月开始，Redis 的开发由 Redis Labs 赞助，而2013年5月至2015年6月期间，其开发由 Pivotal 赞助。在2013年5月之前，其开发由 VMware 赞助。根据月度排行网站 DB-Engines.com 的数据，Redis 是最流行的键值对存储数据库。&lt;/p></description></item><item><title>使用 Django 查询数据库的分表</title><link>https://yindongliang.com/posts/django-query-splited-table/</link><pubDate>Fri, 18 Oct 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/django-query-splited-table/</guid><description>&lt;h2 id="业务背景">业务背景&lt;a class="anchor" href="#%e4%b8%9a%e5%8a%a1%e8%83%8c%e6%99%af">#&lt;/a>&lt;/h2>
&lt;p>最近已经转到 Go 下面进行日常工作的开发，我的一个后台项目有一些内部轻量的数据查询需要，考虑需求的复杂度不高，就平常自己和同事几个人使用，没必要专门开发一个前端项目来进行数据查询，于是我想到了老本行 Django，由于 Django 出色的后台管理功能，我几乎不用做多少开发，只需要配置下 Model 层结构就可以了，唯一的问题就是这个 Go 项目的数据在数据库中是分表管理的。&lt;/p></description></item><item><title>说说实际工作中 GraphQL 的使用体验</title><link>https://yindongliang.com/posts/talk-about-graphql/</link><pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/talk-about-graphql/</guid><description>&lt;h2 id="背景">背景&lt;a class="anchor" href="#%e8%83%8c%e6%99%af">#&lt;/a>&lt;/h2>
&lt;p>接触 GraphQL 是工作中需要有一个项目，用来聚合内部很多其他微服务的接口然后统一暴露给外部使用，在这样的场景下，对项目有几点需求：&lt;/p>
&lt;ul>
&lt;li>能够让外部业务方对接方便，当然最好有接口文档。&lt;/li>
&lt;li>各个业务方可以根据他们自己的需要自己选择字段集合。&lt;/li>
&lt;li>项目提供的接口可以被不同的语言框架通过 HTTP 调用，比如前端、Python、Go 等。&lt;/li>
&lt;/ul>
&lt;p>基于以上的需求，在组内一位大神的提议下，顺理成章的使用了 GraphQL 作为解决方案，经过半年多的迭代维护，今天特来从后端角度说下使用体验。&lt;/p></description></item><item><title>UTF、Unicode 和 ASCII 编码的关系</title><link>https://yindongliang.com/posts/utf-unicode-ascii/</link><pubDate>Fri, 20 Sep 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/utf-unicode-ascii/</guid><description>&lt;p>说 UTF 需要先说 Unicode，而说 Unicode 需要先说 ASCII，这三者正好是历史的发展一步步进化而来的，是计算机领域为了解决全世界各种文字之间的编码统一问题而给出的通用解决方案。&lt;/p></description></item><item><title>AES 对称加密学习笔记</title><link>https://yindongliang.com/posts/aes-notes/</link><pubDate>Fri, 26 Apr 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/aes-notes/</guid><description>&lt;p>工作中的需求，需要一个基于 Django 的数据脱敏解决方案，我们的目标是要用 AES 对称加密算法，接入不能影响现有业务逻辑，数据迁移方便，失败可以回滚，最好可以开源。经过调研与开发，我最终产出了一个开源项目：&lt;a href="https://github.com/luojilab/django-mirage-field">luojilab/django-mirage-field&lt;/a>，目前已经有 50+ star。本篇即为学习对称加密算法的笔记。&lt;/p></description></item></channel></rss>