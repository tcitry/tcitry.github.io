<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2023 on LYon's Blog</title><link>https://yindongliang.com/categories/2023/</link><description>Recent content in 2023 on LYon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sat, 18 Oct 2025 13:05:57 +0800</lastBuildDate><atom:link href="https://yindongliang.com/categories/2023/index.xml" rel="self" type="application/rss+xml"/><item><title>语言基础</title><link>https://yindongliang.com/docs/Rust/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 08 Apr 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Rust/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/</guid><description>&lt;p>&lt;a href="https://www.rust-lang.org/">Rust&lt;/a> 是一门注重安全（safety）、速度（speed）和并发（concurrency）的现代系统编程语言。Rust 通过内存安全来实现以上目标，但不使用垃圾回收机制（garbage collection, GC）。&lt;/p></description></item><item><title>我的 2023 年总结</title><link>https://yindongliang.com/posts/review-2023/</link><pubDate>Sun, 31 Dec 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/review-2023/</guid><description>&lt;blockquote class='book-hint '>
&lt;p>播放配乐 Blowing in the Wind - Bob Dylan，阅读效果更佳。&lt;/p>&lt;/blockquote>&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=566993785&amp;auto=1&amp;height=66">&lt;/iframe>
&lt;p>2023 这一年，工作上相当生活，生活上相当工作。&lt;/p>
&lt;h2 id="生活">生活&lt;a class="anchor" href="#%e7%94%9f%e6%b4%bb">#&lt;/a>&lt;/h2>
&lt;p>因为生活上相当工作，所以我觉得还是先说生活，琐事我断断续续记录在了周报里，这里就不再重复，只说重点。&lt;/p></description></item><item><title>看完了风骚律师</title><link>https://yindongliang.com/weekly/2023/2023-W51/</link><pubDate>Mon, 18 Dec 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2023/2023-W51/</guid><description>&lt;p>断断续续看完了整部《风骚律师》（Better Call Saul），因为也不是一直在电视前认认真真看，有一些没看懂，以至于又回头看了一些，发现还是比较模糊，很多场景和铺垫不能完全理解，不过问题不大，我已经知道了故事的大致脉络，以及每个人的结局。比较兴奋的彩蛋就是最后“小粉”、“老白”都出场了，我已知足，毕竟《绝命毒师》（Breaking Bad）是我心目中四两拨千斤的神作。&lt;/p></description></item><item><title>Python 潮流周刊</title><link>https://yindongliang.com/weekly/2023/2023-W49/</link><pubDate>Mon, 04 Dec 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2023/2023-W49/</guid><description>&lt;p>小家装修进入最后收尾阶段，业余时间非常忙，好像这半年来都一直很忙。还有，付费了 ChatGPT 4.0，有点小贵，但是实在是太强大了。&lt;/p>
&lt;h2 id="发现">发现&lt;a class="anchor" href="#%e5%8f%91%e7%8e%b0">#&lt;/a>&lt;/h2>
&lt;p>A Modern Redis GUI Client，社区反响很好&lt;br>
&lt;a href="https://github.com/tiny-craft/tiny-rdm">https://github.com/tiny-craft/tiny-rdm&lt;/a>&lt;/p></description></item><item><title>读完《明朝那些事儿》</title><link>https://yindongliang.com/weekly/2023/2023-W43/</link><pubDate>Mon, 23 Oct 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2023/2023-W43/</guid><description>&lt;p>《明朝那些事儿》算是读完了，对明朝有了一个整体的认识，故事很精彩，看到了无数人出场，无数个走向，无数个结局，故事里有权力、希望、痛苦、愤怒、犹豫、冷漠、热情、刚强、软弱、气节、度量、孤独、残暴、宽恕、忍耐、邪恶、正义、真理、坚持、妥协、善良、忠诚。&lt;/p></description></item><item><title>Spark</title><link>https://yindongliang.com/docs/Linux/Spark/</link><pubDate>Mon, 16 Oct 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Linux/Spark/</guid><description>&lt;p>Spark 是内存密集型的分布式大数据计算引擎。Apache Spark™ is a multi-language &lt;strong>engine&lt;/strong> for executing data engineering, data science, and machine learning on single-node machines or clusters&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>Spark 生态圈以 Spark Core 为核心，支持从 HDFS、Amazon S3、HBase、ElasticSearch、MongoDB、MySQL、Kafka 等多种数据源读取数据。同时，Spark 支持以 Standalone、Hadoop YARN、Apache Mesos、Kubernetes 为资源管理器调度任务，从而完成 Spark 应用程序的计算任务。&lt;/p></description></item><item><title>名家写作经验</title><link>https://yindongliang.com/weekly/2023/2023-W41/</link><pubDate>Mon, 09 Oct 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2023/2023-W41/</guid><description>&lt;p>读到《明朝那些事儿（第六部）》，开始强烈意识到，明代主宰历史进程的好像并不是那些皇帝，而是那些官员。读历史应该重点关注这些官员们，他们是可以学习和参考的对象，不同的官员在不同的历史大环境、个人小环境中有不同的选择，他们的结局也就各不相同。&lt;/p></description></item><item><title>历史年轮</title><link>https://yindongliang.com/weekly/2023/2023-W38/</link><pubDate>Mon, 18 Sep 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2023/2023-W38/</guid><description>&lt;p>看完了《明朝那些事儿》的（一）和（二），正在看（三），虽然之前上学时断断续续看了一些，但这次是相对成熟时期重新阅读，当年明月的表达方式，很有意思，就像一个北京的知识青年（未来的北京大爷）坐在胡同口认真跟你聊那些事，重点是遇到关键的情节有提示、有分析、有总结。&lt;/p></description></item><item><title>海边的卡夫卡</title><link>https://yindongliang.com/weekly/2023/2023-W34/</link><pubDate>Mon, 21 Aug 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2023/2023-W34/</guid><description>&lt;p>看完了《海边的卡夫卡》（2002），感觉这类小说没必要写什么读后感了，作者也说了，只是想写一个开局是一个立志成为“世界上最顽强的十五岁少年”，剩下的就全靠编的故事。不过接下来要看的书更多了。。比如：&lt;/p></description></item><item><title>最近读村上春树</title><link>https://yindongliang.com/weekly/2023/2023-W29/</link><pubDate>Mon, 17 Jul 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2023/2023-W29/</guid><description>&lt;p>近期读村上春树。还是比较喜欢村上的作品，有几点原因：一是几乎都是青年主题，谁的内心还不是个孩子呢；二是第一人称叙事非常有代入感，好像这个人就是我自己；三是文风能和我心理状态对上号，看事情的视角、思考方式、人物做法都非常好理解。当然林少华的翻译也很走心（不过貌似有人说林少华喜欢自己发挥意境😂）。&lt;/p></description></item><item><title>关于装修和风水</title><link>https://yindongliang.com/weekly/2023/2023-W25/</link><pubDate>Mon, 19 Jun 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2023/2023-W25/</guid><description>&lt;p>最近看了好几本室内装修和风水学的书，关于风水，从科学角度目前能认识到的是，很多时候风水是通过尽量避免遇到自然灾害中的要冲位、以及减小发生家人间尴尬（进而导致冲突）的概率等方式，在长期的心理稳定中去形成的个人和家庭成员的日常心态，灌输一些潜意识，让你时刻内心舒适，从而达成事业上的“运势”目标。一个稳定乐观积极的心态和情绪永远比经常担惊受怕好得多，心态、情绪不光对运势重要，对身体也很重要。所以风水很有用，而且它的知识结构很成体系，只是看待事物的角度要从易经等这样的传统文化出发，而这些东西几千年下来已经总结成教条、规则，所以给人以神秘、刻板、没有逻辑的印象，让一些人嗤之以鼻。&lt;/p></description></item><item><title>Linux 运维</title><link>https://yindongliang.com/docs/Linux/Linux-%E8%BF%90%E7%BB%B4/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Linux/Linux-%E8%BF%90%E7%BB%B4/</guid><description>&lt;h2 id="权限系统">权限系统&lt;a class="anchor" href="#%e6%9d%83%e9%99%90%e7%b3%bb%e7%bb%9f">#&lt;/a>&lt;/h2>
&lt;p>Linux 系统使用一个专门的 &lt;code>/etc/passwd&lt;/code> 文件来匹配登录名与对应的 UID 值，用户密码不保存在此文件，而是在 &lt;code>/etc/shadow&lt;/code> 中，只有特定程序或 root 才可以访问。&lt;/p>
&lt;h3 id="用户管理">用户管理&lt;a class="anchor" href="#%e7%94%a8%e6%88%b7%e7%ae%a1%e7%90%86">#&lt;/a>&lt;/h3>
&lt;p>使用 &lt;code>useradd&lt;/code> 来创建新用户，&lt;code>userdel&lt;/code> 来删除用户，&lt;code>usermod&lt;/code> 来修改用户信息。&lt;/p></description></item><item><title>R.I.P. 纪念左耳朵耗子</title><link>https://yindongliang.com/weekly/2023/2023-W20/</link><pubDate>Mon, 15 May 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2023/2023-W20/</guid><description>&lt;p>周一惊闻左耳朵耗子去世，感慨万千，摸鱼时经常去翻酷壳，耗子叔一直都保持了非常高的更新频率，内容质量更是没的说，如今算是留下了大量的互联网资产。但人固有一死，逝者已矣，在我看来此时所有的身外之物可能都没有这个站点珍贵，这也就是写博客的意义吧。&lt;/p></description></item><item><title>读长安的荔枝</title><link>https://yindongliang.com/weekly/2023/2023-W19/</link><pubDate>Mon, 08 May 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2023/2023-W19/</guid><description>&lt;p>五一回老家，爷爷奶奶第一句话竟然是我瘦了，不知是工作忙还是拔牙的原因，总之让快八十的老人心疼实属不该。&lt;/p>
&lt;p>花了 999 买了一个海信 Hi Reader 阅读器，6.7 寸墨水屏，爱不释手，这台机器去年官方卖到了 1799 性价比太低，现在可以入手了。同时横向对比了 墨案 Plus 等几台迷你阅读器，最终还是决定这款，也算解决了我之前的 7.8 寸阅读器放不进口袋的便携问题。与之前的阅读器相比，这一款屏幕明显好多了，而且可以自动调节亮度，用上就回不去了。&lt;/p></description></item><item><title>读纳瓦尔宝典</title><link>https://yindongliang.com/weekly/2023/2023-W15/</link><pubDate>Thu, 20 Apr 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2023/2023-W15/</guid><description>&lt;p>最近发烧，按时吃药中 💊。三月底刚送走甲流，四月拔了一颗横向阻生智齿，发炎又烧了一周，还好不至于去输液，拔完第二天又开始张口受限，吃不了好东西，这两个月过得着实有点遭罪，下个月计划还要再拔另一侧的同款智齿。。&lt;/p></description></item><item><title>可视化工具</title><link>https://yindongliang.com/docs/Python/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 10 Apr 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Python/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7/</guid><description>&lt;h2 id="matplotlib">Matplotlib&lt;a class="anchor" href="#matplotlib">#&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://matplotlib.org/">https://matplotlib.org/&lt;/a>&lt;/p>
&lt;h3 id="基本概念">基本概念&lt;a class="anchor" href="#%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5">#&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import&lt;/span> &lt;span style="color:#ca72ff">matplotlib.pyplot&lt;/span> &lt;span style="color:#76a9f9">as&lt;/span> &lt;span style="color:#ca72ff">plt&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">fig&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#aa89ea">ax&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">plt&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">subplots&lt;/span>&lt;span style="color:#abb2bf">()&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># Create a figure containing a single axes.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">ax&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">plot&lt;/span>&lt;span style="color:#abb2bf">([&lt;/span>&lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">2&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">3&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">4&lt;/span>&lt;span style="color:#abb2bf">],&lt;/span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">4&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">2&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">3&lt;/span>&lt;span style="color:#abb2bf">]);&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># Plot some data on the axes.&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>plt.plot(x, y)&lt;/code> 用绘制图形，&lt;code>plt.show()&lt;/code> 用于显示图形，但是在 &lt;code>Jupyter&lt;/code> 中，即使没有 &lt;code>show()&lt;/code> 也会显示出来。&lt;/p>
&lt;h3 id="二维数据">二维数据&lt;a class="anchor" href="#%e4%ba%8c%e7%bb%b4%e6%95%b0%e6%8d%ae">#&lt;/a>&lt;/h3>
&lt;p>pcolor&lt;/p>
&lt;h3 id="三维图形">三维图形&lt;a class="anchor" href="#%e4%b8%89%e7%bb%b4%e5%9b%be%e5%bd%a2">#&lt;/a>&lt;/h3>
&lt;p>surface&lt;/p>
&lt;h2 id="seaborn">Seaborn&lt;a class="anchor" href="#seaborn">#&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://github.com/mwaskom/seaborn">https://github.com/mwaskom/seaborn&lt;/a>&lt;/p>
&lt;p>Seaborn 是一个基于 Matplotlib 的高级可视化库，提供了更美观、更复杂的图表，支持绘制统计图、分类图、时间序列图、热力图、小提琴图等。&lt;/p></description></item><item><title>命令行</title><link>https://yindongliang.com/docs/Rust/%E5%91%BD%E4%BB%A4%E8%A1%8C/</link><pubDate>Sat, 08 Apr 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Rust/%E5%91%BD%E4%BB%A4%E8%A1%8C/</guid><description>&lt;p>&lt;a href="https://rust-cli.github.io/book/index.html">Command Line Applications in Rust&lt;/a>&lt;/p>
&lt;h2 id="rustup">Rustup&lt;a class="anchor" href="#rustup">#&lt;/a>&lt;/h2>
&lt;p>Rustup: the Rust installer and version management tool&lt;/p>
&lt;p>通过 Rustup 安装 Rust 并管理不同版本。&lt;/p>
&lt;h2 id="cargo">Cargo&lt;a class="anchor" href="#cargo">#&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://doc.rust-lang.org/cargo/index.html">The Cargo Book&lt;/a>&lt;/p>
&lt;p>the Rust build tool and package manager&lt;/p>
&lt;p>When you install Rustup you’ll also get the latest stable version of the Rust build tool and package manager, also known as Cargo. Cargo does lots of things:&lt;/p></description></item><item><title>人件</title><link>https://yindongliang.com/docs/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/peopleware/</link><pubDate>Mon, 27 Mar 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/peopleware/</guid><description>&lt;p>谁最应该看这本书？我认为答案是程序员的管理者。很难想象，这本《人件》（Peopleware）是一本最初于 1987 年出版软件工程领域的书，1992 年出版了第二版，2003 年开始在国内发行，现在 2023 年通读一遍依然能够产生强烈认同。所以，这 35 年间到底发生了什么，什么才是永恒的。但并不是意味着我应该早点读到这本书里似乎“永恒”的道理，现在我刚好有几年的开发经验，也许如今才正是时候。&lt;/p></description></item><item><title>对 ChatGPT 的思考</title><link>https://yindongliang.com/weekly/2023/2023-W12/</link><pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2023/2023-W12/</guid><description>&lt;p>自从把 ChatGPT 接入飞书之后，使用起来就方便很多，也引发了更多的思考，一直到现在，最主要的反应还是恐慌和兴奋。而且随着 ChatGPT 4.0 公布的强大能力，加上微软已经宣布要集成到 Office 等等一系列动作，AI 参与到人们日常工作中的进展正在以意料之外的速度攻城略地，我相信现在能使用到 ChatGPT 的各种圈子应该都很兴奋和恐慌，显然它的能力到底有多大目前是未知的。&lt;/p></description></item><item><title>tar 命令中的绝对路径和相对路径使用注意</title><link>https://yindongliang.com/posts/tar-absolute-and-relative-path/</link><pubDate>Tue, 14 Mar 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/tar-absolute-and-relative-path/</guid><description>&lt;p>&lt;code>tar&lt;/code> 命令是在 Linux 操作系统中用于打包和压缩文件的命令，先看下基本使用，然后再讨论相对路径和绝对路径的问题。&lt;/p>
&lt;h2 id="基本使用方法">基本使用方法&lt;a class="anchor" href="#%e5%9f%ba%e6%9c%ac%e4%bd%bf%e7%94%a8%e6%96%b9%e6%b3%95">#&lt;/a>&lt;/h2>
&lt;h3 id="压缩">压缩&lt;a class="anchor" href="#%e5%8e%8b%e7%bc%a9">#&lt;/a>&lt;/h3>
&lt;p>要将多个文件打包成一个文件，可以使用以下命令：&lt;/p></description></item><item><title>把玩 AirCode</title><link>https://yindongliang.com/weekly/2023/2023-W11/</link><pubDate>Mon, 13 Mar 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2023/2023-W11/</guid><description>&lt;h2 id="chatgpt">ChatGPT&lt;a class="anchor" href="#chatgpt">#&lt;/a>&lt;/h2>
&lt;p>这一波真的有点慌。周六使用这个&lt;a href="https://github.com/bestony/ChatGPT-Feishu">项目&lt;/a> 搭建了一个飞书连接 ChatGPT 的机器人，这样使用起来就不担心网络原因了，项目使用了&lt;a href="https://aircode.io/">AirCode&lt;/a> 转发请求到 ChatGPT API，又发现了一个新的好玩的东西。&lt;/p></description></item><item><title>Python 的 dict.fromkeys 的坑</title><link>https://yindongliang.com/posts/python-dict-fromkeys/</link><pubDate>Fri, 10 Mar 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/python-dict-fromkeys/</guid><description>&lt;p>目前使用到 &lt;code>dict.fromkeys&lt;/code> 方法主要有两个场景：一个是按照数组的原有顺序去重，另一个就是正常的根据 &lt;code>keys&lt;/code> 构建一个 &lt;code>dict&lt;/code>，这里讨论的是第二种情况。&lt;/p>
&lt;p>下面这个例子：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">l&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#63c381">&amp;#34;foo&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#63c381">&amp;#34;bar&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">v&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>&lt;span style="color:#63c381">&amp;#34;age&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span> &lt;span style="color:#d19a66">0&lt;/span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">d&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#e5c07b">dict&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">fromkeys&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">l&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#aa89ea">v&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">d&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#63c381">&amp;#34;foo&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">][&lt;/span>&lt;span style="color:#63c381">&amp;#34;age&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span> &lt;span style="color:#54b1c7">+=&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">d&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#63c381">&amp;#34;bar&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">][&lt;/span>&lt;span style="color:#63c381">&amp;#34;age&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span> &lt;span style="color:#54b1c7">+=&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">d&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#63c381">&amp;#34;foo&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">][&lt;/span>&lt;span style="color:#63c381">&amp;#34;age&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>由于 Python 在 &lt;code>v&lt;/code> 处存储的是引用而不是值的原因，故 &lt;code>d[&amp;quot;foo&amp;quot;][&amp;quot;age&amp;quot;]&lt;/code> 最终的值为 2，如果用 &lt;code>id()&lt;/code> 方法打印两个对象的地址，可以发现是同一个值。&lt;/p></description></item><item><title>苹果为了安全让 M2 吃灰</title><link>https://yindongliang.com/weekly/2023/2023-W10/</link><pubDate>Mon, 06 Mar 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2023/2023-W10/</guid><description>&lt;p>拖延症犯了，本周才看完《献给阿尔吉侬的花束》这本书，今年第二本。上一本是《1984》，还是在回山东过年的火车上看完的。想了一下，阅读效率变低的原因一方面通勤从地铁改成了开车，每天的固定阅读时间没了；另一方面就是最近工作比较多。&lt;/p></description></item><item><title>周末试玩 Notion AI</title><link>https://yindongliang.com/weekly/2023/2023-W08/</link><pubDate>Mon, 20 Feb 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2023/2023-W08/</guid><description>&lt;p>&lt;img src="https://cdn.yindongliang.com/2023/notionai-demo.gif" alt="Notion AI demo" />&lt;/p>
&lt;p>AI 能够带给我们的想象太多了，兴许以后的写作都可以借助 AI 提供一些“帮助”了。&lt;/p></description></item><item><title>本站支持了 Mermaid</title><link>https://yindongliang.com/weekly/2023/2023-W07/</link><pubDate>Mon, 13 Feb 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2023/2023-W07/</guid><description>&lt;p>恭喜 Time 代表中国拿到星际 2 世界级冠军，这也是中国电竞选手在《星际争霸2》电竞项目上夺得的首个世界冠军。当年高中的时候星际 2 简直是我做梦时都在玩的游戏，从十二年前在大陆发行当天开始，一直断断续续玩到今天，今年年初又遭遇了暴雪和网易解除合作，星际 2 命途多舛，时过境迁，物是人非，自己的国家服务器都没了，但是作为老玩家的我们看到 Time 此时还能够战胜多名韩国顶尖选手拿到世界冠军应该都会不禁猛男落泪。&lt;/p></description></item></channel></rss>