<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2022 on LYon's Blog</title><link>https://yindongliang.com/categories/2022/</link><description>Recent content in 2022 on LYon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 22 Oct 2025 19:25:35 +0800</lastBuildDate><atom:link href="https://yindongliang.com/categories/2022/index.xml" rel="self" type="application/rss+xml"/><item><title>链表（Linked list）</title><link>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/</link><pubDate>Fri, 06 May 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/</guid><description>&lt;h2 id="基本概念">基本概念&lt;a class="anchor" href="#%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5">#&lt;/a>&lt;/h2>
&lt;h3 id="单向链表">单向链表&lt;a class="anchor" href="#%e5%8d%95%e5%90%91%e9%93%be%e8%a1%a8">#&lt;/a>&lt;/h3>
&lt;h4 id="javascript">JavaScript&lt;a class="anchor" href="#javascript">#&lt;/a>&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">function&lt;/span> &lt;span style="color:#aa89ea">ListNode&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">val&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#aa89ea">next&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">this&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">val&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">val&lt;/span> &lt;span style="color:#54b1c7">===&lt;/span> &lt;span style="color:#e5c07b">undefined&lt;/span> &lt;span style="color:#54b1c7">?&lt;/span> &lt;span style="color:#d19a66">0&lt;/span> &lt;span style="color:#54b1c7">:&lt;/span> &lt;span style="color:#aa89ea">val&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">this&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">next&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">next&lt;/span> &lt;span style="color:#54b1c7">===&lt;/span> &lt;span style="color:#e5c07b">undefined&lt;/span> &lt;span style="color:#54b1c7">?&lt;/span> &lt;span style="color:#e5c07b">null&lt;/span> &lt;span style="color:#54b1c7">:&lt;/span> &lt;span style="color:#aa89ea">next&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="golang">Golang&lt;a class="anchor" href="#golang">#&lt;/a>&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">type&lt;/span> &lt;span style="color:#aa89ea">ListNode&lt;/span> &lt;span style="color:#76a9f9">struct&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Val&lt;/span> &lt;span style="color:#e5c07b">int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Next&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#aa89ea">ListNode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="双向链表">双向链表&lt;a class="anchor" href="#%e5%8f%8c%e5%90%91%e9%93%be%e8%a1%a8">#&lt;/a>&lt;/h3>
&lt;p>双向链表在单向链表节点的基础上增加了指向前一个节点的指针，这样一来，既可以从头节点开始从前往后遍历到尾节点，也可以从尾节点开始从后往前遍历到头节点。&lt;/p></description></item><item><title>数组（Array）</title><link>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E7%BB%84/</link><pubDate>Thu, 19 May 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E7%BB%84/</guid><description>&lt;h2 id="一维数组">一维数组&lt;a class="anchor" href="#%e4%b8%80%e7%bb%b4%e6%95%b0%e7%bb%84">#&lt;/a>&lt;/h2>
&lt;p>数组常被用来当做栈、堆和队列的容器，除此之外，大多是单纯只涉及数组的题目。&lt;/p>
&lt;p>特点：&lt;/p>
&lt;ol>
&lt;li>支持下标&lt;/li>
&lt;li>支持切片&lt;/li>
&lt;li>有固定长度或可变长度&lt;/li>
&lt;/ol>
&lt;h2 id="应用场景">应用场景&lt;a class="anchor" href="#%e5%ba%94%e7%94%a8%e5%9c%ba%e6%99%af">#&lt;/a>&lt;/h2>
&lt;p>数组结构很简单，但是出的题涉及的算法类型比较多，比如排序、二分法、双指针、滑动窗口，还会有一些是动态规划。&lt;/p></description></item><item><title>字符串（String）</title><link>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>&lt;p>字符串本身的数据结构并不复杂，同数组非常类似，没啥特别需要介绍的，就是题一般都不简单。&lt;/p>
&lt;p>做题需要考虑：&lt;/p>
&lt;ul>
&lt;li>有的字符串一定是 26 个字母，有的可能会包含空格。&lt;/li>
&lt;/ul>
&lt;h2 id="注意事项">注意事项&lt;a class="anchor" href="#%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a1%b9">#&lt;/a>&lt;/h2>
&lt;h3 id="golang">Golang&lt;a class="anchor" href="#golang">#&lt;/a>&lt;/h3>
&lt;p>注意：Go 的 for 循环得到的是 rune 类型的字符，需要进行转换。&lt;/p></description></item><item><title>队列（Queue）</title><link>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%98%9F%E5%88%97/</link><pubDate>Sat, 21 May 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%98%9F%E5%88%97/</guid><description>&lt;h2 id="普通队列">普通队列&lt;a class="anchor" href="#%e6%99%ae%e9%80%9a%e9%98%9f%e5%88%97">#&lt;/a>&lt;/h2>
&lt;p>队列的特点就是先进先出，后进后出。可以使用数组、链表实现队列。&lt;/p>
&lt;h3 id="队列的操作">队列的操作&lt;a class="anchor" href="#%e9%98%9f%e5%88%97%e7%9a%84%e6%93%8d%e4%bd%9c">#&lt;/a>&lt;/h3>
&lt;p>&lt;strong>插入元素&lt;/strong>（add）一般指在队列首部插入元素。&lt;/p>
&lt;p>&lt;strong>删除元素&lt;/strong>（remove）指删除队列末尾的元素。&lt;/p></description></item><item><title>栈（Stack）</title><link>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88/</link><pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88/</guid><description>&lt;h2 id="基础知识">基础知识&lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86">#&lt;/a>&lt;/h2>
&lt;p>栈是一种常用的数据结构，它最大的特点是“后入先出”，即后进入栈中的元素最先出来，为了确保“后入先出”（LIFO）的顺序，栈的插入（push）和删除（pop）操作都发生在栈顶。&lt;/p></description></item><item><title>哈希表（Hash Table）</title><link>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%93%88%E5%B8%8C%E8%A1%A8/</link><pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%93%88%E5%B8%8C%E8%A1%A8/</guid><description>&lt;h2 id="基础概念">基础概念&lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80%e6%a6%82%e5%bf%b5">#&lt;/a>&lt;/h2>
&lt;p>哈希表是一种常见的数据结构，也叫散列表。哈希表最大的优点是高效，在哈希表中插入、删除或查找一个元素都只需要 O(1) 的时间。&lt;/p>
&lt;p>因此，哈希表经常被用来优化时间效率。除了专门考散列表的题，也经常作为辅助计算的数据结构，很多时候都可以考虑是否需要借助散列表解决。比如用来记录字符串中字母出现的次数、字符串中字符出现的位置等信息。&lt;/p></description></item><item><title>C 语言基础</title><link>https://yindongliang.com/docs/Clang/C/</link><pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Clang/C/</guid><description>&lt;p>出于看一些源码的需要，比如 Redis，发现很多之前的 C 语法细节已经忘了，现在再补回来，时过境迁，现在的感觉就是 C 语言已经和当初上学看的那个东西完全不一样了，先上 hello world 镇楼。&lt;/p></description></item><item><title>二叉树（Binary Tree）</title><link>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Tue, 10 May 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>&lt;h2 id="基本概念">基本概念&lt;a class="anchor" href="#%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5">#&lt;/a>&lt;/h2>
&lt;h3 id="父节点子节点叶子节点">父节点，子节点，叶子节点&lt;a class="anchor" href="#%e7%88%b6%e8%8a%82%e7%82%b9%e5%ad%90%e8%8a%82%e7%82%b9%e5%8f%b6%e5%ad%90%e8%8a%82%e7%82%b9">#&lt;/a>&lt;/h3>
&lt;p>叶子节点： 一棵树当中没有子结点的结点称为叶子结点。&lt;/p>
&lt;h3 id="高度和深度">高度和深度&lt;a class="anchor" href="#%e9%ab%98%e5%ba%a6%e5%92%8c%e6%b7%b1%e5%ba%a6">#&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>树的高度：节点到叶子节点的最大值就是其高度。&lt;/li>
&lt;li>树的深度：高度和深度是相反的，高度是从下往上数，深度是从上往下。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>注意：&lt;/strong> 一般默认是把根节点的深度设为 1，把子节点的高度设为 1，比如 &lt;a href="https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/">104. 二叉树的最大深度&lt;/a>。在面试的时候最好要确认一下。&lt;/p></description></item><item><title>系统调用</title><link>https://yindongliang.com/docs/Clang/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/</link><pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Clang/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/</guid><description>&lt;p>Unix 操作系统通过一系列的系统调用提供服务，这些系统调用实际上是操作系统内的函数，它们可以被用户程序调用。本文介绍如何在 C 语言程序中使用一些重要的系统调用。&lt;/p></description></item><item><title>堆（Heap）</title><link>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%A0%86/</link><pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%A0%86/</guid><description>&lt;h2 id="介绍">介绍&lt;a class="anchor" href="#%e4%bb%8b%e7%bb%8d">#&lt;/a>&lt;/h2>
&lt;p>堆（heap）分为最大堆（大根堆/大顶堆）和最小堆（小根堆/小顶堆），通常用&lt;strong>完全二叉树&lt;/strong>实现，完全二叉树又可以用&lt;a href="https://yindongliang.com/docs/Algorithms/%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84/%e6%95%b0%e7%bb%84">数组&lt;/a>实现，故堆通常以数组形式进行存储，而非二叉树的链式存储。常见的堆有&lt;strong>二叉堆&lt;/strong>、&lt;strong>裴波那契堆&lt;/strong>等，通常也用堆来实现优先队列（Priority Queue）。&lt;/p>
&lt;h2 id="堆的特点">堆的特点&lt;a class="anchor" href="#%e5%a0%86%e7%9a%84%e7%89%b9%e7%82%b9">#&lt;/a>&lt;/h2>
&lt;p>堆属性非常有用，因为堆常常被当做优先队列使用，因为可以快速地访问到“最重要”的元素。&lt;/p></description></item><item><title>C 标准库</title><link>https://yindongliang.com/docs/Clang/C-%E6%A0%87%E5%87%86%E5%BA%93/</link><pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Clang/C-%E6%A0%87%E5%87%86%E5%BA%93/</guid><description>&lt;p>可能有一些想要查看的内容并不在本文的标准库，而是在&lt;a href="https://yindongliang.com/docs/Linux/%e7%b3%bb%e7%bb%9f%e6%8e%a5%e5%8f%a3/">系统接口&lt;/a>。&lt;/p>
&lt;h2 id="输入与输出-stdioh">输入与输出 &amp;lt;stdio.h&amp;gt;&lt;a class="anchor" href="#%e8%be%93%e5%85%a5%e4%b8%8e%e8%be%93%e5%87%ba-stdioh">#&lt;/a>&lt;/h2>
&lt;h3 id="printf">printf&lt;a class="anchor" href="#printf">#&lt;/a>&lt;/h3>
&lt;h3 id="scanf">scanf&lt;a class="anchor" href="#scanf">#&lt;/a>&lt;/h3>
&lt;h3 id="fprintf">fprintf&lt;a class="anchor" href="#fprintf">#&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>stdin&lt;/li>
&lt;li>stdout&lt;/li>
&lt;li>stderr&lt;/li>
&lt;/ul>
&lt;h3 id="exit">exit&lt;a class="anchor" href="#exit">#&lt;/a>&lt;/h3>
&lt;h3 id="getchar-和-putchar">getchar 和 putchar&lt;a class="anchor" href="#getchar-%e5%92%8c-putchar">#&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#include&lt;/span> &lt;span style="color:#8a93a5;font-style:italic">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">c&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">c&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#00b1f7">getchar&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">while&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">c&lt;/span> &lt;span style="color:#54b1c7">!=&lt;/span> &lt;span style="color:#aa89ea">EOF&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#00b1f7">putchar&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">c&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">c&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#00b1f7">getchar&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>getchar&lt;/code> 得到的数据在机器内部以位模式存储，char 类型专门用于存储这种字符型数据，当然 int 也可以，但是 &lt;code>getchar&lt;/code> 的返回值为 int 类型。&lt;/p></description></item><item><title>前缀树（Trie）</title><link>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%89%8D%E7%BC%80%E6%A0%91/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%89%8D%E7%BC%80%E6%A0%91/</guid><description>&lt;p>Trie 又称前缀树、字典树、单词查找树，是一种二叉树衍生出来的多叉树，通常用来保存字符串，它的节点和字符串的字符对应，而路径和字符串对应，主要应用场景是处理字符串前缀相关的操作。&lt;/p></description></item><item><title>红黑树</title><link>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%A2%E9%BB%91%E6%A0%91/</link><pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%BA%A2%E9%BB%91%E6%A0%91/</guid><description>&lt;p>红黑树也是一种&lt;strong>自平衡二叉搜索树&lt;/strong>，但不同的是，红黑树在每一个结点上增加了一个存储位来表示结点的颜色，可以是 &lt;code>Red&lt;/code> 或 &lt;code>Black&lt;/code>，通过对任何一条从根到叶子的简单路径上各个结点的颜色进行约束，红黑树确保没有一条路径会比其他路径长出 2 倍，因而是近似于平衡的。红黑树的应用非常广，比如 epoll，研究相关底层原理时最好提前了解一下。&lt;/p></description></item><item><title>B 树</title><link>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/B-tree/</link><pubDate>Sat, 27 Aug 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/B-tree/</guid><description>&lt;p>B 树是为磁盘或其他直接存取的辅助存储设备而设计的一种&lt;strong>平衡搜索树&lt;/strong>。B 树类似于红黑树，但它们在降低磁盘 I/O 操作数方面要更好一点，比如很多数据库都使用 B 树或 B 树的变种来存储信息。&lt;/p></description></item><item><title>语法</title><link>https://yindongliang.com/docs/Frontend/JavaScript/%E8%AF%AD%E6%B3%95/</link><pubDate>Sun, 02 Jan 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/JavaScript/%E8%AF%AD%E6%B3%95/</guid><description>&lt;h2 id="dombomwindowdocument">DOM、BOM、Window、Document&lt;a class="anchor" href="#dombomwindowdocument">#&lt;/a>&lt;/h2>
&lt;p>DOM 是操作文档的 API，Document 是其一个对象。&lt;/p>
&lt;p>BOM 是操作浏览器的 API，Window 是其一个对象。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">function&lt;/span> &lt;span style="color:#aa89ea">component&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">const&lt;/span> &lt;span style="color:#aa89ea">element&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#e5c07b">document&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">createElement&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;div&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">element&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">innerHTML&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">return&lt;/span> &lt;span style="color:#aa89ea">element&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">document&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">body&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">appendChild&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">component&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;hello&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ssr-vs-csr">SSR vs CSR&lt;a class="anchor" href="#ssr-vs-csr">#&lt;/a>&lt;/h2>
&lt;p>服务器渲染和客户端渲染。&lt;/p></description></item><item><title>我的 2022 年总结</title><link>https://yindongliang.com/posts/review-2022/</link><pubDate>Fri, 30 Dec 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/review-2022/</guid><description>&lt;blockquote class='book-hint '>
&lt;p>播放配乐，阅读效果更佳。&lt;/p>&lt;/blockquote>&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=1934010087&amp;auto=1&amp;height=66">&lt;/iframe>
&lt;p>转眼又到了 2022 年底，时间过得飞快，今年算是完成了几件有意义的事情，但这期间也充满了迷茫与艰难选择，内心发生了跌宕起伏的情绪变化，无论结果如何，2022 年发生的一切对我来说都是宝贵的经历。&lt;/p></description></item><item><title>Python 的四舍五入</title><link>https://yindongliang.com/weekly/2022/2022-W50/</link><pubDate>Sat, 17 Dec 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2022/2022-W50/</guid><description>&lt;p>近一个多月，从北京搬家到大连、入职新公司、收拾自己的小家、双十一采购家用电器、还有一些软装需求、逛宜家等等折腾的事比较多，空余时间实在没有太多，周报出师未捷，刚开始就鸽了一个多月。。&lt;/p></description></item><item><title>Numpy</title><link>https://yindongliang.com/docs/Python/Numpy/</link><pubDate>Sat, 12 Nov 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Python/Numpy/</guid><description>&lt;h2 id="一些例子">一些例子&lt;a class="anchor" href="#%e4%b8%80%e4%ba%9b%e4%be%8b%e5%ad%90">#&lt;/a>&lt;/h2>
&lt;p>可以创建一维/多维数组&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import&lt;/span> &lt;span style="color:#ca72ff">numpy&lt;/span> &lt;span style="color:#76a9f9">as&lt;/span> &lt;span style="color:#ca72ff">np&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">np&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">array&lt;/span>&lt;span style="color:#abb2bf">([&lt;/span>&lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#d19a66">2&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#d19a66">3&lt;/span>&lt;span style="color:#abb2bf">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">np&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">arange&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#d19a66">10&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">np&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">zeros&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#d19a66">10&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">np&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">ones&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#d19a66">10&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">np&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">random&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">rand&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#d19a66">2&lt;/span>， &lt;span style="color:#d19a66">5&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>还可以改变矩阵的维度&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">x&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">np&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">arange&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#d19a66">10&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># [1, 2, 3...., 8, 9, 10]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">np&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">reshape&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#d19a66">2&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">5&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># [[1, 2, ..., 5],[6, 7, ..., 10]]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>支持矩阵间的四则运算等&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">x&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">np&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">array&lt;/span>&lt;span style="color:#abb2bf">([[&lt;/span>&lt;span style="color:#d19a66">4&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">4&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">4&lt;/span>&lt;span style="color:#abb2bf">],&lt;/span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#d19a66">8&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">8&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">8&lt;/span>&lt;span style="color:#abb2bf">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">y&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">np&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">array&lt;/span>&lt;span style="color:#abb2bf">([[&lt;/span>&lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">],&lt;/span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#d19a66">2&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">2&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">2&lt;/span>&lt;span style="color:#abb2bf">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">x&lt;/span> &lt;span style="color:#54b1c7">+&lt;/span> &lt;span style="color:#aa89ea">y&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>支持切片&lt;/p>
&lt;p>支持筛选&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">x&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">np&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">arange&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#d19a66">0&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">10&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#54b1c7">&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#aa89ea">array&lt;/span>&lt;span style="color:#abb2bf">([&lt;/span>&lt;span style="color:#d19a66">0&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">2&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">3&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">4&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">5&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">6&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">7&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">8&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">9&lt;/span>&lt;span style="color:#abb2bf">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#54b1c7">&amp;gt;&lt;/span>&lt;span style="color:#d19a66">8&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#54b1c7">&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#aa89ea">array&lt;/span>&lt;span style="color:#abb2bf">([&lt;/span>&lt;span style="color:#d19a66">9&lt;/span>&lt;span style="color:#abb2bf">])&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>支持读取文件为对象或将对象保存成文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">data&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">np&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">arange&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#d19a66">10&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">np&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">save&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;output.npy&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#aa89ea">data&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">data&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">np&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">load&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;output.npy&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Pandas</title><link>https://yindongliang.com/docs/Python/Pandas/</link><pubDate>Sat, 12 Nov 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Python/Pandas/</guid><description>&lt;p>官方文档 &lt;a href="https://pandas.pydata.org/docs/index.html">https://pandas.pydata.org/docs/index.html&lt;/a>&lt;/p>
&lt;h2 id="数据集">数据集&lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e9%9b%86">#&lt;/a>&lt;/h2>
&lt;p>列几个数据集用于测试：&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/power-bi/create-reports/sample-financial-download">https://learn.microsoft.com/en-us/power-bi/create-reports/sample-financial-download&lt;/a> (Financial.xlsx)&lt;/li>
&lt;li>&lt;a href="https://www.gairuo.com/file/data/dataset/team.xlsx">https://www.gairuo.com/file/data/dataset/team.xlsx&lt;/a> （team.xlsx）&lt;/li>
&lt;/ol>
&lt;h2 id="查看数据">查看数据&lt;a class="anchor" href="#%e6%9f%a5%e7%9c%8b%e6%95%b0%e6%8d%ae">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">head&lt;/span>&lt;span style="color:#abb2bf">()&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 头部 5 条&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">tail&lt;/span>&lt;span style="color:#abb2bf">()&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 尾部 5 条&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">sample&lt;/span>&lt;span style="color:#abb2bf">()&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 随机查看 5 条&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">shape&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># (100, 6) 查看行数和列数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">info&lt;/span>&lt;span style="color:#abb2bf">()&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 查看索引、数据类型和内存信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">describe&lt;/span>&lt;span style="color:#abb2bf">()&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 查看数值型列的汇总统计&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">dtypes&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 查看各字段类型&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">axes&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 显示数据行和列名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">columns&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 列名&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="选取数据">选取数据&lt;a class="anchor" href="#%e9%80%89%e5%8f%96%e6%95%b0%e6%8d%ae">#&lt;/a>&lt;/h2>
&lt;h3 id="选择列">选择列&lt;a class="anchor" href="#%e9%80%89%e6%8b%a9%e5%88%97">#&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#63c381">&amp;#34;Q1&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 指定列&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">Q1&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 同上一行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#abb2bf">[[&lt;/span>&lt;span style="color:#98c379">&amp;#39;team&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#98c379">&amp;#39;Q1&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">]]&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 只看这两列&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">loc&lt;/span>&lt;span style="color:#abb2bf">[:,&lt;/span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#98c379">&amp;#39;team&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#98c379">&amp;#39;Q1&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">]]&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 同上一行&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="选择行">选择行&lt;a class="anchor" href="#%e9%80%89%e6%8b%a9%e8%a1%8c">#&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">index&lt;/span> &lt;span style="color:#54b1c7">==&lt;/span> &lt;span style="color:#98c379">&amp;#39;Liver&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 根据索引名称&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"># 根据自然索引&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#d19a66">0&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#d19a66">3&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 取前三个&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#d19a66">0&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#d19a66">10&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#d19a66">2&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 前 10 个每隔两个取一个&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">iloc&lt;/span>&lt;span style="color:#abb2bf">[:&lt;/span>&lt;span style="color:#d19a66">10&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#abb2bf">:]&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 前 10 个&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="指定行和列">指定行和列&lt;a class="anchor" href="#%e6%8c%87%e5%ae%9a%e8%a1%8c%e5%92%8c%e5%88%97">#&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">loc&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#98c379">&amp;#39;Ben&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#98c379">&amp;#39;Q1&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#98c379">&amp;#39;Q4&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">loc&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#98c379">&amp;#39;A&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span> &lt;span style="color:#98c379">&amp;#39;D&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#98c379">&amp;#39;Q1&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span> &lt;span style="color:#98c379">&amp;#39;Q4&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="条件选择">条件选择&lt;a class="anchor" href="#%e6%9d%a1%e4%bb%b6%e9%80%89%e6%8b%a9">#&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">Q1&lt;/span> &lt;span style="color:#54b1c7">&amp;gt;&lt;/span> &lt;span style="color:#d19a66">90&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># Q1 大于 90 的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">team&lt;/span> &lt;span style="color:#54b1c7">==&lt;/span> &lt;span style="color:#98c379">&amp;#39;C&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># team 列为 &amp;#39;C&amp;#39; 的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">index&lt;/span> &lt;span style="color:#54b1c7">==&lt;/span> &lt;span style="color:#98c379">&amp;#39;Oscar&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 指定 index 名称&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="运算数据">运算数据&lt;a class="anchor" href="#%e8%bf%90%e7%ae%97%e6%95%b0%e6%8d%ae">#&lt;/a>&lt;/h2>
&lt;h3 id="排序">排序&lt;a class="anchor" href="#%e6%8e%92%e5%ba%8f">#&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">sort_values&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">by&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#63c381">&amp;#34;Q1&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#aa89ea">ascending&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#e5c07b">False&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 按 Q1 降序排列, default is True&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="分组聚合">分组聚合&lt;a class="anchor" href="#%e5%88%86%e7%bb%84%e8%81%9a%e5%90%88">#&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">groupby&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;team&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">sum&lt;/span>&lt;span style="color:#abb2bf">()&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 求和&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">groupby&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;team&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">mean&lt;/span>&lt;span style="color:#abb2bf">()&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># 求平均&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">df&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">groupby&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;team&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">agg&lt;/span>&lt;span style="color:#abb2bf">({&lt;/span>&lt;span style="color:#98c379">&amp;#39;Q1&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span> &lt;span style="color:#e5c07b">sum&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#98c379">&amp;#39;Q2&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span> &lt;span style="color:#aa89ea">count&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#98c379">&amp;#39;Q3&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span> &lt;span style="color:#98c379">&amp;#39;mean&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#98c379">&amp;#39;Q4&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span> &lt;span style="color:#e5c07b">max&lt;/span>&lt;span style="color:#abb2bf">})&lt;/span> &lt;span style="color:#8a93a5;font-style:italic"># agg 很强大&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="数据反转">数据反转&lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e5%8f%8d%e8%bd%ac">#&lt;/a>&lt;/h3>
&lt;p>&lt;code>df.T&lt;/code> 应该能玩出花。&lt;/p></description></item><item><title>大连你好</title><link>https://yindongliang.com/weekly/2022/2022-W43/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2022/2022-W43/</guid><description>&lt;p>执行“三天三检四不”实在无聊，翻了翻去年豆瓣的&lt;a href="https://book.douban.com/annual/2021">年度书单&lt;/a>，很多书没看过，可以加入待看列表了，另外也很期待今年都有哪些上榜。&lt;/p>
&lt;p>在看一个&lt;a href="https://www.bilibili.com/video/BV1EW411u7th/?share_source=copy_web&amp;amp;vd_source=fe111319444213c0651c9b0de9740974">【计算机科学速成课】[40集全/精校] - Crash Course Computer Science&lt;/a>，这个课可以用来练练听力，顺便了解一些陌生又熟悉的概念，课程是在 &lt;a href="https://csdiy.wiki/">CS自学指南上&lt;/a> 发现的。&lt;/p></description></item><item><title>读《身份的焦虑》</title><link>https://yindongliang.com/posts/status-anxiety/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/status-anxiety/</guid><description>&lt;h2 id="前言">前言&lt;a class="anchor" href="#%e5%89%8d%e8%a8%80">#&lt;/a>&lt;/h2>
&lt;p>2022 年已过大半，深感今年是我步入社会六年以来最魔幻的一年。上网冲浪就是这样的感觉：抖音在贩卖职业焦虑，有的叫“看清社会底层逻辑”、有的叫“未来中国发展在哪”，总之看起来和你息息相关，不知道的话你就会被淘汰。知乎在贩卖知识焦虑，那种一大包视频课程打包带走，满文件夹的 PDF 文档倾情放送，获取面试题请扫微信公众号，还有一些大数据时代必会的 Excel 技能、你必须了解的人工智能产业发展现状等等商业宣传。同时也有 B 站的 up 主们在躺平、在摆烂、在旅行、在裸辞、在逃离北上广、在回农村盖洋楼、在直播考研、在 run。&lt;/p></description></item><item><title>结束北漂</title><link>https://yindongliang.com/weekly/2022/2022-W42/</link><pubDate>Sun, 23 Oct 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2022/2022-W42/</guid><description>&lt;p>本周全是生活琐事，收到 offer、体检、与北京的朋友们告别、与媳妇拍了结婚三周年纪念照。&lt;/p>
&lt;p>看完了&lt;a href="https://movie.douban.com/subject/26594369/">德雷尔一家第一季&lt;/a>，开始看&lt;a href="https://movie.douban.com/subject/25726259/">风骚律师&lt;/a>，很多人拿这部剧和绝命毒师对比，这样的话就更想继续往下看了。&lt;/p>
&lt;p>另外，在周日前往大连的火车上读完了&lt;a href="https://yindongliang.com/posts/status-anxiety">身份的焦虑&lt;/a>。&lt;/p></description></item><item><title>做了个周刊</title><link>https://yindongliang.com/weekly/2022/2022-W41/</link><pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2022/2022-W41/</guid><description>&lt;p>花了周六一天时间，在 Hugo 模版基础上新加了一个 &lt;a href="https://yindongliang.com/weekly">Weekly&lt;/a> 功能，受 &lt;a href="https://weekly.tw93.fun/">潮流周刊&lt;/a> 启发，并学到了一些新东西：&lt;/p>
&lt;ul>
&lt;li>现在前端好像已经不流行写 CSS 了，有一个解决方案：&lt;a href="https://tailwindcss.com/">Tailwind CSS - Rapidly build modern websites without ever leaving your HTML&lt;/a>，非常香，基本可以直接在 HTML 中使用 class 属性来替代在 CSS 文件里各种起名+声明，问题就是会覆盖一些本地原有的配置，所以它适合项目创建之初就开始使用。&lt;/li>
&lt;li>更激进的，前端好像也不流行自己写布局、框架了，又一个解决方案：&lt;a href="https://shuffle.dev/">Shuffle — An online editor for busy developers&lt;/a>，貌似是收费的，但是非常适合 startup。&lt;/li>
&lt;/ul>
&lt;p>与其叫周刊，其实定位在周报。看大佬们的周刊一般是第 99 期、256 期之类的，但是我不想每次去计算周刊到第几期了，对我来说意义不大，存在的问题可能就是没有唯一索引了，其实自己起的名也基本可以避开重复，总之够用。&lt;/p></description></item><item><title>I/O 多路复用机制</title><link>https://yindongliang.com/posts/io-multiplexing/</link><pubDate>Sun, 04 Sep 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/io-multiplexing/</guid><description>&lt;p>面试问的太多了，还是专门整理一下吧，理清知识结构。&lt;/p>
&lt;h2 id="总览">总览&lt;a class="anchor" href="#%e6%80%bb%e8%a7%88">#&lt;/a>&lt;/h2>
&lt;p>首先需要注意的是，下面讨论的几种 I/O 模型都属于同步（synchronous） I/O 操作，至于异步（asynchronous） I/O 操作，以后再说。&lt;/p></description></item><item><title>深入了解 Redis 的各种数据结构</title><link>https://yindongliang.com/posts/deep-in-redis-data-structure/</link><pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/deep-in-redis-data-structure/</guid><description>&lt;p>最近面试中发现我比较薄弱的地方还是在 Redis，很多数据结构对应的底层的原理不知道，于是来看看相关资料和&lt;a href="https://github.com/redis/redis">源码&lt;/a>，工作中没有这么深入研究过，惭愧了。&lt;/p>
&lt;h2 id="string">String&lt;a class="anchor" href="#string">#&lt;/a>&lt;/h2>
&lt;h3 id="使用方法">使用方法&lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8%e6%96%b9%e6%b3%95">#&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>127.0.0.1:6379&amp;gt; &lt;span style="color:#e5c07b">set&lt;/span> key value
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1:6379&amp;gt; &lt;span style="color:#e5c07b">set&lt;/span> number &lt;span style="color:#d19a66">10086&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1:6379&amp;gt; &lt;span style="color:#e5c07b">set&lt;/span> title &lt;span style="color:#63c381">&amp;#34;hello redis&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1:6379&amp;gt; get key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#63c381">&amp;#34;value&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1:6379&amp;gt; get number
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#63c381">&amp;#34;10086&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1:6379&amp;gt; get title
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#63c381">&amp;#34;hello redis&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="底层结构">底层结构&lt;a class="anchor" href="#%e5%ba%95%e5%b1%82%e7%bb%93%e6%9e%84">#&lt;/a>&lt;/h3>
&lt;p>String 类型的底层的数据结构实现主要是 int 和 SDS（简单动态字符串），C 语言内置的 int 就不用介绍了，下面详细说一下 SDS。&lt;/p></description></item><item><title>Unix 编程艺术</title><link>https://yindongliang.com/docs/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/taoup/</link><pubDate>Thu, 21 Jul 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/taoup/</guid><description>&lt;p>&lt;a href="https://book.douban.com/subject/1467587/">Unix 编程艺术&lt;/a> 这本书主要介绍了 Unix 系统领域的一些文化和设计哲学，本书最初在2006 年出版，译者在序言里也说发现本书作者 ESR（Eric S·Raymond）是个&lt;em>美国愤青&lt;/em>，所以书中的内容也肯定不是教科书的论调，很多观点随着时间发展到现在，需要读者自己思考并做出判断。&lt;/p></description></item><item><title>程序员修炼之道</title><link>https://yindongliang.com/docs/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BF%AE%E7%82%BC%E4%B9%8B%E9%81%93/</link><pubDate>Wed, 13 Jul 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BF%AE%E7%82%BC%E4%B9%8B%E9%81%93/</guid><description>&lt;p>&lt;a href="https://book.douban.com/subject/35006892/">程序员修炼之道：通向务实的最高境界（第2版）&lt;/a>&lt;/p>
&lt;p>相比第一版，书中大约三分之一的主题是全新的，而其余的大部分都被部分或全部重写了。作者再版的目的是，让内容变得更清晰、更贴切，并在某种程度上不受时间的影响。所以可以直接阅读第二版了。&lt;/p></description></item><item><title>CSS 布局概览</title><link>https://yindongliang.com/posts/css-display/</link><pubDate>Sun, 10 Jul 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/css-display/</guid><description>&lt;p>越来越觉得，与其说 CSS 是编程语言，不如说它是配置文件。CSS （Cascading Style Sheets，层叠样式表）的诞生是为了图文信息展示服务的。CSS 布局机制通常就是指对 &lt;code>display&lt;/code> 属性的设置，&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_display">Display - MDN&lt;/a> 文档指明 &lt;code>display&lt;/code> 属性可以用来指示&lt;strong>六种维度&lt;/strong>的值，下面就看看 &lt;code>display&lt;/code> 设置了不同的值到底意味着什么。&lt;/p></description></item><item><title>CSS 选择器语法举例</title><link>https://yindongliang.com/posts/css-selector-syntax/</link><pubDate>Sun, 03 Jul 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/css-selector-syntax/</guid><description>&lt;h2 id="简单选择器">简单选择器&lt;a class="anchor" href="#%e7%ae%80%e5%8d%95%e9%80%89%e6%8b%a9%e5%99%a8">#&lt;/a>&lt;/h2>
&lt;h3 id="标签选择器">标签选择器&lt;a class="anchor" href="#%e6%a0%87%e7%ad%be%e9%80%89%e6%8b%a9%e5%99%a8">#&lt;/a>&lt;/h3>
&lt;p>标签选择器也叫元素选择器&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*标签选择器*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">tag&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>&lt;span style="color:#76a9f9">background-color&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span> &lt;span style="color:#e5c07b">gold&lt;/span>&lt;span style="color:#abb2bf">;}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="id-选择器">ID 选择器&lt;a class="anchor" href="#id-%e9%80%89%e6%8b%a9%e5%99%a8">#&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*ID 选择器*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">#&lt;/span>&lt;span style="color:#ca72ff">someID&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>&lt;span style="color:#76a9f9">background-color&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span> &lt;span style="color:#e5c07b">gold&lt;/span>&lt;span style="color:#abb2bf">;}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="类选择器">类选择器&lt;a class="anchor" href="#%e7%b1%bb%e9%80%89%e6%8b%a9%e5%99%a8">#&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*类选择器*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#ca72ff">someClass&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>&lt;span style="color:#76a9f9">background-color&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span> &lt;span style="color:#e5c07b">gold&lt;/span>&lt;span style="color:#abb2bf">;}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="组合使用">组合使用&lt;a class="anchor" href="#%e7%bb%84%e5%90%88%e4%bd%bf%e7%94%a8">#&lt;/a>&lt;/h3>
&lt;p>还有一种选择器也比较常见，形如 &lt;code>tag.class&lt;/code>，但是查了一圈文档没有找到一个标准的名字，有的就归为类选择器，暂时先这么叫。它通常用来选择一个 HTML 中的带有 &lt;code>class='xxx'&lt;/code> 的标签元素。&lt;/p></description></item><item><title>打家劫舍</title><link>https://yindongliang.com/docs/Algorithms/%E7%BB%8F%E5%85%B8%E9%97%AE%E9%A2%98/%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E7%BB%8F%E5%85%B8%E9%97%AE%E9%A2%98/%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D/</guid><description>&lt;p>打家劫舍基本都可以用&lt;a href="https://yindongliang.com/docs/Algorithms/%e5%b8%b8%e7%94%a8%e7%ae%97%e6%b3%95/%e5%8a%a8%e6%80%81%e8%a7%84%e5%88%92">动态规划&lt;/a>来解决。&lt;/p>
&lt;h2 id="房屋偷盗">房屋偷盗&lt;a class="anchor" href="#%e6%88%bf%e5%b1%8b%e5%81%b7%e7%9b%97">#&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://leetcode.cn/problems/Gu0c2T/">剑指 Offer II 089. 房屋偷盗&lt;/a>&lt;/p>
&lt;h2 id="环形房屋偷盗">环形房屋偷盗&lt;a class="anchor" href="#%e7%8e%af%e5%bd%a2%e6%88%bf%e5%b1%8b%e5%81%b7%e7%9b%97">#&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://leetcode.cn/problems/PzWKhm/">剑指 Offer II 090. 环形房屋偷盗&lt;/a>&lt;/p>
&lt;p>维护一个 helper，设定 number 的起始位置，自底向上计算两次，取最大值。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">var&lt;/span> &lt;span style="color:#aa89ea">rob&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">function&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">nums&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">nums&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">length&lt;/span> &lt;span style="color:#54b1c7">===&lt;/span> &lt;span style="color:#d19a66">0&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">return&lt;/span> &lt;span style="color:#d19a66">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">nums&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">length&lt;/span> &lt;span style="color:#54b1c7">===&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">return&lt;/span> &lt;span style="color:#aa89ea">nums&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#d19a66">0&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">let&lt;/span> &lt;span style="color:#aa89ea">result1&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">helper&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">nums&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">0&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#aa89ea">nums&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">length&lt;/span> &lt;span style="color:#54b1c7">-&lt;/span> &lt;span style="color:#d19a66">2&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">let&lt;/span> &lt;span style="color:#aa89ea">result2&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">helper&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">nums&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#aa89ea">nums&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">length&lt;/span> &lt;span style="color:#54b1c7">-&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">return&lt;/span> &lt;span style="color:#e5c07b">Math&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">max&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">result1&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#aa89ea">result2&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">var&lt;/span> &lt;span style="color:#aa89ea">helper&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">function&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">nums&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#aa89ea">start&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#aa89ea">end&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">let&lt;/span> &lt;span style="color:#aa89ea">left&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">nums&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">start&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">let&lt;/span> &lt;span style="color:#aa89ea">right&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#d19a66">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">start&lt;/span> &lt;span style="color:#54b1c7">&amp;lt;&lt;/span> &lt;span style="color:#aa89ea">end&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">right&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#e5c07b">Math&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">max&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">nums&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">start&lt;/span>&lt;span style="color:#abb2bf">],&lt;/span> &lt;span style="color:#aa89ea">nums&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">start&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#76a9f9">let&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">start&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#d19a66">2&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span> &lt;span style="color:#54b1c7">&amp;lt;=&lt;/span> &lt;span style="color:#aa89ea">end&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">++&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">let&lt;/span> &lt;span style="color:#aa89ea">temp&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">left&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">left&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">right&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">right&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#e5c07b">Math&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">max&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">temp&lt;/span> &lt;span style="color:#54b1c7">+&lt;/span> &lt;span style="color:#aa89ea">nums&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">],&lt;/span> &lt;span style="color:#aa89ea">right&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">return&lt;/span> &lt;span style="color:#e5c07b">Math&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">max&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">left&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#aa89ea">right&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="打家劫舍-iii">打家劫舍 III&lt;a class="anchor" href="#%e6%89%93%e5%ae%b6%e5%8a%ab%e8%88%8d-iii">#&lt;/a>&lt;/h2>
&lt;p>&lt;img src="https://cdn.yindongliang.com/2022/rob1-tree.jpg" alt="" />&lt;/p></description></item><item><title>递归</title><link>https://yindongliang.com/docs/Algorithms/%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/recursion/</link><pubDate>Wed, 29 Jun 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/recursion/</guid><description>&lt;h2 id="建立思维">建立思维&lt;a class="anchor" href="#%e5%bb%ba%e7%ab%8b%e6%80%9d%e7%bb%b4">#&lt;/a>&lt;/h2>
&lt;p>理解递归的关键首先还是弄清楚二叉树的先序遍历、中序遍历和后序遍历的递归实现。任何递归可以说都处在这个模型中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">void&lt;/span> &lt;span style="color:#aa89ea">traverse&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">TreeNode&lt;/span> &lt;span style="color:#aa89ea">root&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">root&lt;/span> &lt;span style="color:#54b1c7">==&lt;/span> &lt;span style="color:#e5c07b">null&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">return&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 前序位置
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span> &lt;span style="color:#aa89ea">traverse&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">root&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">left&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 中序位置
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span> &lt;span style="color:#aa89ea">traverse&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">root&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">right&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// 后序位置
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果面试官明确要求不使用递归，那一般就是使用后进先出的栈来代替递归实现，可以参考 &lt;a href="https://yindongliang.com/docs/Algorithms/%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84/%e4%ba%8c%e5%8f%89%e6%a0%91">二叉树专题&lt;/a> 中遍历二叉树的非递归实现。&lt;/p></description></item><item><title>贪心算法</title><link>https://yindongliang.com/docs/Algorithms/%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 25 Jun 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/</guid><description>&lt;p>贪心算法是一种在每一步选择中都采取当前状态下最优（即最有利）的选择，从而希望导致结果是全局最优的算法策略。&lt;/p>
&lt;p>贪心算法（又称贪婪算法）是指，在对问题求解时，总是做出在当前看来是最好的选择。也就是说，不从整体最优上加以考虑，他所做出的是在某种意义上的局部最优解。贪心算法不是对所有问题都能得到整体最优解，关键是贪心策略的选择，选择的&lt;strong>贪心策略必须具备无后效性，即某个状态以前的过程不会影响以后的状态，只与当前状态有关。&lt;/strong>&lt;/p></description></item><item><title>线上练习跟老外用英语对话</title><link>https://yindongliang.com/posts/practice-talking-with-english-speaking-person-online/</link><pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/practice-talking-with-english-speaking-person-online/</guid><description>&lt;p>五月到六月，由于疫情原因，被迫居家隔离了一个月，在家也特别无聊，就下了几个可以和外国人线上对话的 App（Cambly、Preply，需付费）打算练练英语口语，于是开启了一段非常有意思的与老外聊天的经历。&lt;/p></description></item><item><title>滑动窗口</title><link>https://yindongliang.com/docs/Algorithms/%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/</link><pubDate>Mon, 13 Jun 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/</guid><description>&lt;p>滑动窗口也是一种双指针算法，但是滑动窗口特别强调窗口向一个方向滑动，看起来简单，但是却属于最难的一种双指针技巧，力扣上的题一般都是中等或困难难度。首要问题是识别什么样的问题需要滑动窗口解决，最常见的题型：子串问题。&lt;/p></description></item><item><title>动态规划</title><link>https://yindongliang.com/docs/Algorithms/%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link><pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid><description>&lt;h2 id="介绍">介绍&lt;a class="anchor" href="#%e4%bb%8b%e7%bb%8d">#&lt;/a>&lt;/h2>
&lt;p>动态规划（Dynamic Programming，简称DP）常常适用于有重叠子问题和最优子结构性质的问题，并且记录所有子问题的结果，因此动态规划方法所耗时间往往远少于朴素解法。&lt;/p></description></item><item><title>双指针</title><link>https://yindongliang.com/docs/Algorithms/%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/%E5%8F%8C%E6%8C%87%E9%92%88/</link><pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/%E5%8F%8C%E6%8C%87%E9%92%88/</guid><description>&lt;p>双指针有时也叫滑动窗口，如果一定要和滑动窗口区别，那就是滑动窗口的窗口一般是向一个方向滑动，而双指针一般强调左右两个指针。除此之外，可能还会单独强调快慢指针，快慢指针也是一种双指针，但是两个指针的运动速度是不一样的，一快一慢。&lt;/p></description></item><item><title>二分查找</title><link>https://yindongliang.com/docs/Algorithms/%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link><pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</guid><description>&lt;p>二分查找利用&lt;strong>已经排好序&lt;/strong>的数组，每次查找可以将查找范围减半，查找范围内只剩一个数据时查找结束。&lt;/p>
&lt;h2 id="代码模板">代码模板&lt;a class="anchor" href="#%e4%bb%a3%e7%a0%81%e6%a8%a1%e6%9d%bf">#&lt;/a>&lt;/h2>
&lt;p>简单题的模板几乎都是统一的，根据题目的条件再灵活调整就可以了，比如 &lt;a href="https://leetcode.cn/problems/binary-search/">704. 二分查找&lt;/a>。&lt;/p></description></item><item><title>排序</title><link>https://yindongliang.com/docs/Algorithms/%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/sorting/</link><pubDate>Mon, 09 May 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Algorithms/%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/sorting/</guid><description>&lt;p>排序是非常基础、重要的算法，它将若干数据依照特定的顺序进行排列。如果排序的对象是数值，那么按数值递增或递减的顺序进行排序；如果排序的对象是字符串，那么按照字典顺序进行排序。由于数据排序之后能够利用二分查找算法提高查找的效率，因此很多数据都是排序之后再存储的。&lt;/p></description></item><item><title>AJAX 是什么？</title><link>https://yindongliang.com/posts/what-is-AJAX/</link><pubDate>Mon, 02 May 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/what-is-AJAX/</guid><description>&lt;p>这个问题既熟悉又有点陌生，先看概念。AJAX 是 &lt;em>Asynchronous Javavascript XML&lt;/em> 的缩写，即异步 JavaScript 和 XML。使用 AJAX 技术可以在无需重新加载整个网页的情况下，能够更新部分网页，从而给带来更好的用户体验。另外 AJAX 不仅使用 XML，实际上由于 JSON 结构的易读和轻量反而更受欢迎。&lt;/p></description></item><item><title>浏览器的事件机制</title><link>https://yindongliang.com/posts/browser-event/</link><pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/browser-event/</guid><description>&lt;p>事件是在编程时系统内发生的动作或者发生的事情，系统响应事件后，如果需要，我们可以用事件处理器（event handler）对事件做出回应。浏览器中常见的可以触发事件的时机比如有：&lt;/p></description></item><item><title>搞懂原型链</title><link>https://yindongliang.com/posts/prototype-chain/</link><pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/prototype-chain/</guid><description>&lt;p>与一般基于类的面向对象语言（C++、Java）不同，JavaScript 是基于原型的语言。&lt;/p>
&lt;h2 id="原型-prototype">原型 &lt;code>[[Prototype]]&lt;/code>&lt;a class="anchor" href="#%e5%8e%9f%e5%9e%8b-prototype">#&lt;/a>&lt;/h2>
&lt;p>打开浏览器的控制台，输入 &lt;code>let b = {&amp;quot;hello&amp;quot;: &amp;quot;world&amp;quot;}&lt;/code> ，然后查看 &lt;code>b&lt;/code> ，你会发现一个 &lt;code>[[Prototype]]&lt;/code> 属性。这是每个对象都有的&lt;strong>隐藏属性&lt;/strong>，它要么为 &lt;code>null&lt;/code>，要么是对另一个对象的引用，那个对象就被称为 &lt;code>b&lt;/code> 的 &lt;em>原型&lt;/em>（proto type）。&lt;/p></description></item><item><title>WebSocket 是什么？</title><link>https://yindongliang.com/posts/what-is-websocket/</link><pubDate>Tue, 15 Mar 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/what-is-websocket/</guid><description>&lt;p>WebSocket 是 HTML5 开始提供的一种网络传输协议，可以在单个 TCP 连接上进行全双工通信，位于 OSI 参考模型的应用层。WebSocket 使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。在 WebSocket API 中，浏览器和服务器只需要完成一次握手，两者之间就直接可以创建&lt;strong>持久性&lt;/strong>的连接，并进行&lt;strong>双向&lt;/strong>数据传输。&lt;/p></description></item><item><title>一些定律</title><link>https://yindongliang.com/docs/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/some-laws/</link><pubDate>Wed, 02 Mar 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/some-laws/</guid><description>&lt;h2 id="摩尔定律">摩尔定律&lt;a class="anchor" href="#%e6%91%a9%e5%b0%94%e5%ae%9a%e5%be%8b">#&lt;/a>&lt;/h2>
&lt;p>&lt;em>摩尔定律&lt;/em>是英特尔创始人之一戈登·摩尔的经验之谈，其核心内容为：&lt;strong>集成电路上可以容纳的晶体管数目在大约每经过18个月便会增加一倍&lt;/strong>。&lt;/p>
&lt;h2 id="康威定律">康威定律&lt;a class="anchor" href="#%e5%ba%b7%e5%a8%81%e5%ae%9a%e5%be%8b">#&lt;/a>&lt;/h2>
&lt;p>计算机科学家 &lt;a href="https://zh.wikipedia.org/wiki/%e9%a9%ac%e5%b0%94%e6%96%87%c2%b7%e5%ba%b7%e5%a8%81">马尔文·康威&lt;/a> 1976 年提出，&lt;strong>设计系统的架构受制于产生这些设计的组织的沟通结构&lt;/strong>。&lt;/p></description></item><item><title>TCP/IP 协议理论基础整理</title><link>https://yindongliang.com/posts/tcpip-questions/</link><pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/tcpip-questions/</guid><description>&lt;p>因为 TCP/IP 协议中每个协议都是层层包装、依赖，分开说可能并不会更容易掌握这些理论知识，所以这里把这些协议都放在了一起。&lt;/p>
&lt;h2 id="名词解释">名词解释&lt;a class="anchor" href="#%e5%90%8d%e8%af%8d%e8%a7%a3%e9%87%8a">#&lt;/a>&lt;/h2>
&lt;h3 id="七层和四层模型">七层和四层模型&lt;a class="anchor" href="#%e4%b8%83%e5%b1%82%e5%92%8c%e5%9b%9b%e5%b1%82%e6%a8%a1%e5%9e%8b">#&lt;/a>&lt;/h3>
&lt;p>&lt;a href="https://cdn.yindongliang.com/uPic/20160731161720376.gif">这里&lt;/a>有一张图比较详细。&lt;/p>
&lt;p>OSI 七层参考模型包括：&lt;/p>
&lt;ul>
&lt;li>应用层：应用程序可直接使用的协议，如 HTTP、FTP。&lt;/li>
&lt;li>表示层：主要是数据格式转化，比如压缩、加密。&lt;/li>
&lt;li>会话层：定义了如何建立及开始会话，比如 TLS。&lt;/li>
&lt;li>传输层：接受上一层的数据，并将其交给网络层，且保证数据有效到达。&lt;/li>
&lt;li>网络层：控制子网的运行，提供标准的端对端的包传输。&lt;/li>
&lt;li>数据链路层：定义了单个链路上如何传输数据。&lt;/li>
&lt;li>物理层：传输介质，硬件。&lt;/li>
&lt;/ul>
&lt;p>四层协议包括：&lt;/p></description></item><item><title>开工就感冒了</title><link>https://yindongliang.com/posts/catch-a-cold-when-start-work/</link><pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/catch-a-cold-when-start-work/</guid><description>&lt;p>之前还说要将焦虑转化为动力，结果操之过急，在上周四（2.17）的下午一个连续四个小时的封闭会议之后，当晚回家就感觉特别疲惫，紧接着第二天中午就开始发烧了。&lt;/p></description></item><item><title>回家过了个年</title><link>https://yindongliang.com/posts/this-year-go-home/</link><pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/this-year-go-home/</guid><description>&lt;p>今年过年回山东老家遇到了各路亲戚，由于 2020 年的疫情就没串门，2021 年又回媳妇家，实际上今年才是两年后的大范围重新相聚，亲戚还是那些人，距离上次见面的时间仿佛也没过几天。&lt;/p></description></item><item><title>了解下网络硬件设备</title><link>https://yindongliang.com/posts/network-hardware-device/</link><pubDate>Sat, 29 Jan 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/network-hardware-device/</guid><description>&lt;p>看了一阵的网络知识，目前对于底层的网络硬件设备还有一些领域术语还是有点陌生，专门总结下。&lt;/p>
&lt;h2 id="集线器">集线器&lt;a class="anchor" href="#%e9%9b%86%e7%ba%bf%e5%99%a8">#&lt;/a>&lt;/h2>
&lt;p>集线器（hub）是指集中器设备（concentrator）。最初的局域网络是通过集线器将多台电脑连接起来进行通信。&lt;/p></description></item><item><title>用 Charles 进行手机抓包</title><link>https://yindongliang.com/posts/use-charles-capture-package-on-mobile/</link><pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/use-charles-capture-package-on-mobile/</guid><description>&lt;p>如果使用 Wireshark 解决手机抓包，需要把电脑设为热点，这样一般笔记本电脑不太方便，Charles 提供了系统代理的功能，可以使用 Charles 更方便地进行手机抓包。另外 Charles 除了可以解析未加密的 HTTP，通过证书的配置也可以解析加密过的 HTTPS 和 HTTP/2，下面记录下配置方式。&lt;/p></description></item><item><title>回归写作</title><link>https://yindongliang.com/posts/back-to-writing/</link><pubDate>Thu, 20 Jan 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/back-to-writing/</guid><description>&lt;p>今年以来发现，我能写出来的东西越来越多了，是一直期待的状态，但不是说写作内容的质量有多高了，而是写作的意愿更强了。为什么意愿更强了，一方面我发现如果输入更多了，再不进行输出的话，脑子就会有一种装满东西的感觉，从而无法输入更多的东西，而且有的内容如果不输出，还要经常隔三差五的回去重新看，心理上会觉得这个问题还没有解决从而产生焦虑，可以说现在我的写作也是一种被动的输出行为。&lt;/p></description></item><item><title>Wireshark 食用指南</title><link>https://yindongliang.com/posts/wireshark-usage/</link><pubDate>Thu, 13 Jan 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/wireshark-usage/</guid><description>&lt;p>最近看 HTTPS、TCP 的时候发现很多地方都会用 Wireshark 抓包来实际操作，于是系统地看了下。&lt;/p>
&lt;h2 id="wireshark-历史">Wireshark 历史&lt;a class="anchor" href="#wireshark-%e5%8e%86%e5%8f%b2">#&lt;/a>&lt;/h2>
&lt;p>Wireshark（导线鲨鱼，前称 Ethereal，空灵）是一个免费开源的网络数据包分析软件。网络数据包分析软件的功能是截取网络数据包，并尽可能显示出最为详细的网络数据包资料。在&lt;a href="https://zh.wikipedia.org/wiki/GNU%e9%80%9a%e7%94%a8%e5%85%ac%e5%85%b1%e8%ae%b8%e5%8f%af%e8%af%81">GNU通用公共许可证&lt;/a>的保障范围底下，用户可以以免费的代价获取软件与其代码，并拥有针对其源代码修改及定制的权利。&lt;/p></description></item><item><title>通用唯一识别码：UUID</title><link>https://yindongliang.com/posts/intro-uuid/</link><pubDate>Wed, 05 Jan 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/intro-uuid/</guid><description>&lt;p>UUID（Universally Unique Identifier，通用唯一识别码）的格式基本上是统一的，遵循一定的标准。最常见的 UUID 表示形式是由 3 2个十六进制数字组成，分为五组，这些组通过连字符（-）分隔，形式如下：&lt;/p></description></item><item><title>内置对象</title><link>https://yindongliang.com/docs/Frontend/Global_Objects/</link><pubDate>Sun, 02 Jan 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/Global_Objects/</guid><description>&lt;p>JavaScript 没有标准库，但是有一些&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects">内置对象&lt;/a>，可以不需要导入就使用一些类似其他语言的标准库的方法。&lt;/p>
&lt;h2 id="object">Object&lt;a class="anchor" href="#object">#&lt;/a>&lt;/h2>
&lt;h3 id="assign">assign&lt;a class="anchor" href="#assign">#&lt;/a>&lt;/h3>
&lt;h3 id="keys">keys&lt;a class="anchor" href="#keys">#&lt;/a>&lt;/h3>
&lt;h3 id="hasownproperty">hasOwnProperty&lt;a class="anchor" href="#hasownproperty">#&lt;/a>&lt;/h3>
&lt;p>判断 key 是否在对象中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">function&lt;/span> &lt;span style="color:#aa89ea">main&lt;/span>&lt;span style="color:#abb2bf">()&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>&lt;span style="color:#aa89ea">hello&lt;/span>&lt;span style="color:#54b1c7">:&lt;/span> &lt;span style="color:#63c381">&amp;#34;world&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;hello&amp;#34;&lt;/span> &lt;span style="color:#76a9f9">in&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">console&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">log&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;has 1&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">hasOwnProperty&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;hello&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">))&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">console&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">log&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;has 2&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">// output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">// has 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">// has 2
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="undefined">undefined&lt;a class="anchor" href="#undefined">#&lt;/a>&lt;/h2>
&lt;p>undefined 表示的是一个变量为初始化时没有被赋值，得到的就是 &lt;code>undefined&lt;/code>。&lt;/p></description></item></channel></rss>