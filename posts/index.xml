<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on LYon's Blog</title><link>https://yindongliang.com/posts/</link><description>Recent content in Posts on LYon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 23 Oct 2025 19:11:09 +0800</lastBuildDate><atom:link href="https://yindongliang.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Prisma 和 Drizzle 对比</title><link>https://yindongliang.com/posts/Prisma-%E5%92%8C-Drizzle-%E5%AF%B9%E6%AF%94/</link><pubDate>Wed, 24 Sep 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/Prisma-%E5%92%8C-Drizzle-%E5%AF%B9%E6%AF%94/</guid><description>&lt;p>Prisma 和 Drizzle 确实是同类工具，它们都属于 &lt;strong>现代 TypeScript/JavaScript ORM（对象关系映射）&lt;/strong>，但在设计哲学、功能特性和使用方式上有显著差异。&lt;/p>
&lt;h2 id="核心定位对比">核心定位对比&lt;a class="anchor" href="#%e6%a0%b8%e5%bf%83%e5%ae%9a%e4%bd%8d%e5%af%b9%e6%af%94">#&lt;/a>&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>特性&lt;/th>
 &lt;th>Prisma&lt;/th>
 &lt;th>Drizzle&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>类型安全&lt;/strong>&lt;/td>
 &lt;td>🔥 强类型，自动生成 TypeScript 类型&lt;/td>
 &lt;td>🔥 强类型，基于 TypeScript 推断&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>查询语法&lt;/strong>&lt;/td>
 &lt;td>声明式，类 GraphQL 风格&lt;/td>
 &lt;td>类 SQL 的表达式语法&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>架构定义&lt;/strong>&lt;/td>
 &lt;td>专属的 &lt;code>.prisma&lt;/code> schema 文件&lt;/td>
 &lt;td>TypeScript 代码定义或配置文件&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>迁移管理&lt;/strong>&lt;/td>
 &lt;td>内置完整的迁移系统&lt;/td>
 &lt;td>支持迁移，但更灵活&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>运行时大小&lt;/strong>&lt;/td>
 &lt;td>较大（~1.5MB）&lt;/td>
 &lt;td>轻量（~20KB）&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>学习曲线&lt;/strong>&lt;/td>
 &lt;td>中等，需要学习 Prisma 特有语法&lt;/td>
 &lt;td>较低，对 SQL 用户友好&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="代码示例对比">代码示例对比&lt;a class="anchor" href="#%e4%bb%a3%e7%a0%81%e7%a4%ba%e4%be%8b%e5%af%b9%e6%af%94">#&lt;/a>&lt;/h2>
&lt;h3 id="1-架构定义">1. 架构定义&lt;a class="anchor" href="#1-%e6%9e%b6%e6%9e%84%e5%ae%9a%e4%b9%89">#&lt;/a>&lt;/h3>
&lt;p>&lt;strong>Prisma Schema:&lt;/strong>&lt;/p></description></item><item><title>Shell Script to Check if a File Exists</title><link>https://yindongliang.com/posts/Shell-Script-to-Check-if-a-File-Exists/</link><pubDate>Sat, 20 Sep 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/Shell-Script-to-Check-if-a-File-Exists/</guid><description>&lt;p>To check if a file exists in a shell script, you can use the &lt;code>test&lt;/code> command or the &lt;code>[&lt;/code> command. Both commands are equivalent, but the &lt;code>test&lt;/code> command is more powerful and allows you to perform more complex checks.&lt;/p>
&lt;p>Here&amp;rsquo;s an example using the &lt;code>test&lt;/code> command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#e5c07b">test&lt;/span> -e &lt;span style="color:#54b1c7">{&lt;/span>filename&lt;span style="color:#54b1c7">}&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span> &lt;span style="color:#76a9f9">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#63c381">&amp;#34;File exists&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#63c381">&amp;#34;File does not exist&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">fi&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Alternatively, you can use the &lt;code>[&lt;/code> command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#54b1c7">[&lt;/span> -e &lt;span style="color:#54b1c7">{&lt;/span>filename&lt;span style="color:#54b1c7">}&lt;/span> &lt;span style="color:#54b1c7">]&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span> &lt;span style="color:#76a9f9">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#63c381">&amp;#34;File exists&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#63c381">&amp;#34;File does not exist&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">fi&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In both cases, replace &lt;code>{filename}&lt;/code> with the name of the file you want to check.&lt;/p></description></item><item><title>Cookie 机制</title><link>https://yindongliang.com/posts/Cookie-%E6%9C%BA%E5%88%B6/</link><pubDate>Sun, 14 Sep 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/Cookie-%E6%9C%BA%E5%88%B6/</guid><description>&lt;p>我们来详细解析一下服务器和浏览器是如何协同管理 Cookie 的。Cookie 是维持 HTTP 无状态协议状态的关键技术，其管理机制涉及服务器创建、浏览器存储与发送、以及双方的安全约束。&lt;/p></description></item><item><title>JWT 介绍和场景示例</title><link>https://yindongliang.com/posts/jwt-api-auth/</link><pubDate>Sun, 14 Sep 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/jwt-api-auth/</guid><description>&lt;h3 id="一jwt-是什么">一、JWT 是什么？&lt;a class="anchor" href="#%e4%b8%80jwt-%e6%98%af%e4%bb%80%e4%b9%88">#&lt;/a>&lt;/h3>
&lt;p>&lt;a href="https://www.jwt.io/">&lt;strong>JWT&lt;/strong>&lt;/a> 的英文全称是 JSON Web Token。它是一种开放的、行业标准的方法，用于在双方之间安全地传输信息作为 JSON 对象。&lt;/p>
&lt;p>最关键的特点是：&lt;strong>这些信息是经过数字签名的，因此可以被验证和信任&lt;/strong>。&lt;/p></description></item><item><title> 学习半年 SwiftUI，我上架了第一款 App：OnceOne</title><link>https://yindongliang.com/posts/my-first-app-onceone/</link><pubDate>Tue, 08 Jul 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/my-first-app-onceone/</guid><description>&lt;p>最近半年的时间里，我利用业余时间开始学习 SwiftUI 的一些概念，边学习边实践，开发出了一款 To-Do 工具：&lt;a href="https://apps.apple.com/us/app/onceone-grouping-to-do-tasks/id6744550176">OnceOne&lt;/a>。其中前期做 To-Do 类 App 的通用功能时还多有模仿其他典型 App 的交互和展示方案，后面逐渐有了一些自己的想法，开始做了一些属于我自己的独特功能。到现在终于在 App Store 上架了第一款作品，还有点小激动。&lt;/p></description></item><item><title>《我的职业是小说家》笔记</title><link>https://yindongliang.com/posts/%E6%88%91%E7%9A%84%E8%81%8C%E4%B8%9A%E6%98%AF%E5%B0%8F%E8%AF%B4%E5%AE%B6%E7%AC%94%E8%AE%B0/</link><pubDate>Sun, 04 May 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/%E6%88%91%E7%9A%84%E8%81%8C%E4%B8%9A%E6%98%AF%E5%B0%8F%E8%AF%B4%E5%AE%B6%E7%AC%94%E8%AE%B0/</guid><description>&lt;h3 id="第一章-小说家是宽容的人种吗"> &lt;strong>第一章 小说家是宽容的人种吗？&lt;/strong>&lt;a class="anchor" href="#%e7%ac%ac%e4%b8%80%e7%ab%a0-%e5%b0%8f%e8%af%b4%e5%ae%b6%e6%98%af%e5%ae%bd%e5%ae%b9%e7%9a%84%e4%ba%ba%e7%a7%8d%e5%90%97">#&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>这东西有便是有，没有便是没有。当然，有人是生而有之，也有人是通过后天艰苦努力获得的。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>尽管小说家没有名额限制，书店里的空间却是有限的。&lt;/p></description></item><item><title> 《当我谈跑步时，我谈些什么》笔记</title><link>https://yindongliang.com/posts/%E5%BD%93%E6%88%91%E8%B0%88%E8%B7%91%E6%AD%A5%E6%97%B6%E6%88%91%E8%B0%88%E4%BA%9B%E4%BB%80%E4%B9%88%E7%AC%94%E8%AE%B0/</link><pubDate>Thu, 27 Mar 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/%E5%BD%93%E6%88%91%E8%B0%88%E8%B7%91%E6%AD%A5%E6%97%B6%E6%88%91%E8%B0%88%E4%BA%9B%E4%BB%80%E4%B9%88%E7%AC%94%E8%AE%B0/</guid><description>&lt;blockquote class='book-hint '>
&lt;p>&lt;strong>《当我谈跑步时，我谈些什么》&lt;/strong> [日]村上春树，笔记来自微信读书。&lt;/p>&lt;/blockquote>&lt;h3 id="点评"> &lt;strong>点评&lt;/strong>&lt;a class="anchor" href="#%e7%82%b9%e8%af%84">#&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>2025/03/07 认为好看&lt;/strong>&lt;/p>
&lt;p>看了这本书，我这样想，你可能不需要总去读什么成功学，成长学，方法论之类的书，有这样一本小书经常打开看一看，一样能获取到源源不断的能量。 村上春树就是这样一个，内心有源源不断能量的人，又是一个坚韧、温柔、诚恳有智慧的人。&lt;strong>村上给自己的墓志铭说是：他至少是跑到了最后。我觉得，他想说的还是，“他也写到了最后“&lt;/strong> 。&lt;/p></description></item><item><title>装修注意事项</title><link>https://yindongliang.com/posts/house-decorating-suggestion/</link><pubDate>Thu, 27 Mar 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/house-decorating-suggestion/</guid><description>&lt;p>好早之前记录的笔记，零零散散的，还是先放出来吧，随时再更新。&lt;/p>
&lt;h2 id="楼梯">楼梯&lt;a class="anchor" href="#%e6%a5%bc%e6%a2%af">#&lt;/a>&lt;/h2>
&lt;p>楼梯的步数最好是单数，符合人体工程学，我家 3 米层高做了 17 步。&lt;/p>
&lt;h2 id="家用电器">家用电器&lt;a class="anchor" href="#%e5%ae%b6%e7%94%a8%e7%94%b5%e5%99%a8">#&lt;/a>&lt;/h2>
&lt;p>洗碗机确实可以提高幸福感。&lt;/p></description></item><item><title>《控糖革命》笔记</title><link>https://yindongliang.com/posts/%E6%8E%A7%E7%B3%96%E9%9D%A9%E5%91%BD%E7%AC%94%E8%AE%B0/</link><pubDate>Sat, 08 Mar 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/%E6%8E%A7%E7%B3%96%E9%9D%A9%E5%91%BD%E7%AC%94%E8%AE%B0/</guid><description>&lt;blockquote class='book-hint '>
&lt;p>本文是使用微信读书整理的读书笔记。&lt;/p>&lt;/blockquote>&lt;h2 id="控糖革命杰西安佐斯佩法">《控糖革命》杰西·安佐斯佩（法）&lt;a class="anchor" href="#%e6%8e%a7%e7%b3%96%e9%9d%a9%e5%91%bd%e6%9d%b0%e8%a5%bf%e5%ae%89%e4%bd%90%e6%96%af%e4%bd%a9%e6%b3%95">#&lt;/a>&lt;/h2>
&lt;h3 id="前言-聆听来自身体的声音"> &lt;strong>前言 聆听来自身体的声音&lt;/strong>&lt;a class="anchor" href="#%e5%89%8d%e8%a8%80-%e8%81%86%e5%90%ac%e6%9d%a5%e8%87%aa%e8%ba%ab%e4%bd%93%e7%9a%84%e5%a3%b0%e9%9f%b3">#&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>对于大多数人来说，身体就像一个黑匣子：我们知道它的功能，但又说不清楚它是怎样工作的。我们经常会根据自己的意愿和周边信息来决定中午吃什么，而不是根据身体的真正所需。&lt;/p></description></item><item><title>Hugo 的 Type 和 Layout 概念的区别</title><link>https://yindongliang.com/posts/Hugo-%E7%9A%84-Type-%E5%92%8C-Layout-%E6%A6%82%E5%BF%B5%E7%9A%84%E5%8C%BA%E5%88%AB/</link><pubDate>Wed, 19 Feb 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/Hugo-%E7%9A%84-Type-%E5%92%8C-Layout-%E6%A6%82%E5%BF%B5%E7%9A%84%E5%8C%BA%E5%88%AB/</guid><description>&lt;p>在 Hugo 中，虽然 “type” 和 “layout” 都会影响模板的选择，但它们的用途和工作方式有明显的不同，下面详细说明：&lt;/p>
&lt;hr>
&lt;h2 id="1-type">1. type&lt;a class="anchor" href="#1-type">#&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>定义与默认行为&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>“type” 通常用来定义内容的类型（或类别）。如果在前言中没有显式声明 type，Hugo 会默认将内容文件所在的目录（也就是 section）作为 type。&lt;/li>
&lt;li>例如，位于 content/posts/ 下的文章默认 type 就是 &amp;ldquo;posts&amp;rdquo;。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>模板查找机制&lt;/strong>&lt;/p></description></item><item><title>我的 2024 年总结</title><link>https://yindongliang.com/posts/review-2024/</link><pubDate>Sun, 02 Feb 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/review-2024/</guid><description>&lt;p>2024 年是意志坚定的一年，不管是工作、学习还是生活，来一起听一下 Gloria Gaynor 的《I Will Survive》。另外总结拖到现在才发出来的原因是，最近一个月 Windsurf 帮我写代码很上头，再没心思搞别的。现在不能再拖了，明天要开始新年第一天上班。&lt;/p></description></item><item><title>零宽度空格与 CSS 换行行为</title><link>https://yindongliang.com/posts/zero-width-space-and-css-word-wrap/</link><pubDate>Fri, 22 Nov 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/zero-width-space-and-css-word-wrap/</guid><description>&lt;p>在解决 &lt;a href="https://yindongliang.com/tags">Tags&lt;/a> 页面行尾词语被迫换行的问题时，发现 &lt;code>&amp;amp;nbsp;&lt;/code> 并不能强制连接字符，于是调查发现，还有零宽度空格这一概念。在 HTML 中，如果你需要一个既不会占用额外空间，又能用作连接的字符，可以使用零宽度符号，它们也是一种 &lt;a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Entity">HTML 实体&lt;/a>（HTML Entities）。&lt;/p></description></item><item><title>理解和使用 CSS 自定义属性（CSS 变量）</title><link>https://yindongliang.com/posts/%E7%90%86%E8%A7%A3%E5%92%8C%E4%BD%BF%E7%94%A8-CSS-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7CSS-%E5%8F%98%E9%87%8F/</link><pubDate>Sun, 30 Jun 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/%E7%90%86%E8%A7%A3%E5%92%8C%E4%BD%BF%E7%94%A8-CSS-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7CSS-%E5%8F%98%E9%87%8F/</guid><description>&lt;p>在现代 Web 开发中，&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Using_CSS_custom_properties">CSS 自定义属性&lt;/a>（也称为 CSS 变量）提供了一种强大的方式来创建易于维护和灵活的样式表。本文将探讨如何定义和使用这些变量，以及如何通过它们来实现更高效的设计。&lt;/p></description></item><item><title>2024 年我的工具列表</title><link>https://yindongliang.com/posts/my-toolkit-2024/</link><pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/my-toolkit-2024/</guid><description>&lt;p>从桌面端的应用软件这个角度来看，当下也是一个动荡的年代，不管是之前已经有的形态，还是还未出现的形态，也不管是开源的还是收费的，好用的新工具层出不穷，AI 的入场更是要把所有软件重新设计的节奏。我希望整理下最近几年一直在用的软件，记录当前的状态，这是相关主题的第一篇，争取后面每年都能关注下一下这个话题。&lt;/p></description></item><item><title>了解下自定义数据属性 data-*</title><link>https://yindongliang.com/posts/HTMLElement-dataset/</link><pubDate>Mon, 27 May 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/HTMLElement-dataset/</guid><description>&lt;p>测试主题切换功能时，遇到了 &lt;code>data-theme&lt;/code> 这个属性，问了下 gpt， 发现 &lt;code>data-theme&lt;/code> 不是 CSS 标准中的预定义属性，而是一个自定义的属性。更准确地说，它是 HTML5 中的 &amp;ldquo;data-&amp;rdquo; &lt;a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Howto/Use_data_attributes">数据属性&lt;/a>的一种。&lt;/p>
&lt;h2 id="html5-中的-data--属性">HTML5 中的 &amp;ldquo;data-&amp;rdquo; 属性&lt;a class="anchor" href="#html5-%e4%b8%ad%e7%9a%84-data--%e5%b1%9e%e6%80%a7">#&lt;/a>&lt;/h2>
&lt;p>HTML5 引入了 &lt;code>data-&lt;/code> 属性，允许你为元素添加自定义的非标准属性。这些自定义属性必须以 &lt;code>data-&lt;/code> 开头，后面跟一个名称。例如，&lt;code>data-theme&lt;/code>、&lt;code>data-user-id&lt;/code>、&lt;code>data-state&lt;/code> 等等。这些属性的主要目的是为元素存储与页面或应用程序相关的私有数据，而这些数据不会影响元素的展示或行为。&lt;/p></description></item><item><title>使 HTML 元素居中有哪些方案？</title><link>https://yindongliang.com/posts/how-to-make-html-element-center/</link><pubDate>Sat, 25 May 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/how-to-make-html-element-center/</guid><description>&lt;p>有多种方式可以实现HTML标签的居中，具体的方式会根据需要居中的元素类型（块级元素还是行内元素）以及具体应用的上下文来决定。下面将介绍几种常见的方法，涉及到的知识包括 CSS 盒模型、Flexbox 布局和 Grid 布局等。&lt;/p></description></item><item><title>CSS Modules 是什么</title><link>https://yindongliang.com/posts/CSS-Modules-%E6%98%AF%E4%BB%80%E4%B9%88/</link><pubDate>Mon, 20 May 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/CSS-Modules-%E6%98%AF%E4%BB%80%E4%B9%88/</guid><description>&lt;p>CSS Modules 是一种 CSS 文件的模块化和组件化的解决方案。它允许你将 CSS 样式局部化到组件中，从而避免全局命名冲突问题。每个 CSS 类名和动画名称默认都被视为局部作用域的，只有在特定模块中才会生效。这种方式非常适合在现代前端开发中使用，特别是与组件化框架（如 React、Vue 等）结合使用时。&lt;/p></description></item><item><title>了解 glob 模式匹配</title><link>https://yindongliang.com/posts/%E4%BA%86%E8%A7%A3-glob-%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D/</link><pubDate>Sat, 18 May 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/%E4%BA%86%E8%A7%A3-glob-%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D/</guid><description>&lt;p>在 Visual Studio Code（VSCode）以及许多其他工具和库中，文件路径匹配通常使用 &lt;a href="https://en.wikipedia.org/wiki/Glob_%28programming%29">glob 模式&lt;/a>。&lt;/p>
&lt;h2 id="glob-模式中的通配符">Glob 模式中的通配符&lt;a class="anchor" href="#glob-%e6%a8%a1%e5%bc%8f%e4%b8%ad%e7%9a%84%e9%80%9a%e9%85%8d%e7%ac%a6">#&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>&lt;code>*&lt;/code>：匹配任意数量的字符（不包括路径分隔符 &lt;code>/&lt;/code>）。&lt;/li>
&lt;li>&lt;code>**&lt;/code>：匹配任意数量的目录层级，包括子目录。&lt;/li>
&lt;li>&lt;code>?&lt;/code>：匹配单个字符。&lt;/li>
&lt;li>&lt;code>[abc]&lt;/code>：匹配方括号内的任意一个字符。&lt;/li>
&lt;li>&lt;code>{a,b}&lt;/code>：匹配花括号内的任意一个模式。&lt;/li>
&lt;/ul>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Wildcard&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;th>Example&lt;/th>
 &lt;th>Matches&lt;/th>
 &lt;th>Does not match&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>*&lt;/code>&lt;/td>
 &lt;td>matches any number of any characters including none&lt;/td>
 &lt;td>&lt;code>Law*&lt;/code>&lt;/td>
 &lt;td>&lt;code>Law&lt;/code>, &lt;code>Laws&lt;/code>, or &lt;code>Lawyer&lt;/code>&lt;/td>
 &lt;td>&lt;code>GrokLaw&lt;/code>, &lt;code>La&lt;/code>, or &lt;code>aw&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>*Law*&lt;/code>&lt;/td>
 &lt;td>&lt;code>Law&lt;/code>, &lt;code>GrokLaw&lt;/code>, or &lt;code>Lawyer&lt;/code>.&lt;/td>
 &lt;td>&lt;code>La&lt;/code>, or &lt;code>aw&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>?&lt;/code>&lt;/td>
 &lt;td>matches any single character&lt;/td>
 &lt;td>&lt;code>?at&lt;/code>&lt;/td>
 &lt;td>&lt;code>Cat&lt;/code>, &lt;code>cat&lt;/code>, &lt;code>Bat&lt;/code> or &lt;code>bat&lt;/code>&lt;/td>
 &lt;td>&lt;code>at&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>[abc]&lt;/code>&lt;/td>
 &lt;td>matches one character given in the bracket&lt;/td>
 &lt;td>&lt;code>[CB]at&lt;/code>&lt;/td>
 &lt;td>&lt;code>Cat&lt;/code> or &lt;code>Bat&lt;/code>&lt;/td>
 &lt;td>&lt;code>cat&lt;/code>, &lt;code>bat&lt;/code> or &lt;code>CBat&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>[a-z]&lt;/code>&lt;/td>
 &lt;td>matches one character from the (locale-dependent) range given in the bracket&lt;/td>
 &lt;td>&lt;code>Letter[0-9]&lt;/code>&lt;/td>
 &lt;td>&lt;code>Letter0&lt;/code>, &lt;code>Letter1&lt;/code>, &lt;code>Letter2&lt;/code> up to &lt;code>Letter9&lt;/code>&lt;/td>
 &lt;td>&lt;code>Letters&lt;/code>, &lt;code>Letter&lt;/code> or &lt;code>Letter10&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="示例解释">示例解释&lt;a class="anchor" href="#%e7%a4%ba%e4%be%8b%e8%a7%a3%e9%87%8a">#&lt;/a>&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;code>**/*.log&lt;/code>：&lt;/p></description></item><item><title>使用 EditorConfig 和 Prettier 来规范代码风格</title><link>https://yindongliang.com/posts/%E4%BD%BF%E7%94%A8-EditorConfig-%E5%92%8C-Prettier-%E6%9D%A5%E8%A7%84%E8%8C%83%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC/</link><pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/%E4%BD%BF%E7%94%A8-EditorConfig-%E5%92%8C-Prettier-%E6%9D%A5%E8%A7%84%E8%8C%83%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC/</guid><description>&lt;p>写前端代码实践下来一段时间，如果是我自己的前端项目，缩进类型一定是空格，长度必须是 2，因为 4 还是太长了，对 &lt;code>HTML&lt;/code> 类的模板以及 js 代码不友好。但是如何约束队友呢，不论是有意还是无意的差异，为了让大家保持风格统一，我发现下面工具可以解决问题。&lt;/p></description></item><item><title>理解 useMemo、useCallback 和 memo</title><link>https://yindongliang.com/posts/useMemo-useCallback-and-memo/</link><pubDate>Wed, 15 May 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/useMemo-useCallback-and-memo/</guid><description>&lt;p>虽然 React 的官方文档已经写的很清楚了，但我还是想总结下。形而上地讲前两个是 Hook，而 &lt;code>memo&lt;/code> 是 API。形而下地说，&lt;code>useMemo&lt;/code>、&lt;code>useCallback&lt;/code> 和 &lt;code>React.memo&lt;/code> 是 React 中用于优化性能的工具，它们帮助你避免不必要的重新渲染。&lt;/p></description></item><item><title>CSS 中的 inherit 选项</title><link>https://yindongliang.com/posts/understand-css-inherit/</link><pubDate>Tue, 14 May 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/understand-css-inherit/</guid><description>&lt;p>在 CSS 中，&lt;code>inherit&lt;/code> 关键字用于明确指定一个属性应从其父元素继承其值。几乎所有的 CSS 属性都可以使用 &lt;code>inherit&lt;/code> 值，但并非所有属性默认继承自其父元素。使用 &lt;code>inherit&lt;/code> 可以确保某个特定元素的属性值与其父元素相同，即使这个属性默认是不继承的。&lt;/p></description></item><item><title>我的 2023 年总结</title><link>https://yindongliang.com/posts/review-2023/</link><pubDate>Sun, 31 Dec 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/review-2023/</guid><description>&lt;blockquote class='book-hint '>
&lt;p>播放配乐 Blowing in the Wind - Bob Dylan，阅读效果更佳。&lt;/p>&lt;/blockquote>&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=566993785&amp;auto=1&amp;height=66">&lt;/iframe>
&lt;p>2023 这一年，工作上相当生活，生活上相当工作。&lt;/p>
&lt;h2 id="生活">生活&lt;a class="anchor" href="#%e7%94%9f%e6%b4%bb">#&lt;/a>&lt;/h2>
&lt;p>因为生活上相当工作，所以我觉得还是先说生活，琐事我断断续续记录在了周报里，这里就不再重复，只说重点。&lt;/p></description></item><item><title>tar 命令中的绝对路径和相对路径使用注意</title><link>https://yindongliang.com/posts/tar-absolute-and-relative-path/</link><pubDate>Tue, 14 Mar 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/tar-absolute-and-relative-path/</guid><description>&lt;p>&lt;code>tar&lt;/code> 命令是在 Linux 操作系统中用于打包和压缩文件的命令，先看下基本使用，然后再讨论相对路径和绝对路径的问题。&lt;/p>
&lt;h2 id="基本使用方法">基本使用方法&lt;a class="anchor" href="#%e5%9f%ba%e6%9c%ac%e4%bd%bf%e7%94%a8%e6%96%b9%e6%b3%95">#&lt;/a>&lt;/h2>
&lt;h3 id="压缩">压缩&lt;a class="anchor" href="#%e5%8e%8b%e7%bc%a9">#&lt;/a>&lt;/h3>
&lt;p>要将多个文件打包成一个文件，可以使用以下命令：&lt;/p></description></item><item><title>Python 的 dict.fromkeys 的坑</title><link>https://yindongliang.com/posts/python-dict-fromkeys/</link><pubDate>Fri, 10 Mar 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/python-dict-fromkeys/</guid><description>&lt;p>目前使用到 &lt;code>dict.fromkeys&lt;/code> 方法主要有两个场景：一个是按照数组的原有顺序去重，另一个就是正常的根据 &lt;code>keys&lt;/code> 构建一个 &lt;code>dict&lt;/code>，这里讨论的是第二种情况。&lt;/p>
&lt;p>下面这个例子：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">l&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#63c381">&amp;#34;foo&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#63c381">&amp;#34;bar&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">v&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>&lt;span style="color:#63c381">&amp;#34;age&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span> &lt;span style="color:#d19a66">0&lt;/span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">d&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#e5c07b">dict&lt;/span>&lt;span style="color:#54b1c7">.&lt;/span>&lt;span style="color:#aa89ea">fromkeys&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">l&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#aa89ea">v&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">d&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#63c381">&amp;#34;foo&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">][&lt;/span>&lt;span style="color:#63c381">&amp;#34;age&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span> &lt;span style="color:#54b1c7">+=&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">d&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#63c381">&amp;#34;bar&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">][&lt;/span>&lt;span style="color:#63c381">&amp;#34;age&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span> &lt;span style="color:#54b1c7">+=&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">d&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#63c381">&amp;#34;foo&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">][&lt;/span>&lt;span style="color:#63c381">&amp;#34;age&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>由于 Python 在 &lt;code>v&lt;/code> 处存储的是引用而不是值的原因，故 &lt;code>d[&amp;quot;foo&amp;quot;][&amp;quot;age&amp;quot;]&lt;/code> 最终的值为 2，如果用 &lt;code>id()&lt;/code> 方法打印两个对象的地址，可以发现是同一个值。&lt;/p></description></item><item><title>我的 2022 年总结</title><link>https://yindongliang.com/posts/review-2022/</link><pubDate>Fri, 30 Dec 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/review-2022/</guid><description>&lt;blockquote class='book-hint '>
&lt;p>播放配乐，阅读效果更佳。&lt;/p>&lt;/blockquote>&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=1934010087&amp;auto=1&amp;height=66">&lt;/iframe>
&lt;p>转眼又到了 2022 年底，时间过得飞快，今年算是完成了几件有意义的事情，但这期间也充满了迷茫与艰难选择，内心发生了跌宕起伏的情绪变化，无论结果如何，2022 年发生的一切对我来说都是宝贵的经历。&lt;/p></description></item><item><title>读《身份的焦虑》</title><link>https://yindongliang.com/posts/status-anxiety/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/status-anxiety/</guid><description>&lt;h2 id="前言">前言&lt;a class="anchor" href="#%e5%89%8d%e8%a8%80">#&lt;/a>&lt;/h2>
&lt;p>2022 年已过大半，深感今年是我步入社会六年以来最魔幻的一年。上网冲浪就是这样的感觉：抖音在贩卖职业焦虑，有的叫“看清社会底层逻辑”、有的叫“未来中国发展在哪”，总之看起来和你息息相关，不知道的话你就会被淘汰。知乎在贩卖知识焦虑，那种一大包视频课程打包带走，满文件夹的 PDF 文档倾情放送，获取面试题请扫微信公众号，还有一些大数据时代必会的 Excel 技能、你必须了解的人工智能产业发展现状等等商业宣传。同时也有 B 站的 up 主们在躺平、在摆烂、在旅行、在裸辞、在逃离北上广、在回农村盖洋楼、在直播考研、在 run。&lt;/p></description></item><item><title>I/O 多路复用机制</title><link>https://yindongliang.com/posts/io-multiplexing/</link><pubDate>Sun, 04 Sep 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/io-multiplexing/</guid><description>&lt;p>面试问的太多了，还是专门整理一下吧，理清知识结构。&lt;/p>
&lt;h2 id="总览">总览&lt;a class="anchor" href="#%e6%80%bb%e8%a7%88">#&lt;/a>&lt;/h2>
&lt;p>首先需要注意的是，下面讨论的几种 I/O 模型都属于同步（synchronous） I/O 操作，至于异步（asynchronous） I/O 操作，以后再说。&lt;/p></description></item><item><title>深入了解 Redis 的各种数据结构</title><link>https://yindongliang.com/posts/deep-in-redis-data-structure/</link><pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/deep-in-redis-data-structure/</guid><description>&lt;p>最近面试中发现我比较薄弱的地方还是在 Redis，很多数据结构对应的底层的原理不知道，于是来看看相关资料和&lt;a href="https://github.com/redis/redis">源码&lt;/a>，工作中没有这么深入研究过，惭愧了。&lt;/p>
&lt;h2 id="string">String&lt;a class="anchor" href="#string">#&lt;/a>&lt;/h2>
&lt;h3 id="使用方法">使用方法&lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8%e6%96%b9%e6%b3%95">#&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>127.0.0.1:6379&amp;gt; &lt;span style="color:#e5c07b">set&lt;/span> key value
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1:6379&amp;gt; &lt;span style="color:#e5c07b">set&lt;/span> number &lt;span style="color:#d19a66">10086&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1:6379&amp;gt; &lt;span style="color:#e5c07b">set&lt;/span> title &lt;span style="color:#63c381">&amp;#34;hello redis&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1:6379&amp;gt; get key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#63c381">&amp;#34;value&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1:6379&amp;gt; get number
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#63c381">&amp;#34;10086&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1:6379&amp;gt; get title
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#63c381">&amp;#34;hello redis&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="底层结构">底层结构&lt;a class="anchor" href="#%e5%ba%95%e5%b1%82%e7%bb%93%e6%9e%84">#&lt;/a>&lt;/h3>
&lt;p>String 类型的底层的数据结构实现主要是 int 和 SDS（简单动态字符串），C 语言内置的 int 就不用介绍了，下面详细说一下 SDS。&lt;/p></description></item><item><title>CSS 布局概览</title><link>https://yindongliang.com/posts/css-display/</link><pubDate>Sun, 10 Jul 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/css-display/</guid><description>&lt;p>越来越觉得，与其说 CSS 是编程语言，不如说它是配置文件。CSS （Cascading Style Sheets，层叠样式表）的诞生是为了图文信息展示服务的。CSS 布局机制通常就是指对 &lt;code>display&lt;/code> 属性的设置，&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_display">Display - MDN&lt;/a> 文档指明 &lt;code>display&lt;/code> 属性可以用来指示&lt;strong>六种维度&lt;/strong>的值，下面就看看 &lt;code>display&lt;/code> 设置了不同的值到底意味着什么。&lt;/p></description></item><item><title>CSS 选择器语法举例</title><link>https://yindongliang.com/posts/css-selector-syntax/</link><pubDate>Sun, 03 Jul 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/css-selector-syntax/</guid><description>&lt;h2 id="简单选择器">简单选择器&lt;a class="anchor" href="#%e7%ae%80%e5%8d%95%e9%80%89%e6%8b%a9%e5%99%a8">#&lt;/a>&lt;/h2>
&lt;h3 id="标签选择器">标签选择器&lt;a class="anchor" href="#%e6%a0%87%e7%ad%be%e9%80%89%e6%8b%a9%e5%99%a8">#&lt;/a>&lt;/h3>
&lt;p>标签选择器也叫元素选择器&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*标签选择器*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">tag&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>&lt;span style="color:#76a9f9">background-color&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span> &lt;span style="color:#e5c07b">gold&lt;/span>&lt;span style="color:#abb2bf">;}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="id-选择器">ID 选择器&lt;a class="anchor" href="#id-%e9%80%89%e6%8b%a9%e5%99%a8">#&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*ID 选择器*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">#&lt;/span>&lt;span style="color:#ca72ff">someID&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>&lt;span style="color:#76a9f9">background-color&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span> &lt;span style="color:#e5c07b">gold&lt;/span>&lt;span style="color:#abb2bf">;}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="类选择器">类选择器&lt;a class="anchor" href="#%e7%b1%bb%e9%80%89%e6%8b%a9%e5%99%a8">#&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*类选择器*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#ca72ff">someClass&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>&lt;span style="color:#76a9f9">background-color&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span> &lt;span style="color:#e5c07b">gold&lt;/span>&lt;span style="color:#abb2bf">;}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="组合使用">组合使用&lt;a class="anchor" href="#%e7%bb%84%e5%90%88%e4%bd%bf%e7%94%a8">#&lt;/a>&lt;/h3>
&lt;p>还有一种选择器也比较常见，形如 &lt;code>tag.class&lt;/code>，但是查了一圈文档没有找到一个标准的名字，有的就归为类选择器，暂时先这么叫。它通常用来选择一个 HTML 中的带有 &lt;code>class='xxx'&lt;/code> 的标签元素。&lt;/p></description></item><item><title>线上练习跟老外用英语对话</title><link>https://yindongliang.com/posts/practice-talking-with-english-speaking-person-online/</link><pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/practice-talking-with-english-speaking-person-online/</guid><description>&lt;p>五月到六月，由于疫情原因，被迫居家隔离了一个月，在家也特别无聊，就下了几个可以和外国人线上对话的 App（Cambly、Preply，需付费）打算练练英语口语，于是开启了一段非常有意思的与老外聊天的经历。&lt;/p></description></item><item><title>AJAX 是什么？</title><link>https://yindongliang.com/posts/what-is-AJAX/</link><pubDate>Mon, 02 May 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/what-is-AJAX/</guid><description>&lt;p>这个问题既熟悉又有点陌生，先看概念。AJAX 是 &lt;em>Asynchronous Javavascript XML&lt;/em> 的缩写，即异步 JavaScript 和 XML。使用 AJAX 技术可以在无需重新加载整个网页的情况下，能够更新部分网页，从而给带来更好的用户体验。另外 AJAX 不仅使用 XML，实际上由于 JSON 结构的易读和轻量反而更受欢迎。&lt;/p></description></item><item><title>浏览器的事件机制</title><link>https://yindongliang.com/posts/browser-event/</link><pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/browser-event/</guid><description>&lt;p>事件是在编程时系统内发生的动作或者发生的事情，系统响应事件后，如果需要，我们可以用事件处理器（event handler）对事件做出回应。浏览器中常见的可以触发事件的时机比如有：&lt;/p></description></item><item><title>搞懂原型链</title><link>https://yindongliang.com/posts/prototype-chain/</link><pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/prototype-chain/</guid><description>&lt;p>与一般基于类的面向对象语言（C++、Java）不同，JavaScript 是基于原型的语言。&lt;/p>
&lt;h2 id="原型-prototype">原型 &lt;code>[[Prototype]]&lt;/code>&lt;a class="anchor" href="#%e5%8e%9f%e5%9e%8b-prototype">#&lt;/a>&lt;/h2>
&lt;p>打开浏览器的控制台，输入 &lt;code>let b = {&amp;quot;hello&amp;quot;: &amp;quot;world&amp;quot;}&lt;/code> ，然后查看 &lt;code>b&lt;/code> ，你会发现一个 &lt;code>[[Prototype]]&lt;/code> 属性。这是每个对象都有的&lt;strong>隐藏属性&lt;/strong>，它要么为 &lt;code>null&lt;/code>，要么是对另一个对象的引用，那个对象就被称为 &lt;code>b&lt;/code> 的 &lt;em>原型&lt;/em>（proto type）。&lt;/p></description></item><item><title>WebSocket 是什么？</title><link>https://yindongliang.com/posts/what-is-websocket/</link><pubDate>Tue, 15 Mar 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/what-is-websocket/</guid><description>&lt;p>WebSocket 是 HTML5 开始提供的一种网络传输协议，可以在单个 TCP 连接上进行全双工通信，位于 OSI 参考模型的应用层。WebSocket 使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。在 WebSocket API 中，浏览器和服务器只需要完成一次握手，两者之间就直接可以创建&lt;strong>持久性&lt;/strong>的连接，并进行&lt;strong>双向&lt;/strong>数据传输。&lt;/p></description></item><item><title>TCP/IP 协议理论基础整理</title><link>https://yindongliang.com/posts/tcpip-questions/</link><pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/tcpip-questions/</guid><description>&lt;p>因为 TCP/IP 协议中每个协议都是层层包装、依赖，分开说可能并不会更容易掌握这些理论知识，所以这里把这些协议都放在了一起。&lt;/p>
&lt;h2 id="名词解释">名词解释&lt;a class="anchor" href="#%e5%90%8d%e8%af%8d%e8%a7%a3%e9%87%8a">#&lt;/a>&lt;/h2>
&lt;h3 id="七层和四层模型">七层和四层模型&lt;a class="anchor" href="#%e4%b8%83%e5%b1%82%e5%92%8c%e5%9b%9b%e5%b1%82%e6%a8%a1%e5%9e%8b">#&lt;/a>&lt;/h3>
&lt;p>&lt;a href="https://cdn.yindongliang.com/uPic/20160731161720376.gif">这里&lt;/a>有一张图比较详细。&lt;/p>
&lt;p>OSI 七层参考模型包括：&lt;/p>
&lt;ul>
&lt;li>应用层：应用程序可直接使用的协议，如 HTTP、FTP。&lt;/li>
&lt;li>表示层：主要是数据格式转化，比如压缩、加密。&lt;/li>
&lt;li>会话层：定义了如何建立及开始会话，比如 TLS。&lt;/li>
&lt;li>传输层：接受上一层的数据，并将其交给网络层，且保证数据有效到达。&lt;/li>
&lt;li>网络层：控制子网的运行，提供标准的端对端的包传输。&lt;/li>
&lt;li>数据链路层：定义了单个链路上如何传输数据。&lt;/li>
&lt;li>物理层：传输介质，硬件。&lt;/li>
&lt;/ul>
&lt;p>四层协议包括：&lt;/p></description></item><item><title>开工就感冒了</title><link>https://yindongliang.com/posts/catch-a-cold-when-start-work/</link><pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/catch-a-cold-when-start-work/</guid><description>&lt;p>之前还说要将焦虑转化为动力，结果操之过急，在上周四（2.17）的下午一个连续四个小时的封闭会议之后，当晚回家就感觉特别疲惫，紧接着第二天中午就开始发烧了。&lt;/p></description></item><item><title>回家过了个年</title><link>https://yindongliang.com/posts/this-year-go-home/</link><pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/this-year-go-home/</guid><description>&lt;p>今年过年回山东老家遇到了各路亲戚，由于 2020 年的疫情就没串门，2021 年又回媳妇家，实际上今年才是两年后的大范围重新相聚，亲戚还是那些人，距离上次见面的时间仿佛也没过几天。&lt;/p></description></item><item><title>了解下网络硬件设备</title><link>https://yindongliang.com/posts/network-hardware-device/</link><pubDate>Sat, 29 Jan 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/network-hardware-device/</guid><description>&lt;p>看了一阵的网络知识，目前对于底层的网络硬件设备还有一些领域术语还是有点陌生，专门总结下。&lt;/p>
&lt;h2 id="集线器">集线器&lt;a class="anchor" href="#%e9%9b%86%e7%ba%bf%e5%99%a8">#&lt;/a>&lt;/h2>
&lt;p>集线器（hub）是指集中器设备（concentrator）。最初的局域网络是通过集线器将多台电脑连接起来进行通信。&lt;/p></description></item><item><title>用 Charles 进行手机抓包</title><link>https://yindongliang.com/posts/use-charles-capture-package-on-mobile/</link><pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/use-charles-capture-package-on-mobile/</guid><description>&lt;p>如果使用 Wireshark 解决手机抓包，需要把电脑设为热点，这样一般笔记本电脑不太方便，Charles 提供了系统代理的功能，可以使用 Charles 更方便地进行手机抓包。另外 Charles 除了可以解析未加密的 HTTP，通过证书的配置也可以解析加密过的 HTTPS 和 HTTP/2，下面记录下配置方式。&lt;/p></description></item><item><title>回归写作</title><link>https://yindongliang.com/posts/back-to-writing/</link><pubDate>Thu, 20 Jan 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/back-to-writing/</guid><description>&lt;p>今年以来发现，我能写出来的东西越来越多了，是一直期待的状态，但不是说写作内容的质量有多高了，而是写作的意愿更强了。为什么意愿更强了，一方面我发现如果输入更多了，再不进行输出的话，脑子就会有一种装满东西的感觉，从而无法输入更多的东西，而且有的内容如果不输出，还要经常隔三差五的回去重新看，心理上会觉得这个问题还没有解决从而产生焦虑，可以说现在我的写作也是一种被动的输出行为。&lt;/p></description></item><item><title>Wireshark 食用指南</title><link>https://yindongliang.com/posts/wireshark-usage/</link><pubDate>Thu, 13 Jan 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/wireshark-usage/</guid><description>&lt;p>最近看 HTTPS、TCP 的时候发现很多地方都会用 Wireshark 抓包来实际操作，于是系统地看了下。&lt;/p>
&lt;h2 id="wireshark-历史">Wireshark 历史&lt;a class="anchor" href="#wireshark-%e5%8e%86%e5%8f%b2">#&lt;/a>&lt;/h2>
&lt;p>Wireshark（导线鲨鱼，前称 Ethereal，空灵）是一个免费开源的网络数据包分析软件。网络数据包分析软件的功能是截取网络数据包，并尽可能显示出最为详细的网络数据包资料。在&lt;a href="https://zh.wikipedia.org/wiki/GNU%e9%80%9a%e7%94%a8%e5%85%ac%e5%85%b1%e8%ae%b8%e5%8f%af%e8%af%81">GNU通用公共许可证&lt;/a>的保障范围底下，用户可以以免费的代价获取软件与其代码，并拥有针对其源代码修改及定制的权利。&lt;/p></description></item><item><title>通用唯一识别码：UUID</title><link>https://yindongliang.com/posts/intro-uuid/</link><pubDate>Wed, 05 Jan 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/intro-uuid/</guid><description>&lt;p>UUID（Universally Unique Identifier，通用唯一识别码）的格式基本上是统一的，遵循一定的标准。最常见的 UUID 表示形式是由 3 2个十六进制数字组成，分为五组，这些组通过连字符（-）分隔，形式如下：&lt;/p></description></item><item><title>我的 2021 年总结</title><link>https://yindongliang.com/posts/review-2021/</link><pubDate>Fri, 31 Dec 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/review-2021/</guid><description>&lt;p>这是一篇 2021 年的年终总结，如果给 2021 一个关键词：那绝对是“价值观”。因为 2021 这一年是我价值观发生巨大改变的一年。回头看我还是感谢这一年发生过的事情，生活的很多道理我们都懂，但是如果没有经历过可能就没有深入的思考和实际的改变。&lt;/p></description></item><item><title>HTTP/2 概览</title><link>https://yindongliang.com/posts/http2-101/</link><pubDate>Sat, 25 Dec 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/http2-101/</guid><description>&lt;h2 id="http2-的背景">HTTP/2 的背景&lt;a class="anchor" href="#http2-%e7%9a%84%e8%83%8c%e6%99%af">#&lt;/a>&lt;/h2>
&lt;p>HTTP/2 协议发布于 2015 年，距离上一个版本 HTTP/1 的发布已经过去了 20 多年，20 年里，随着互联网规模的指数级增长，网络已经成为人们生活的一部分，各种应用对响应要求也越来越严苛，HTTP/1 根本上的性能问题也随之暴露出来。&lt;/p></description></item><item><title>HTTPS 的 SSL/TLS 协议</title><link>https://yindongliang.com/posts/https-ssl-tls-protocol/</link><pubDate>Thu, 16 Dec 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/https-ssl-tls-protocol/</guid><description>&lt;h2 id="https-简介">HTTPS 简介&lt;a class="anchor" href="#https-%e7%ae%80%e4%bb%8b">#&lt;/a>&lt;/h2>
&lt;p>通过上一篇的&lt;a href="http://localhost:1313/posts/https-algorithems/">HTTPS 之密码学基础&lt;/a>，现在可以正式进入 HTTPS 的介绍了。HTTPS 指的是超文本传输安全协议（&lt;strong>H&lt;/strong>yper&lt;strong>T&lt;/strong>ext &lt;strong>T&lt;/strong>ransfer &lt;strong>P&lt;/strong>rotocol &lt;strong>S&lt;/strong>ecure），顾名思义，比 HTTP 多了一个“安全”，而这里的安全指的就是 SSL/TLS 协议了，即 HTTPS 是由 HTTP + SSL/TLS 协议组成的。&lt;/p></description></item><item><title>HTTPS 的密码学基础</title><link>https://yindongliang.com/posts/https-algorithems/</link><pubDate>Thu, 02 Dec 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/https-algorithems/</guid><description>&lt;p>本来打算直接总结下 HTTPS，但是发现要写的很多内容其实都依靠密码学的基础概念，其实我在阅读别的资料的时候发现基本也是这样，不然说的时候上下文都串不起来，甚至可以说研究 HTTPS 约等于在研究加密算法。所以还是专门分一篇来说一下加密，这样后面说 SSL/TLS 的时候就可以拉通底层概念了。&lt;/p></description></item><item><title>InnoDB 的缓冲页管理</title><link>https://yindongliang.com/posts/innodb-memory-management/</link><pubDate>Thu, 11 Nov 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/innodb-memory-management/</guid><description>&lt;p>Innodb 存储引擎将存储的数据都是以页的形式存放在表空间中，表空间是 InnoDB 对数据文件的抽象，说到底还是存储在磁盘上，我们都知道 CPU 的速度非常快，不会直接操作磁盘，于是 InnoDB 设计了一个缓存池（Buffer Pool）的机制，有数据库操作时，现将磁盘的文件导入内存进行操作，然后再通过一定机制回写到磁盘上。&lt;/p></description></item><item><title>MySQL 的日志种类</title><link>https://yindongliang.com/posts/mysql-log/</link><pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/mysql-log/</guid><description>&lt;p>MySQL 数据库存在还多类型的日志，每一种日志都代表了一种数据库活动，了解这些日志可以侧面了解数据库的运行过程，在日常开发中也可以适当的运用。MySQL 中常见的日志文件有：错误日志、二进制日志、慢查询日志、一般查询日志、重做日志、回滚日志、中继日志，下面开始详细介绍一下。&lt;/p></description></item><item><title>数据库的索引</title><link>https://yindongliang.com/posts/db-index/</link><pubDate>Fri, 29 Oct 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/db-index/</guid><description>&lt;p>索引在数据库中的地位非常重要，只有搞明白索引，才有可能在日常的数据库相关工作中解决实际问题：提高库表设计能力、优化查询效率、提升数据库性能等核心问题。数据库的索引有哪些？以 MySQL 的 InnoDB 存储引擎为例，一般可分为聚集索引、辅助索引、全文索引、哈希索引。但是只说这些可能还不够，因为你应该还听说过主键索引、联合索引、唯一索引，甚至自适应哈希索引等等，他们都称为索引，只是通常描述的维度不一样，下面会逐渐区分开。本文就先从索引在数据结构上的实现开始说起。&lt;/p></description></item><item><title>数据库的事务</title><link>https://yindongliang.com/posts/db-tx/</link><pubDate>Fri, 22 Oct 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/db-tx/</guid><description>&lt;p>请思考一个我在工作中遇到的一个场景：假设用户参加了一个优惠活动，买了一个30 天的会员卡，然后活动又送了一个 7 天的体验卡，最终我要交付给用户 37 天的会员权益时间。如果这两笔订单同时请求系统进行交付，那如何能够一直正确的交付 37天，并正确计算各订单的开始结束时间？（公司 MySQL 的隔离级别是 RC）&lt;/p></description></item><item><title>数据库的锁</title><link>https://yindongliang.com/posts/db-lock/</link><pubDate>Sat, 16 Oct 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/db-lock/</guid><description>&lt;p>数据库里的锁根据范围和维度都有不同的实现和叫法，如果我这样列出来你可能会很焦虑：GAP 锁，记录锁，显式锁定，表级锁，行级锁，页级锁，咨询锁，间隙锁，共享锁，排他锁，互斥锁，自旋锁，读写锁，悲观锁，乐观锁，因为当初我也是这种感觉，现在我重新整理一遍，希望对你也有帮助。&lt;/p></description></item><item><title>交替打印 1-100 之间的奇数和偶数</title><link>https://yindongliang.com/posts/goroutine-print-0-to-100/</link><pubDate>Sat, 02 Oct 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/goroutine-print-0-to-100/</guid><description>&lt;p>题目：两个 goroutine 交替打印1-100之间的奇数和偶数。&lt;/p>
&lt;h3 id="方法一">方法一&lt;a class="anchor" href="#%e6%96%b9%e6%b3%95%e4%b8%80">#&lt;/a>&lt;/h3>
&lt;p>利用非缓冲 channel 的阻塞。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#aa89ea">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#98c379">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#98c379">&amp;#34;sync&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">func&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">()&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">ch&lt;/span> &lt;span style="color:#54b1c7">:=&lt;/span> &lt;span style="color:#e5c07b">make&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#76a9f9">chan&lt;/span> &lt;span style="color:#76a9f9">struct&lt;/span>&lt;span style="color:#abb2bf">{})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">var&lt;/span> &lt;span style="color:#aa89ea">wg&lt;/span> &lt;span style="color:#aa89ea">sync&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">WaitGroup&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">wg&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#00b1f7">Add&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#d19a66">2&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">go&lt;/span> &lt;span style="color:#76a9f9">func&lt;/span>&lt;span style="color:#abb2bf">()&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">defer&lt;/span> &lt;span style="color:#aa89ea">wg&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#00b1f7">Done&lt;/span>&lt;span style="color:#abb2bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span> &lt;span style="color:#54b1c7">:=&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span> &lt;span style="color:#abb2bf">&amp;lt;&lt;/span> &lt;span style="color:#d19a66">101&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">++&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#aa89ea">ch&lt;/span> &lt;span style="color:#54b1c7">&amp;lt;-&lt;/span> &lt;span style="color:#76a9f9">struct&lt;/span>&lt;span style="color:#abb2bf">{}{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#8a93a5;font-style:italic">//奇数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">%&lt;/span>&lt;span style="color:#d19a66">2&lt;/span> &lt;span style="color:#54b1c7">==&lt;/span> &lt;span style="color:#d19a66">1&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#aa89ea">fmt&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#00b1f7">Println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;线程1打印:&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">go&lt;/span> &lt;span style="color:#76a9f9">func&lt;/span>&lt;span style="color:#abb2bf">()&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">defer&lt;/span> &lt;span style="color:#aa89ea">wg&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#00b1f7">Done&lt;/span>&lt;span style="color:#abb2bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span> &lt;span style="color:#54b1c7">:=&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span> &lt;span style="color:#abb2bf">&amp;lt;&lt;/span> &lt;span style="color:#d19a66">101&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">++&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#54b1c7">&amp;lt;-&lt;/span> &lt;span style="color:#aa89ea">ch&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#8a93a5;font-style:italic">//偶数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">%&lt;/span>&lt;span style="color:#d19a66">2&lt;/span> &lt;span style="color:#54b1c7">==&lt;/span> &lt;span style="color:#d19a66">0&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#aa89ea">fmt&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#00b1f7">Println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;线程2打印:&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">wg&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#00b1f7">Wait&lt;/span>&lt;span style="color:#abb2bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="方法二">方法二&lt;a class="anchor" href="#%e6%96%b9%e6%b3%95%e4%ba%8c">#&lt;/a>&lt;/h3>
&lt;p>和方法一类似，但省去了 if 判断。&lt;/p></description></item><item><title>推荐下双拼输入法</title><link>https://yindongliang.com/posts/try-double-pinyin-input/</link><pubDate>Thu, 30 Sep 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/try-double-pinyin-input/</guid><description>&lt;h2 id="问题">问题&lt;a class="anchor" href="#%e9%97%ae%e9%a2%98">#&lt;/a>&lt;/h2>
&lt;p>最近打字聊天的工作比较多，发现我在拼类似【能不能】这种词语的时候经常打错成类似 &lt;code>negnbuneng&lt;/code> 或者 &lt;code>nengnbuneng&lt;/code>（见下图）这种有需要在两个字母之间来回切换的，还有就是 &lt;code>ang&lt;/code>、&lt;code>eng&lt;/code>、&lt;code>ong&lt;/code>、&lt;code>iong&lt;/code> 、&lt;code>uang&lt;/code>这种拼音，非常不值得敲那么多遍。&lt;/p></description></item><item><title>JS 加号运算符的运用</title><link>https://yindongliang.com/posts/js-plus-operator/</link><pubDate>Sat, 18 Sep 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/js-plus-operator/</guid><description>&lt;h2 id="一元运算符">一元运算符&lt;a class="anchor" href="#%e4%b8%80%e5%85%83%e8%bf%90%e7%ae%97%e7%ac%a6">#&lt;/a>&lt;/h2>
&lt;p>&lt;strong>语法：&lt;/strong> + Expression&lt;/p>
&lt;p>&lt;strong>说明：&lt;/strong> &lt;code>+&lt;/code> 号运算符作为一元运算符时，Expression将进行 &lt;a href="http://www.ecma-international.org/ecma-262/6.0/#sec-tonumber">ToNumber&lt;/a> 操作。&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>argument类型&lt;/th>
 &lt;th>返回值&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Undefined&lt;/td>
 &lt;td>return NaN&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Null&lt;/td>
 &lt;td>return +0&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Boolean&lt;/td>
 &lt;td>true return 1; false return 0;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Number&lt;/td>
 &lt;td>return value&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>String&lt;/td>
 &lt;td>若字符串为纯数字时返回转换后的数字；非纯数字返回NaN&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Symbol&lt;/td>
 &lt;td>抛出 TypeError 异常&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Object&lt;/td>
 &lt;td>进行以下步骤：1.先进行ToPrimitive(argument, hint Number)得到rs； 2.然后返回 ToNumber(rs)的结果。&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>示例：&lt;/p></description></item><item><title>JS 非空判断</title><link>https://yindongliang.com/posts/js-if-not-empty/</link><pubDate>Sat, 11 Sep 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/js-if-not-empty/</guid><description>&lt;p>在 js 中，有一个富有哲学意味的问题：「什么是空」？先看下面代码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">function&lt;/span> &lt;span style="color:#aa89ea">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#54b1c7">!&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">console&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">log&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;空&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span> &lt;span style="color:#76a9f9">else&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">console&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">log&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;非空&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#d19a66">0&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">null&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">main&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">undefined&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">NaN&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">// 以上全是“空”
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面这些好像很好判断，那下面这些呢？&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">function&lt;/span> &lt;span style="color:#aa89ea">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#54b1c7">!&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">console&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">log&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;空&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span> &lt;span style="color:#76a9f9">else&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">console&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">log&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#63c381">&amp;#34;非空&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">Infinity&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#54b1c7">-&lt;/span>&lt;span style="color:#e5c07b">Infinity&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">main&lt;/span>&lt;span style="color:#abb2bf">({})&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">main&lt;/span>&lt;span style="color:#abb2bf">([])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#76a9f9">function&lt;/span>&lt;span style="color:#abb2bf">(){})&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>很可惜，以上 5 种情况全为“非空”。所以，如果一股脑认为 &lt;code>if(!a)&lt;/code> 就可以判断非空的话，未免有些草率了。&lt;/p></description></item><item><title>跨域相关问题</title><link>https://yindongliang.com/posts/http-cross-domain-problem/</link><pubDate>Sat, 21 Aug 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/http-cross-domain-problem/</guid><description>&lt;p>本文先从 &lt;strong>CSRF&lt;/strong> 攻击的介绍开始，说明了跨域存在的问题，然后引入浏览器&lt;strong>同源策略&lt;/strong>的概念，明白了要限制跨域的原因后，再给出了标准的跨域请求方案：&lt;strong>CORS&lt;/strong>，所以总体上就三部分：CSRF、同源策略、CORS，文章有点长但不用慌，按顺序看就可以了。&lt;/p></description></item><item><title>了解下 MobX 概念</title><link>https://yindongliang.com/posts/mobx-primer/</link><pubDate>Mon, 19 Jul 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/mobx-primer/</guid><description>&lt;h2 id="基本概念">基本概念&lt;a class="anchor" href="#%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5">#&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>observable 函数
&lt;ul>
&lt;li>定义状态值&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>action 函数
&lt;ul>
&lt;li>用于修改状态值&lt;/li>
&lt;li>接受一个函数，返回一个签名相同的函数，提供触发时调用。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>derivations 派生，有两种：&lt;code>autorun&lt;/code> 和 &lt;code>computed&lt;/code>
&lt;ul>
&lt;li>reactions - autorun()
&lt;ul>
&lt;li>接受一个函数&lt;/li>
&lt;li>状态值发生改变后要执行的响应操作。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>computed value - computed()
&lt;ul>
&lt;li>接受一个函数，返回计算值对象。&lt;/li>
&lt;li>状态值发生改变时，计算值对象的值会自动更新。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="observable">observable&lt;a class="anchor" href="#observable">#&lt;/a>&lt;/h2>
&lt;p>MobX 中通过 &lt;code>observable&lt;/code> 来定义可观察状态。&lt;/p></description></item><item><title>了解下 Redux 概念</title><link>https://yindongliang.com/posts/redux-primer/</link><pubDate>Thu, 24 Jun 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/redux-primer/</guid><description>&lt;p>Redux 用来进行复杂的状态管理，Redux 的思想继承自 Flux，并进行了更加简洁的抽象。&lt;/p>
&lt;ul>
&lt;li>store
&lt;ul>
&lt;li>&lt;code>store.dispatch(action)&lt;/code> 是 View 发出 Action 的唯一方法，接受一个 Action 对象作为参数，将它发送出去。&lt;/li>
&lt;li>store 允许使用 &lt;code>store.subscribe()&lt;/code> 方法设置监听函数，一旦 State 发生变化，就自动执行这个函数。subscribe 也返回一个函数，调用这个函数就可以解除监听。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>action
&lt;ul>
&lt;li>改变 state 的唯一办法，就是使用 action，它会运送数据到 Store。&lt;/li>
&lt;li>action creator：view 要发送多少种消息，就会有多少种 action，action 有固定的格式。如果都手写，会很麻烦。可以定义一个函数来生成 action，这个函数就叫 action creator。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>state
&lt;ul>
&lt;li>&lt;code>Store&lt;/code> 对象包含所有数据。如果想得到某个时点的数据，就要对 Store 生成快照。这种时点的数据集合，就叫做 State，可以通过 &lt;code>store.getState()&lt;/code> 拿到。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>reducer
&lt;ul>
&lt;li>store 收到 action 以后，必须给出一个新的 state，这样 View 才会发生变化。这种 state 的计算过程就叫做 reducer。&lt;/li>
&lt;li>reducer 是一个纯函数&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>，它接受 action 和当前 state 作为参数，返回一个新的 state。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="reducer">reducer&lt;a class="anchor" href="#reducer">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">const&lt;/span> &lt;span style="color:#aa89ea">reducer&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">state&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#d19a66">0&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#aa89ea">action&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">=&amp;gt;&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">switch&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">action&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">type&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">case&lt;/span> &lt;span style="color:#98c379">&amp;#39;INCREMENT&amp;#39;&lt;/span>&lt;span style="color:#54b1c7">:&lt;/span> &lt;span style="color:#76a9f9">return&lt;/span> &lt;span style="color:#aa89ea">state&lt;/span> &lt;span style="color:#54b1c7">+&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">case&lt;/span> &lt;span style="color:#98c379">&amp;#39;DECREMENT&amp;#39;&lt;/span>&lt;span style="color:#54b1c7">:&lt;/span> &lt;span style="color:#76a9f9">return&lt;/span> &lt;span style="color:#aa89ea">state&lt;/span> &lt;span style="color:#54b1c7">-&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">default&lt;/span>&lt;span style="color:#54b1c7">:&lt;/span> &lt;span style="color:#76a9f9">return&lt;/span> &lt;span style="color:#aa89ea">state&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">};&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>reducer 是一个纯函数，你可以把所有子 Reducer 放在一个文件里面，然后统一引入。&lt;/p></description></item><item><title>浏览器中的 HTTP 缓存使用策略</title><link>https://yindongliang.com/posts/http-caching-in-browser/</link><pubDate>Sat, 12 Jun 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/http-caching-in-browser/</guid><description>&lt;p>浏览器使用缓存数据有非常多的好处，很多情况下静态资源会比 js 代码更大，同时修改的频率又非常低，通过对静态资源使用缓存，可以有效减少重复请求，从而节省网络带宽、降低服务器的请求压力。&lt;/p></description></item><item><title>前端的节流和防抖</title><link>https://yindongliang.com/posts/throttle-and-debounce-in-fe/</link><pubDate>Sun, 16 May 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/throttle-and-debounce-in-fe/</guid><description>&lt;p>工作中排查数据问题发现了前端按钮可能会触发两次点击的情况，这个问题除了要在后端做幂等以外，正好最近我也在做一些前端的工作，也就专门研究了下前端的解决方案。本来要解决的是防抖问题，但是查了些资料发现一般都是防抖和节流一起，它们解决方案相似但又不完全相同，下面就分别介绍下方便对比使用。&lt;/p></description></item><item><title>操作系统的设备管理</title><link>https://yindongliang.com/posts/device-management-in-os/</link><pubDate>Wed, 28 Apr 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/device-management-in-os/</guid><description>&lt;p>计算机除了 CPU、内存、硬盘，还需要各种设备才能实现对计算机的操作。本文讨论计算机是如何管理设备的输入输出的。&lt;/p>
&lt;h2 id="设备控制器">设备控制器&lt;a class="anchor" href="#%e8%ae%be%e5%a4%87%e6%8e%a7%e5%88%b6%e5%99%a8">#&lt;/a>&lt;/h2>
&lt;p>设备控制器接收 CPU 发来的命令，去控制 I/O 设备工作，使 CPU 从繁杂缓慢的设备控制事务中解放出来。当 CPU 要操作 I/O 设备时，首先要启动这个设备，一方面将启动命令发送给设备控制器，另一方面通过地址线将 I/O 设备的地址发给设备控制器，设备控制器对收到的地址进行译码，再根据所译出的命令对相应的设备进行操作。&lt;/p></description></item><item><title>操作系统的文件系统</title><link>https://yindongliang.com/posts/file-system-in-os/</link><pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/file-system-in-os/</guid><description>&lt;p>文件是操作系统进行存储时使用最多的抽象之一，在 Linux 中，一切皆文件。本文以 Linux 为例，介绍下文件系统中的基础概念。&lt;/p>
&lt;h2 id="数据结构">数据结构&lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84">#&lt;/a>&lt;/h2>
&lt;p>每个文件实质上是一个有名字的字符序列，序列的内容为&lt;em>文件数据&lt;/em>（file data），而序列的长度、序列的修改时间等描述文件数据的属性等其他信息称为&lt;em>文件元数据&lt;/em>（file metadata）。&lt;/p></description></item><item><title>“结点”还是“节点”？</title><link>https://yindongliang.com/posts/node-or-node/</link><pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/node-or-node/</guid><description>&lt;h2 id="结点-还是-节点-">“结点” 还是 “节点” ？&lt;a class="anchor" href="#%e7%bb%93%e7%82%b9-%e8%bf%98%e6%98%af-%e8%8a%82%e7%82%b9-">#&lt;/a>&lt;/h2>
&lt;p>刷题时，总会遇到“节点”和“结点”的词汇混用，非常困惑，查了一下，一般认为：&lt;/p>
&lt;ol>
&lt;li>节点是一个实体，它具有处理的能力，比如网络上的一台计算机。&lt;/li>
&lt;li>结点是一个交叉点、一个标记，算法中的点一般都称为结点，数据集合中的每一个数据元素都用中间标有元素值的方框来表示，我们称它为结点。&lt;/li>
&lt;/ol>
&lt;p>所以我们在看《算法导论》的时候，大部分是结点。在讨论服务架构的时候，一般就是节点了，英文里好像都是“node”。另外说时间的时候，一般我们还是说时间“节点”。&lt;/p></description></item><item><title>实现限流的几种方案</title><link>https://yindongliang.com/posts/go-rate-limit/</link><pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/go-rate-limit/</guid><description>&lt;p>限流是服务在高并发的情况下，通过限制处理请求的速率，以达到保证服务不过载的目的，实现高可用和稳定性的目标。限流的方案一般有计数法、滑动窗口、漏桶、令牌桶几种，其中各有各的特点，通常需要根据场景采用不同的方案。&lt;/p></description></item><item><title>Go 程序是怎样跑起来的？</title><link>https://yindongliang.com/posts/how-go-program-run/</link><pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/how-go-program-run/</guid><description>&lt;p>Go 程序是怎么跑起来的？面对问题我第一反应是，Go 是静态编译型语言，和 C 语言一样，就是编译、链接那一套，尤其是最近对着 Go 的一些资料看感觉又学习了一遍编译原理。编译原理的内容本身就很深，本文仅以我暂时理解到的视角进行总结，参考资料列在了最下面。&lt;/p></description></item><item><title>Go 语言的垃圾回收机制概览</title><link>https://yindongliang.com/posts/go-garbage-collector/</link><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/go-garbage-collector/</guid><description>&lt;p>之前已经看过了 &lt;a href="https://yindongliang.com/posts/GC-algorithms">常见的垃圾回收算法&lt;/a>，有了一定的基础，现在再来了解下 Go 语言的垃圾回收机制。&lt;/p>
&lt;h2 id="三色抽象">三色抽象&lt;a class="anchor" href="#%e4%b8%89%e8%89%b2%e6%8a%bd%e8%b1%a1">#&lt;/a>&lt;/h2>
&lt;p>Go 语言如今已经演变成增量式的垃圾回收策略，即不是一口气运行 GC，而是和 Mutator 交替运行的，因此不会长时间妨碍到 Mutator 的运行。Go 语言增量式回收是基于“标记-清除”算法的一种优化思路，具体的实现是三色标记法。&lt;/p></description></item><item><title>Go 语言的内存管理机制概览</title><link>https://yindongliang.com/posts/go-memory-management/</link><pubDate>Tue, 09 Mar 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/go-memory-management/</guid><description>&lt;p>程序中的数据和变量在运行时会被分配到程序所在的虚拟内存中，内存空间包含两个重要的区域：堆（heap）和栈（stack），函数调用的参数、返回值以及局部变量大都会被分配到栈上，这部分内存由编译器进行管理。&lt;/p></description></item><item><title>常见的垃圾回收算法</title><link>https://yindongliang.com/posts/GC-algorithms/</link><pubDate>Sun, 28 Feb 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/GC-algorithms/</guid><description>&lt;p>本来想直接看下 Go 的垃圾回收机制，但是发现自己现在对内存管理和垃圾回收的了解都比较少，所以只能先来研究下常见的垃圾回收算法了，本篇即是《&lt;a href="https://book.douban.com/subject/26821357/">垃圾回收的算法与实现&lt;/a>》的学习笔记，目标是能够描述清楚各种 GC 算法的复杂度、优缺点。&lt;/p></description></item><item><title>Go 语言中的拷贝和传值</title><link>https://yindongliang.com/posts/go-copy/</link><pubDate>Thu, 25 Feb 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/go-copy/</guid><description>&lt;p>同很多其他语言如 Python、JavaScript 一样，在 Go 中涉及到复制数据的场景也需要注意深拷贝和浅拷贝的问题。&lt;/p>
&lt;h2 id="深拷贝和浅拷贝">深拷贝和浅拷贝&lt;a class="anchor" href="#%e6%b7%b1%e6%8b%b7%e8%b4%9d%e5%92%8c%e6%b5%85%e6%8b%b7%e8%b4%9d">#&lt;/a>&lt;/h2>
&lt;p>Go 的数据类型可以分为值类型和引用类型两种。&lt;strong>值类型&lt;/strong>的变量和变量的数据都是存储在栈中，Int、Float、Bool、Array、Sturct、String 等都是值类型。&lt;strong>引用类型&lt;/strong>的变量为一串地址，存储在栈中，变量的数据存储在地址所指向的堆空间中 Slice、Map、Channel、Interface、指针、函数等是引用类型。&lt;/p></description></item><item><title>操作系统的任务调度机制（四）通信、同步和死锁</title><link>https://yindongliang.com/posts/the-communication-synchronization-and-deadlock-of-task-scheduling-in-os/</link><pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/the-communication-synchronization-and-deadlock-of-task-scheduling-in-os/</guid><description>&lt;p>操作系统进程间通信、以及并发的处理方式，是调度器能够高效运行的基础，上篇说了调度器的策略，本篇继续深入调度器的背后，看看进程间通信、同步和并发控制如何支撑着这套现代操作系统的调度机制。内容上是按照进程间通信引出了并发控制方法：同步原语，并发又进而引出了死锁问题。&lt;/p></description></item><item><title>操作系统的任务调度机制（三）调度器策略</title><link>https://yindongliang.com/posts/the-scheduler-policy-of-task-scheduling-in-os/</link><pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/the-scheduler-policy-of-task-scheduling-in-os/</guid><description>&lt;p>操作系统中的调度器有任务调度、I/O 调度（以后再说）、内存调度（之前提到的换页策略）等多种类型，本文主要关注任务调度。在单核多进程并发的环境里，进程之间并不是“并行”执行的，实际上在任何时刻都只有一个进程处于执行状态，背后是 CPU 在不停地进行上下文切换，让你看起来像是多个任务在并行执行。而任务调度器要做的就是决定选择哪个进程执行，什么时候执行，执行多久，下面开始详细介绍。&lt;/p></description></item><item><title>操作系统的任务调度机制（二）进程和线程模型</title><link>https://yindongliang.com/posts/the-process-and-thread-of-task-scheduling-in-os/</link><pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/the-process-and-thread-of-task-scheduling-in-os/</guid><description>&lt;h2 id="进程模型">进程模型&lt;a class="anchor" href="#%e8%bf%9b%e7%a8%8b%e6%a8%a1%e5%9e%8b">#&lt;/a>&lt;/h2>
&lt;p>进程的概念是随着多道批处理系统的概念产生的，MULTICS 之前还叫 Job，后来它为了区别这个 IBM 公司发明的术语改为了 Process，进程不是程序，程序是放入内存的一段数据，而进程是带有状态的一种活动、一系列动作，它保存了程序运行时的一系列状态。如果一个程序运行两遍，那就算作是两个进程，只不过可能只有一个副本被考入内存。&lt;/p></description></item><item><title>操作系统的任务调度机制（一）演进历史</title><link>https://yindongliang.com/posts/the-evolution-history-of-task-scheduling-in-os/</link><pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/the-evolution-history-of-task-scheduling-in-os/</guid><description>&lt;p>之前说到了 Goroutine 的运行时调度机制，引发了我对操作系统调度的进一步回忆，发现已经非常模糊，只能从头再来。在很多大型系统中，包括编程语言，都有调度器的概念，其核心的作用都是对有限的处理器资源进行最大化利用。具体到我目前关注的，也就是操作系统中关于进程和线程的调度策略以及并发处理机制。&lt;/p></description></item><item><title>操作系统的内存管理机制</title><link>https://yindongliang.com/posts/memory-management-in-os/</link><pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/memory-management-in-os/</guid><description>&lt;p>继续复习操作系统，话说随着 CPU 计算资源的性能开始过剩，压在内存身上的担子越来越重了，堪称新时期的性能瓶颈，对操作系统来说，内存管理机制也要进行近乎极致的优化才可以充分发挥 CPU 的正常水平。&lt;/p></description></item><item><title>使用 DOSBox 和 Debug 命令调试汇编程序</title><link>https://yindongliang.com/posts/dosbox-and-debug-usage/</link><pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/dosbox-and-debug-usage/</guid><description>&lt;p>正在看王爽的《汇编语言》，因为我在 Mac M1 环境，按书上做汇编实验的话，搜索了一圈发现 DOSBox 应该可以满足我的需要，它是一个跨平台的可以运行 MS-DOS 的模拟器。&lt;/p>
&lt;h2 id="dosbox">DOSBox&lt;a class="anchor" href="#dosbox">#&lt;/a>&lt;/h2>
&lt;p>下载地址 &lt;a href="https://www.dosbox.com/">https://www.dosbox.com/&lt;/a>&lt;/p></description></item><item><title>汇编语言不会编？</title><link>https://yindongliang.com/posts/writing-assembly-code/</link><pubDate>Thu, 21 Jan 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/writing-assembly-code/</guid><description>&lt;p>&lt;a href="https://yindongliang.com/posts/cpu-register">上篇&lt;/a>已经介绍了 CPU 的寄存器种类，知道了程序是由指令和数据组成的，以及 CPU 是如何通过寄存器运行程序的，那么现在可以真正了解下汇编指令集了。&lt;/p>
&lt;h2 id="前提须知">前提须知&lt;a class="anchor" href="#%e5%89%8d%e6%8f%90%e9%a1%bb%e7%9f%a5">#&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>因为不同 CPU 架构的指令集都不尽相同，汇编语言通常不具有可移植性，这里介绍的还是以 16 位的 8086CPU 为主。&lt;/li>
&lt;li>下面的描述，用 &lt;code>()&lt;/code> 表示一个寄存器或内存单元中的内容，比如（ax）表示 ax 中的内容，（20000H）表示内存 2000H 单元的内容。&lt;/li>
&lt;li>下面的描述，用 &lt;code>idata&lt;/code> 表示常量，比如 &lt;code>mov ax, [idata]&lt;/code> 就代表 &lt;code>mov ax, [1]&lt;/code>、&lt;code>mov ax, [2]&lt;/code>、&lt;code>mov ax, [3]&lt;/code>。&lt;/li>
&lt;li>reg 表示一个寄存器，比如：ax、bx、cx、dx、ah、bh、bl、ch、cl、dh、dl、sp、bp、si、di。&lt;/li>
&lt;li>sreg 表示一个段寄存器，比如：ds、ss、cs、es。&lt;/li>
&lt;/ul>
&lt;h2 id="伪指令宏">伪指令（宏）&lt;a class="anchor" href="#%e4%bc%aa%e6%8c%87%e4%bb%a4%e5%ae%8f">#&lt;/a>&lt;/h2>
&lt;p>用汇编语言写的源程序，包括伪指令和汇编指令。首先主要知道伪指令，它区别于常见的汇编指令。伪指令没有对应的机器指令，最终也不会被 CPU 执行，而是由编译器执行的指令，用于指示编译器如何汇编源程序。&lt;/p></description></item><item><title>CPU 与寄存器</title><link>https://yindongliang.com/posts/cpu-register/</link><pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/cpu-register/</guid><description>&lt;p>看 Go 语言的调度器相关内容的时候里面很多内存堆栈、寄存器的概念，一开始没怎么看懂，需要先回来复习下相关的基础知识，早知道大学就好好学了。&lt;/p>
&lt;h2 id="前提须知">前提须知&lt;a class="anchor" href="#%e5%89%8d%e6%8f%90%e9%a1%bb%e7%9f%a5">#&lt;/a>&lt;/h2>
&lt;ol>
&lt;li>下面的内容都以 16 位的 8086CPU 的情况为准。&lt;/li>
&lt;li>通常写一条汇编指令或一个寄存器的名称，不区分大小写。&lt;/li>
&lt;li>为了区分不同的进制，在十六进制表示的数据的后面加 &lt;code>H&lt;/code>，在二进制表示的数据后面加 &lt;code>B&lt;/code>。&lt;/li>
&lt;li>现在很多实际的源码中一般都是 32 位或者 64 位的寄存器表示。比如表示 SP 的 32 位寄存器是 ESP，对应 64 位寄存器是 RSP，其他通用寄存器也是同理。&lt;/li>
&lt;/ol>
&lt;h2 id="cpu">CPU&lt;a class="anchor" href="#cpu">#&lt;/a>&lt;/h2>
&lt;p>CPU 的内部由寄存器、控制器、运算器和时钟四个部分构成，各部分之间由电流信号相互连通。寄存器可用来暂存指令、数据等处理对象。根据种类的不同，一个 CPU 内部会有 20～100 个寄存器。控制器负责把内存上的指令、数据等读入寄存器，并根据指令的执行结果来控制整个计算机。运算器负责运算从内存读入寄存器的数据。时钟负责发出CPU开始计时的时钟信号。&lt;/p></description></item><item><title>Go 语言的 MPG 并发调度模型</title><link>https://yindongliang.com/posts/go-mpg-concurrency/</link><pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/go-mpg-concurrency/</guid><description>&lt;p>Golang 的高并发能力是通过协程 goroutine 实现的，在 Go 语言的开发中，每涉及到 goroutine 的相关功能实现时，都会意识到自己需要对 MPG 的模型有一个大概的了解，在此基础上才能做好开发上的决策，本篇也即为 MPG 并发调度模型的学习笔记了。&lt;/p></description></item><item><title>Go 语言的 Context 源码分析</title><link>https://yindongliang.com/posts/golang-context/</link><pubDate>Tue, 24 Nov 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/golang-context/</guid><description>&lt;p>研究 Context 的源码，有助于对结合运用 interface 和 struct 的理解，以及对其他三方框架对 Context 接口的重新实现也能有一定认识，在实际开发中更是非常有帮助。Context 的源码非常短小，加上大概一半的注释整个文件也才 500 行，500 行就可以和面试官扯一个小时，ROI 巨大，确定不研究下么。&lt;/p></description></item><item><title>Go 语言中 Channel 的实现</title><link>https://yindongliang.com/posts/golang-channel/</link><pubDate>Fri, 06 Nov 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/golang-channel/</guid><description>&lt;p>关于 Go 并发设计的哲学中，最常见的一句话就是：不要通过共享内存的方式进行通信，而是应该通过通信的方式共享内存&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。Go 语言采用 CSP（Communicating sequential processes）并发模型，底层运用 Channel 实现其特性，如果不对 Channel 有一番了解，也就很难真正掌握 Go 语言独特的并发技术。&lt;/p></description></item><item><title>权限系统通用的设计模型</title><link>https://yindongliang.com/posts/permission-system-models/</link><pubDate>Thu, 29 Oct 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/permission-system-models/</guid><description>&lt;p>权限系统是一个比较通用的系统，几乎所有的后台业务都会涉及到，关于权限系统的设计经过一些最佳实践也已经被总结成各种模型，比如 ACL、RBAC、ABAC、PBAC等，下面开始详细介绍。&lt;/p></description></item><item><title>了解下 Protobuf 相关概念</title><link>https://yindongliang.com/posts/hello-protobuf/</link><pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/hello-protobuf/</guid><description>&lt;p>说 Protobuf 之前，要先知道 RPC 是什么，可以说 Protobuf 是实现 RPC 的接口描述语言。&lt;/p>
&lt;h2 id="rpc">RPC&lt;a class="anchor" href="#rpc">#&lt;/a>&lt;/h2>
&lt;p>RPC，全称 Remote Procedure Call，中文叫远程过程调用。&lt;/p>
&lt;p>go 语言基于标准库实现了一套自己的 RPC 调用规则：方法只能有两个可序列化的参数，其中第二个参数是指针类型，并且返回一个error类型，同时必须是公开的方法&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。&lt;/p></description></item><item><title>乒乓理财，了解一下？</title><link>https://yindongliang.com/posts/pingpang-financing/</link><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/pingpang-financing/</guid><description>&lt;h2 id="谁需要看">谁需要看&lt;a class="anchor" href="#%e8%b0%81%e9%9c%80%e8%a6%81%e7%9c%8b">#&lt;/a>&lt;/h2>
&lt;p>如果你有100 万要理财，这个不适合你。如果你只有 1 万？那向你介绍一下我总结的理财方案~&lt;/p>
&lt;h2 id="认识乒乓球拍">认识乒乓球拍&lt;a class="anchor" href="#%e8%ae%a4%e8%af%86%e4%b9%92%e4%b9%93%e7%90%83%e6%8b%8d">#&lt;/a>&lt;/h2>
&lt;p>关于球拍的分类，我从各个角度出发整理了一个图：&lt;/p>
&lt;img src="https://cdn.yindongliang.com/uPic/pingpang-category.png" style="zoom:50%;" />
&lt;p>可见，正是球拍的种类非常之多，每种特性组合在一起，会发生各种各样的效果，这也是为什么球友们对器材津津乐道、各种尝试的原因，也是乒乓球拍多样性表现，况且现在还没有介绍胶皮的多样性。&lt;/p></description></item><item><title>Panic：assignment to entry in nil map</title><link>https://yindongliang.com/posts/go-panic-assignment-to-entry-in-nil-map/</link><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/go-panic-assignment-to-entry-in-nil-map/</guid><description>&lt;p>参考以下代码，运行时会报 panic: assignment to entry in nil map。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#aa89ea">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import&lt;/span> &lt;span style="color:#98c379">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">func&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">()&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">var&lt;/span> &lt;span style="color:#aa89ea">m&lt;/span> &lt;span style="color:#76a9f9">map&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#e5c07b">string&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">m&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#98c379">&amp;#34;a&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span> &lt;span style="color:#abb2bf">=&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">fmt&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#00b1f7">Println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">m&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#98c379">&amp;#34;a&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//panic: assignment to entry in nil map&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查了一下原因，发现是通过 &lt;code>var m map[string]int&lt;/code> 得到的值是 nil, 不指向任何内存地址。需要通过 &lt;code>make&lt;/code> 方法才可以分配确定的内存地址。&lt;/p></description></item><item><title>Kafka 和 RabbitMQ 对比</title><link>https://yindongliang.com/posts/compare-kafka-and-rabbitmq/</link><pubDate>Sat, 11 Jul 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/compare-kafka-and-rabbitmq/</guid><description>&lt;p>消息队列中间件（Message Queue Middleware，简称 MQ）在后端领域扮演很重要的角色，但是笔者之前日常多止步于使用，对机制原理研究很少。之前用 Python 写 Web 服务的时候，用到 RabbitMQ 的情况比较多，可能是因为有一个基于 Python 的消息队列的封装库 Celery 非常好用。后来写 Go 服务的时候，接入了公司整体的技术架构，Kafka 又用的比较多。这里接针对两种消息中间件专门对比一下各自的底层机制，方便在业务场景中做决策。&lt;/p></description></item><item><title>Gin Web 框架中 Middleware 的实现原理</title><link>https://yindongliang.com/posts/gin-middleware/</link><pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/gin-middleware/</guid><description>&lt;p>Gin 和很多 Web 框架一样实现了 middleware（中间件）的功能，通过 Gin 提供的中间件，我们在业务逻辑处理每个请求之前进行一些通用的逻辑，比如身份校验、数据解密、签名认证、服务限流等功能。&lt;/p></description></item><item><title>Go 语言中 Goroutine 的并发数量控制</title><link>https://yindongliang.com/posts/go-concurrency/</link><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/go-concurrency/</guid><description>&lt;p>虽然 Goroutine 号称占用的内存非常小，初始化只有几 K 大小，但是很多时候确实还是需要控制一台机器的 Goroutine 的并发数量，以进行业务上的可控并发场景的需要，或防止异常情况下的CPU、内存过载进而导致服务不可用的情况。&lt;/p></description></item><item><title>Gin Web 框架中 Validate 使用总结</title><link>https://yindongliang.com/posts/go-gin-validate/</link><pubDate>Sun, 07 Jun 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/go-gin-validate/</guid><description>&lt;p>在处理 HTTP 请求的时候，需要经常对请求的参数做 validate 验证，在 Django 框架里有 Serializer 里的 &lt;code>validate&lt;/code> 方法来做校验，现在在 Go 语言的 Gin 框架下，也有类似的实现。Gin 使用了 &lt;a href="https://github.com/go-playground/validator">go-playground/validator&lt;/a> 来做校验，下面主要介绍下使用方法。&lt;/p></description></item><item><title>Go 程序取消子 Goroutine 的几种方式</title><link>https://yindongliang.com/posts/a-few-ways-goroutine-cancel-child-goroutines/</link><pubDate>Thu, 21 May 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/a-few-ways-goroutine-cancel-child-goroutines/</guid><description>&lt;p>Go 代码中如果有的 Goroutine 永远都不会退出，随着 Goroutine 的数量增长，内存泄露的风险也会变高。因此必须需要一种方法能够控制 Goroutine 的野蛮生长，在需要退出的场景下必须要主动退出。下面介绍几种方法来主动退出 Goroutine。&lt;/p></description></item><item><title>使用 Typora 来编辑你的 Hugo 博客</title><link>https://yindongliang.com/posts/use-typora-write-hugo-blog/</link><pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/use-typora-write-hugo-blog/</guid><description>&lt;p>最近 typroa 用的比较多，然后又想着继续维护在 github pages 的博客，觉得把 typora 编辑完的东西再复制到博客项目里很麻烦，于是开始了一番折腾。&lt;/p>
&lt;h2 id="目标是啥">目标是啥&lt;a class="anchor" href="#%e7%9b%ae%e6%a0%87%e6%98%af%e5%95%a5">#&lt;/a>&lt;/h2>
&lt;p>在 typora 写的笔记放在了 iCloud，然后可以一键同步到我的线上博客&lt;/p></description></item><item><title>Go 标准库中涉及 I/O 操作的几个包的区别</title><link>https://yindongliang.com/posts/difference-between-go-io-packages/</link><pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/difference-between-go-io-packages/</guid><description>&lt;p>工作中需要用 Go 读写一些 Excel 表等类型的文件，发现 Go 提供了很多关于 I/O 操作的包，比如 io、ioutil、bufio 等，于是在这里总结一下，主要目标是理清几个包之间在使用时如何选择。&lt;/p></description></item><item><title>Redis 的分布式锁使用注意</title><link>https://yindongliang.com/posts/redis-distribute-lock/</link><pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/redis-distribute-lock/</guid><description>&lt;h2 id="为什么需要分布式锁">为什么需要分布式锁&lt;a class="anchor" href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81%e5%88%86%e5%b8%83%e5%bc%8f%e9%94%81">#&lt;/a>&lt;/h2>
&lt;p>锁机制用于管理对共享资源的并发访问控制，当同一服务的多台机器间需要控制并发的时候，需要保证服务间在同一时间只能被一个线程访问。由于 Redis 的特点是单进程，并且具有高性能的特点，所以一般用 Redis 来做分布式锁。另外分布式锁还有以下几个特点：&lt;/p></description></item><item><title>学习钢琴半年的体会</title><link>https://yindongliang.com/posts/learn-piano/</link><pubDate>Fri, 27 Dec 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/learn-piano/</guid><description>&lt;p>婚礼上为了给媳妇制造一个印象深刻的惊喜，我提前三个月去学了钢琴，现在回想起来也算是一件有意思的事情。6 月底报名后，经过和钢琴老师的讨论，对于我这种零基础短期想突击的，同时后期还想继续学下去的，最后老师推荐了我《月亮代表我的心》，尤其在老师弹了以后我自己也觉得这首曲子非常好。&lt;/p></description></item><item><title>Github Actions 实践总结</title><link>https://yindongliang.com/posts/use-github-action/</link><pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/use-github-action/</guid><description>&lt;p>Github Actions 发布有一段时间了，自己用的也挺嗨，过来总结一下。我主要在两个地方用到了，一个是博客，另一个是打包、发布前端项目。整体功能上 Actions 和 &lt;a href="https://docs.gitlab.com/ee/ci/">GitLab CI/CD&lt;/a> 差不多，同样实现了项目的自动化测试、打包、部署，不过 Actions 利用了 GitHub 开源项目平台的特点，提供了 &lt;a href="https://github.com/marketplace">Marketplace&lt;/a>，可以直接复用其他作者的 Action。&lt;/p></description></item><item><title>Redis 实现布隆过滤器</title><link>https://yindongliang.com/posts/bloom-filter/</link><pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/bloom-filter/</guid><description>&lt;p>布隆过滤器（Bloom Filter，BF），能够确定一个东西&lt;strong>一定不存在或可能存在&lt;/strong>，常用于在海量并发情况下防止缓存击穿，相比较传统的 List、Set、Map 数据结构，布隆过滤器能够在大数据量的情况下，相比其他结构更能节省大量的内存空间。&lt;/p></description></item><item><title>Redis 基础知识</title><link>https://yindongliang.com/posts/redis-101/</link><pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/redis-101/</guid><description>&lt;h2 id="redis-介绍">Redis 介绍&lt;a class="anchor" href="#redis-%e4%bb%8b%e7%bb%8d">#&lt;/a>&lt;/h2>
&lt;h3 id="历史">历史&lt;a class="anchor" href="#%e5%8e%86%e5%8f%b2">#&lt;/a>&lt;/h3>
&lt;blockquote class='book-hint '>
&lt;p>Redis 是一个使用 ANSI C 编写的开源、支持网络、基于内存、分布式、可选持久性的键值对存储数据库，由来自意大利西西里岛的 Salvatore Sanfilippo（Antirez）发起并编写。从2015年6月开始，Redis 的开发由 Redis Labs 赞助，而2013年5月至2015年6月期间，其开发由 Pivotal 赞助。在2013年5月之前，其开发由 VMware 赞助。根据月度排行网站 DB-Engines.com 的数据，Redis 是最流行的键值对存储数据库。&lt;/p></description></item><item><title>使用 Django 查询数据库的分表</title><link>https://yindongliang.com/posts/django-query-splited-table/</link><pubDate>Fri, 18 Oct 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/django-query-splited-table/</guid><description>&lt;h2 id="业务背景">业务背景&lt;a class="anchor" href="#%e4%b8%9a%e5%8a%a1%e8%83%8c%e6%99%af">#&lt;/a>&lt;/h2>
&lt;p>最近已经转到 Go 下面进行日常工作的开发，我的一个后台项目有一些内部轻量的数据查询需要，考虑需求的复杂度不高，就平常自己和同事几个人使用，没必要专门开发一个前端项目来进行数据查询，于是我想到了老本行 Django，由于 Django 出色的后台管理功能，我几乎不用做多少开发，只需要配置下 Model 层结构就可以了，唯一的问题就是这个 Go 项目的数据在数据库中是分表管理的。&lt;/p></description></item><item><title>说说实际工作中 GraphQL 的使用体验</title><link>https://yindongliang.com/posts/talk-about-graphql/</link><pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/talk-about-graphql/</guid><description>&lt;h2 id="背景">背景&lt;a class="anchor" href="#%e8%83%8c%e6%99%af">#&lt;/a>&lt;/h2>
&lt;p>接触 GraphQL 是工作中需要有一个项目，用来聚合内部很多其他微服务的接口然后统一暴露给外部使用，在这样的场景下，对项目有几点需求：&lt;/p>
&lt;ul>
&lt;li>能够让外部业务方对接方便，当然最好有接口文档。&lt;/li>
&lt;li>各个业务方可以根据他们自己的需要自己选择字段集合。&lt;/li>
&lt;li>项目提供的接口可以被不同的语言框架通过 HTTP 调用，比如前端、Python、Go 等。&lt;/li>
&lt;/ul>
&lt;p>基于以上的需求，在组内一位大神的提议下，顺理成章的使用了 GraphQL 作为解决方案，经过半年多的迭代维护，今天特来从后端角度说下使用体验。&lt;/p></description></item><item><title>UTF、Unicode 和 ASCII 编码的关系</title><link>https://yindongliang.com/posts/utf-unicode-ascii/</link><pubDate>Fri, 20 Sep 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/utf-unicode-ascii/</guid><description>&lt;p>说 UTF 需要先说 Unicode，而说 Unicode 需要先说 ASCII，这三者正好是历史的发展一步步进化而来的，是计算机领域为了解决全世界各种文字之间的编码统一问题而给出的通用解决方案。&lt;/p></description></item><item><title>AES 对称加密学习笔记</title><link>https://yindongliang.com/posts/aes-notes/</link><pubDate>Fri, 26 Apr 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/aes-notes/</guid><description>&lt;p>工作中的需求，需要一个基于 Django 的数据脱敏解决方案，我们的目标是要用 AES 对称加密算法，接入不能影响现有业务逻辑，数据迁移方便，失败可以回滚，最好可以开源。经过调研与开发，我最终产出了一个开源项目：&lt;a href="https://github.com/luojilab/django-mirage-field">luojilab/django-mirage-field&lt;/a>，目前已经有 50+ star。本篇即为学习对称加密算法的笔记。&lt;/p></description></item><item><title>Django 中 N+1 查询问题优化</title><link>https://yindongliang.com/posts/django-n1-query/</link><pubDate>Mon, 17 Dec 2018 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/django-n1-query/</guid><description>&lt;p>Django ORM 框架虽然很好用，但是如果不注意，在查询时很容易引发 N + 1 的查询问题。&lt;/p>
&lt;h2 id="n--1-问题">N + 1 问题&lt;a class="anchor" href="#n--1-%e9%97%ae%e9%a2%98">#&lt;/a>&lt;/h2>
&lt;p>考虑 &lt;code>文章+作者&lt;/code> 这样的 Model 层设计，在这个模型中，Author 和 Article 是一对多的关系。&lt;/p></description></item><item><title>Gitlab CI/CD 实践总结</title><link>https://yindongliang.com/posts/gitlab-ci-101/</link><pubDate>Thu, 15 Nov 2018 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/gitlab-ci-101/</guid><description>&lt;p>Gitlab 的 CI/CD 功能可能是区别于 GitHub 的一个最有价值的功能之一。接触了 CI/CD 以来，很多以前需要手动测试、打包、部署的工作，现在都可以通过编写 &lt;code>.gitlab-ci.yml&lt;/code> 来实现了，一方面持久化、规范化了部署服务的操作流程，另一方面 CI/CD 功能与 Gitlab 深度结合，方便了开发测试流程，下面总结下最常用到的功能。&lt;/p></description></item><item><title>Docker 使用笔记</title><link>https://yindongliang.com/posts/docker-notes/</link><pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/docker-notes/</guid><description>&lt;h2 id="docker-介绍">Docker 介绍&lt;a class="anchor" href="#docker-%e4%bb%8b%e7%bb%8d">#&lt;/a>&lt;/h2>
&lt;p>Docker 是一个开放源代码软件，是一个开放平台，用于开发应用、交付（shipping）应用、运行应用。 Docker 允许用户将基础设施（Infrastructure）中的应用单独分割出来，形成更小的颗粒（容器），从而提高交付软件的速度。&lt;/p></description></item><item><title>魔兽世界漫游指南 - 历史篇</title><link>https://yindongliang.com/posts/wow-travel-guide/</link><pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/wow-travel-guide/</guid><description>&lt;p>本文重点关注魔兽世界的重大历史走向，以及世界中各个地方的风土和人情，目的是让自己在玩游戏的时候能够理顺剧情，经常 AFK 的话也能前后关联起来，魔兽世界的世界观确实太大，另外游戏的很多玩法比如职业、天赋、专业、PVP、PVE 等等就不提了，只聊剧情。&lt;/p></description></item><item><title>Django 的中间件执行顺序</title><link>https://yindongliang.com/posts/django-middleware/</link><pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/django-middleware/</guid><description>&lt;p>中间件是 Django 用来处理请求和响应的钩子框架。它是一个轻量级的、底层级的“插件”系统，用于全局性地控制 Django 的输入或输出。&lt;/p>
&lt;h2 id="middleware">MIDDLEWARE&lt;a class="anchor" href="#middleware">#&lt;/a>&lt;/h2>
&lt;p>Django 自带了一些已经内置的中间件，你可以直接使用，它们被记录在 &lt;a href="https://docs.djangoproject.com/zh-hans/4.0/ref/middleware/">built-in middleware reference&lt;/a> 中。&lt;/p></description></item><item><title>数据库的 join 连接类型</title><link>https://yindongliang.com/posts/sql-join/</link><pubDate>Sat, 30 Sep 2017 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/sql-join/</guid><description>&lt;h2 id="内连接">内连接&lt;a class="anchor" href="#%e5%86%85%e8%bf%9e%e6%8e%a5">#&lt;/a>&lt;/h2>
&lt;p>内连接为默认连接方式，只有两张表都匹配的行才显示。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">SELECT&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span> &lt;span style="color:#76a9f9">from&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#76a9f9">INNER&lt;/span> &lt;span style="color:#76a9f9">JOIN&lt;/span> &lt;span style="color:#aa89ea">b&lt;/span> &lt;span style="color:#76a9f9">on&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">name&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">b&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">name&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="左外连接">左（外）连接&lt;a class="anchor" href="#%e5%b7%a6%e5%a4%96%e8%bf%9e%e6%8e%a5">#&lt;/a>&lt;/h2>
&lt;p>左边的表不加限制，会全部显示出来，右边的只会显示符合搜索条件的记录，不匹配的记录会以 null 显示。&lt;/p></description></item><item><title>Django 的软删除设计</title><link>https://yindongliang.com/posts/django-soft-delete/</link><pubDate>Thu, 23 Feb 2017 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/django-soft-delete/</guid><description>&lt;p>设计一个 Django 的软删除方案，要求数据库在删除的时候不能物理删除数据，同时尽量不要太侵入代码业务。&lt;/p>
&lt;p>这里用到了 Django 的 Manager，它赋予了 Django Model 操作数据库的能力，每个 Model 都包含一个 Manager，比如我们常用的 &lt;code>objects&lt;/code> 就是默认的 Manger。&lt;/p></description></item><item><title>浅谈 Django-REST-Framework 的设计与源码</title><link>https://yindongliang.com/posts/talk-about-django-rest-framework/</link><pubDate>Thu, 20 Oct 2016 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/talk-about-django-rest-framework/</guid><description>&lt;p>最近又重新接触 DRF，翻看文档发现，当时很难理解的东西，如今一看就懂了，顺带看了源码，也比较容易理解，至少比 Django 的源码简单不少。下面开始从 DRF 的设计和源码两个方面，结合自己的看法，谈谈DRF。&lt;/p></description></item><item><title>Vagrant 虚拟机 Ubuntu16.04 安装 MariaDB</title><link>https://yindongliang.com/posts/ubuntu-MariaDB/</link><pubDate>Sat, 10 Sep 2016 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/ubuntu-MariaDB/</guid><description>&lt;p>由于宿主机安装了 MySQL，为了避免安装 MariaDB 造成 MySQL 无法使用，所以在 Vagrant 中安装 Mariadb。&lt;/p>
&lt;p>更换&lt;a href="http://mirrors.163.com/.help/ubuntu.html">网易 apt-get 源&lt;/a> &lt;code>/etc/apt/sources.list&lt;/code>&lt;/p>
&lt;p>读取源软件列表 &lt;code>sudo apt update&lt;/code>&lt;/p>
&lt;p>更新软件版本 &lt;code>sudo apt upgrade&lt;/code>&lt;/p>
&lt;p>安装 MariaDB &lt;code>sudo apt install mariadb-server&lt;/code>&lt;/p>
&lt;p>安全性设置更新 root 密码 &lt;code>sudo mysql_secure_installation&lt;/code>&lt;/p></description></item><item><title>在公司实习了一个月的感悟</title><link>https://yindongliang.com/posts/one-month-intern/</link><pubDate>Tue, 24 Nov 2015 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/one-month-intern/</guid><description>&lt;p>从上个月开始在&lt;a href="http://cloudist.cc">大连云匠&lt;/a>实习，在公司做 Python 后端，一个月来收获了很多。&lt;/p>
&lt;p>首先是开发的流程和规范方面，之前都是自己做东西，除了实现功能外并没有考虑过多的内容。比如完整的测试用例，软件的设计模式，框架的开发标准，数据的初始化与备份，这些都是很重要的东西，在团队协作的时候更能凸显出来，同时还有需要Git熟练使用，基本在公司做的每一步都需要足够的理由去解释为什么才可以这样去做，不像之前就是各种堆放，现在思考的地方更多了。&lt;/p></description></item><item><title>Ubuntu 下部署 Django 应用</title><link>https://yindongliang.com/posts/ubuntu-deploy-django/</link><pubDate>Sat, 11 Jul 2015 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/ubuntu-deploy-django/</guid><description>&lt;p>做了一个Django小应用，主要内容是一个论坛，经过好几天的研究，也可以在服务器端运行了，以下所有代码中的操作都需要在命令行运行。&lt;/p>
&lt;h2 id="安装mysql">安装MySQL&lt;a class="anchor" href="#%e5%ae%89%e8%a3%85mysql">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get install mysql-server mysql-client&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>根据提示设置 MySQL root用户密码&lt;/p></description></item><item><title>iOS 中添加按钮和按钮监听方法</title><link>https://yindongliang.com/posts/objc-onclick-event/</link><pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/objc-onclick-event/</guid><description>&lt;p>代码添加按钮和按钮监听方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-objc" data-lang="objc">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">// ViewController.m
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#import &amp;#34;ViewController.h&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">@interface&lt;/span> &lt;span style="color:#ca72ff">ViewController&lt;/span> &lt;span style="color:#abb2bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">@end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">@implementation&lt;/span> &lt;span style="color:#ca72ff">ViewController&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">-&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">void&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;span style="color:#00b1f7">tapButton:&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">UIButton&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;span style="color:#dcaeea">sender&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">NSLog&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">@&amp;#34;我是%@&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,[&lt;/span>&lt;span style="color:#aa89ea">sender&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">titleLabel&lt;/span> &lt;span style="color:#aa89ea">text&lt;/span>&lt;span style="color:#abb2bf">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">-&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">void&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;span style="color:#00b1f7">viewDidLoad&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#e5c07b">super&lt;/span> &lt;span style="color:#aa89ea">viewDidLoad&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#8a93a5;font-style:italic">// Do any additional setup after loading the view, typically from a nib.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span> &lt;span style="color:#aa89ea">UIButton&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#aa89ea">button&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">UIButton&lt;/span> &lt;span style="color:#f5a40d">buttonWithType&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">UIButtonTypeCustom&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">button&lt;/span> &lt;span style="color:#f5a40d">setFrame&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">CGRectMake&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#d19a66">100&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">100&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">200&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">200&lt;/span>&lt;span style="color:#abb2bf">)];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">button&lt;/span> &lt;span style="color:#f5a40d">setTitle&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#98c379">@&amp;#34;hello&amp;#34;&lt;/span> &lt;span style="color:#f5a40d">forState&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">UIControlStateNormal&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">button&lt;/span> &lt;span style="color:#f5a40d">setTitle&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#98c379">@&amp;#34;world&amp;#34;&lt;/span> &lt;span style="color:#f5a40d">forState&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">UIControlStateHighlighted&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">button&lt;/span> &lt;span style="color:#f5a40d">setTitleColor&lt;/span>&lt;span style="color:#abb2bf">:[&lt;/span>&lt;span style="color:#aa89ea">UIColor&lt;/span> &lt;span style="color:#aa89ea">greenColor&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span> &lt;span style="color:#f5a40d">forState&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">UIControlStateNormal&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">button&lt;/span> &lt;span style="color:#f5a40d">setTitleColor&lt;/span>&lt;span style="color:#abb2bf">:[&lt;/span>&lt;span style="color:#aa89ea">UIColor&lt;/span> &lt;span style="color:#aa89ea">redColor&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span> &lt;span style="color:#f5a40d">forState&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">UIControlStateHighlighted&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">button&lt;/span> &lt;span style="color:#f5a40d">addTarget&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#e5c07b">self&lt;/span> &lt;span style="color:#f5a40d">action&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#76a9f9">@selector&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#f5a40d">tapButton&lt;/span>&lt;span style="color:#abb2bf">:)&lt;/span> &lt;span style="color:#f5a40d">forControlEvents&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">UIControlEventTouchUpInside&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">button&lt;/span> &lt;span style="color:#f5a40d">setBounds&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">CGRectMake&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#d19a66">200&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">200&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">200&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#d19a66">200&lt;/span>&lt;span style="color:#abb2bf">)];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">button&lt;/span> &lt;span style="color:#f5a40d">setBackgroundColor&lt;/span>&lt;span style="color:#abb2bf">:[&lt;/span>&lt;span style="color:#aa89ea">UIColor&lt;/span> &lt;span style="color:#aa89ea">grayColor&lt;/span>&lt;span style="color:#abb2bf">]];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">UIImage&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#aa89ea">image&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">UIImage&lt;/span> &lt;span style="color:#f5a40d">imageNamed&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#98c379">@&amp;#34;photo/12.png&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">button&lt;/span> &lt;span style="color:#f5a40d">setBackgroundImage&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">image&lt;/span> &lt;span style="color:#f5a40d">forState&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">UIControlStateNormal&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#e5c07b">self&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">view&lt;/span> &lt;span style="color:#f5a40d">addSubview&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">button&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">-&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">void&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;span style="color:#00b1f7">didReceiveMemoryWarning&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#e5c07b">super&lt;/span> &lt;span style="color:#aa89ea">didReceiveMemoryWarning&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// Dispose of any resources that can be recreated.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">@end&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>iOS 中 textFieldShouldReturn 方法的使用</title><link>https://yindongliang.com/posts/ios-text-field/</link><pubDate>Sun, 31 Aug 2014 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/ios-text-field/</guid><description>&lt;p>iOS 中 textFieldShouldReturn 方法定义在 UITextFieldDelegate 协议中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-objc" data-lang="objc">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">// ViewController.m
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#import &amp;#34;ViewController.h&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">@interface&lt;/span> &lt;span style="color:#ca72ff">ViewController&lt;/span> &lt;span style="color:#abb2bf">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">@end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">@implementation&lt;/span> &lt;span style="color:#ca72ff">ViewController&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">-&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">void&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;span style="color:#00b1f7">viewDidLoad&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#e5c07b">super&lt;/span> &lt;span style="color:#aa89ea">viewDidLoad&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#8a93a5;font-style:italic">// Do any additional setup after loading the view, typically from a nib.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">-&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">void&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;span style="color:#00b1f7">didReceiveMemoryWarning&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#e5c07b">super&lt;/span> &lt;span style="color:#aa89ea">didReceiveMemoryWarning&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">// Dispose of any resources that can be recreated.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">-&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">BOOL&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;span style="color:#00b1f7">textFieldShouldReturn:&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">UITextField&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;span style="color:#dcaeea">textField&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">textField&lt;/span>&lt;span style="color:#54b1c7">==&lt;/span>&lt;span style="color:#aa89ea">_name&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">_passwd&lt;/span> &lt;span style="color:#aa89ea">becomeFirstResponder&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#76a9f9">else&lt;/span> &lt;span style="color:#76a9f9">if&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">textField&lt;/span>&lt;span style="color:#54b1c7">==&lt;/span>&lt;span style="color:#aa89ea">_passwd&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#e5c07b">self&lt;/span> &lt;span style="color:#f5a40d">login&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#e5c07b">nil&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">return&lt;/span> &lt;span style="color:#e5c07b">YES&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">-&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">IBAction&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;span style="color:#00b1f7">login:&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">id&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;span style="color:#dcaeea">sender&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#e5c07b">self&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">view&lt;/span> &lt;span style="color:#f5a40d">endEditing&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#e5c07b">NO&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">NSString&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#aa89ea">name&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">_name&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">text&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">NSString&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#aa89ea">passwd&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">_passwd&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">text&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">_lable&lt;/span> &lt;span style="color:#f5a40d">setText&lt;/span>&lt;span style="color:#abb2bf">:[&lt;/span>&lt;span style="color:#aa89ea">NSString&lt;/span> &lt;span style="color:#f5a40d">stringWithFormat&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#98c379">@&amp;#34;username:%@ password:%@&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">name&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">passwd&lt;/span>&lt;span style="color:#abb2bf">]];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">@end&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://cdn.yindongliang.com/uPic/9rBhlF.jpg" alt="img" />&lt;/p></description></item><item><title>数据结构与算法实验课 - 链表</title><link>https://yindongliang.com/posts/practice-linked-list/</link><pubDate>Tue, 22 Oct 2013 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/practice-linked-list/</guid><description>&lt;p>ListA()创建一个链表并插入一个元素，ListB()创建一个链表并删除两个数之间的元素。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#include&lt;/span> &lt;span style="color:#8a93a5;font-style:italic">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#include&lt;/span> &lt;span style="color:#8a93a5;font-style:italic">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#include&lt;/span> &lt;span style="color:#8a93a5;font-style:italic">&amp;lt;malloc.h&amp;gt;&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#include&lt;/span> &lt;span style="color:#8a93a5;font-style:italic">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#define NULL 0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>&lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">listA&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">n&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">k&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">x&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;请输入n的长度:&lt;/span>&lt;span style="color:#d26464;font-weight:bold">\n&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">scanf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;%d&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#54b1c7">&amp;amp;&lt;/span>&lt;span style="color:#aa89ea">n&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;span style="color:#aa89ea">malloc&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">n&lt;/span>&lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#76a9f9">sizeof&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;请输入链表的长度:&lt;/span>&lt;span style="color:#d26464;font-weight:bold">\n&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#d19a66">0&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">&amp;lt;&lt;/span>&lt;span style="color:#aa89ea">n&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">++&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">scanf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;%d&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#54b1c7">&amp;amp;&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#d19a66">0&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">&amp;lt;&lt;/span>&lt;span style="color:#aa89ea">n&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">++&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;%d &amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#d26464;font-weight:bold">\n&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;请输入要插入的序号和元素k,x:&lt;/span>&lt;span style="color:#d26464;font-weight:bold">\n&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">scanf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;%d,%d&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#54b1c7">&amp;amp;&lt;/span>&lt;span style="color:#aa89ea">k&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#54b1c7">&amp;amp;&lt;/span>&lt;span style="color:#aa89ea">x&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">k&lt;/span>&lt;span style="color:#54b1c7">&amp;lt;&lt;/span>&lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#54b1c7">||&lt;/span>&lt;span style="color:#aa89ea">k&lt;/span>&lt;span style="color:#54b1c7">&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">n&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;wrong&lt;/span>&lt;span style="color:#d26464;font-weight:bold">\n&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">return&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;span style="color:#aa89ea">realloc&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#abb2bf">,(&lt;/span>&lt;span style="color:#aa89ea">n&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#76a9f9">sizeof&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">n&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">&amp;gt;=&lt;/span>&lt;span style="color:#aa89ea">k&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">--&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">-&lt;/span>&lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">&amp;lt;&lt;/span>&lt;span style="color:#aa89ea">n&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">++&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">==&lt;/span>&lt;span style="color:#aa89ea">k&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">-&lt;/span>&lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">]&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">x&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;the list is:&lt;/span>&lt;span style="color:#d26464;font-weight:bold">\n&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#d19a66">0&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">&amp;lt;&lt;/span>&lt;span style="color:#aa89ea">n&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#d19a66">1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">++&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;%d &amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#d26464;font-weight:bold">\n&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">struct&lt;/span> &lt;span style="color:#ca72ff">node&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">num&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">struct&lt;/span> &lt;span style="color:#ca72ff">node&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#aa89ea">next&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">listB&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">struct&lt;/span> &lt;span style="color:#ca72ff">node&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#aa89ea">head&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#aa89ea">q&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">n&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">min&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">max&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;please input 链表的个数:&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">scanf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;%d&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#54b1c7">&amp;amp;&lt;/span>&lt;span style="color:#aa89ea">n&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">head&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#76a9f9">struct&lt;/span> &lt;span style="color:#ca72ff">node&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;span style="color:#aa89ea">malloc&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#76a9f9">sizeof&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">head&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#d26464;font-weight:bold">\n&lt;/span>&lt;span style="color:#98c379">please input the num:&lt;/span>&lt;span style="color:#d26464;font-weight:bold">\n&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#d19a66">0&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">&amp;lt;&lt;/span>&lt;span style="color:#aa89ea">n&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">++&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>		
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">next&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#76a9f9">struct&lt;/span> &lt;span style="color:#ca72ff">node&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>&lt;span style="color:#aa89ea">malloc&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#76a9f9">sizeof&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">scanf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;%d&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#54b1c7">&amp;amp;&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">num&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">next&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">next&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#e5c07b">NULL&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">head&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">while&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">next&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;%d &amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">num&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">next&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#8a93a5;font-style:italic">//delete
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>	&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">head&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#d26464;font-weight:bold">\n&lt;/span>&lt;span style="color:#98c379">input min and max :&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">scanf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;%d,%d&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#54b1c7">&amp;amp;&lt;/span>&lt;span style="color:#aa89ea">min&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#54b1c7">&amp;amp;&lt;/span>&lt;span style="color:#aa89ea">max&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">while&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">next&lt;/span>&lt;span style="color:#54b1c7">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">next&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">num&lt;/span>&lt;span style="color:#54b1c7">&amp;lt;=&lt;/span>&lt;span style="color:#aa89ea">min&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">next&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">while&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">next&lt;/span>&lt;span style="color:#54b1c7">&amp;amp;&amp;amp;&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">next&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">num&lt;/span>&lt;span style="color:#54b1c7">&amp;lt;&lt;/span>&lt;span style="color:#aa89ea">max&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#8a93a5;font-style:italic">//q=p-&amp;gt;next;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>		&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">next&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">next&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">next&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#8a93a5;font-style:italic">//free(q);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">head&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;链表为:&lt;/span>&lt;span style="color:#d26464;font-weight:bold">\n&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">while&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">next&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;%d &amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">num&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">next&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#aa89ea">listA&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#aa89ea">listB&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">listA&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">listB&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Thinking in Java 习题 - 第七章</title><link>https://yindongliang.com/posts/think-in-java-practice-7/</link><pubDate>Sat, 19 Oct 2013 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/think-in-java-practice-7/</guid><description>&lt;h2 id="练习2">练习2&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a02">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//从Detergent中继承产生一个新的类，覆盖scrub()并添加一个名为sterilize()的新方法。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Cleanser&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">private&lt;/span> &lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Cleanser&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">append&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#54b1c7">+=&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">dilute&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">append&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34; dilute()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">apply&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">append&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34; apply()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">scrub&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">append&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34; scrub()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#00b1f7">toString&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">return&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Cleanser&lt;/span> &lt;span style="color:#aa89ea">x&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Cleanser&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">x&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">dilute&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">x&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">apply&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">x&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">scrub&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Cleanser.main():&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">x&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Detergent&lt;/span> &lt;span style="color:#76a9f9">extends&lt;/span> &lt;span style="color:#aa89ea">Cleanser&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">scrub&lt;/span> &lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">append&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34; Detegent.scrub()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">super&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">scrub&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">foam&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">append&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34; foam()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Detergent&lt;/span> &lt;span style="color:#aa89ea">x&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Detergent&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">x&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">dilute&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">x&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">apply&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">x&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">scrub&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">x&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">foam&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Detergent.main()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">x&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Cleanser&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#76a9f9">extends&lt;/span> &lt;span style="color:#aa89ea">Detergent&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">scrub&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">append&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34; Main.scrub()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">super&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">scrub&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">sterilize&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;sterilize()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Main&lt;/span> &lt;span style="color:#aa89ea">m&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">m&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">apply&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">m&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">scrub&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">m&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">dilute&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">m&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">foam&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Main.main()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">m&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Detergent&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">m&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">sterilize&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Main.main()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Cleanser apply() Main.scrub() Detegent.scrub() scrub() dilute() foam()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Detergent.main()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Cleanser dilute() apply() Detegent.scrub() scrub() foam()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Cleanser.main():
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Cleanser dilute() apply() scrub()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">sterilize()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习3练习4">练习3、练习4&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a03%e7%bb%83%e4%b9%a04">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//验证：“即使不为Main（）创建构造器，编译器也会合成一个默认的构造器，该构造器将调用积累的构造器。”&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Art&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Art&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Art constructor&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Drawing&lt;/span> &lt;span style="color:#76a9f9">extends&lt;/span> &lt;span style="color:#aa89ea">Art&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Drawing&lt;/span> &lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Drawing constructor&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#76a9f9">extends&lt;/span> &lt;span style="color:#aa89ea">Drawing&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Main&lt;/span> &lt;span style="color:#aa89ea">c&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Art constructor
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Drawing constructor
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习5">练习5&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a05">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//创建两个带有默认构造器（空参数）的类A和B，从A中继承产生一个名为C的新类，并在C内创建一个B类的成员，不要给C编写构造器，创建一个C类的对象并观察其结果。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">A&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">A&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;A()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">B&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">B&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;B()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">C&lt;/span> &lt;span style="color:#76a9f9">extends&lt;/span> &lt;span style="color:#aa89ea">A&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">B&lt;/span> &lt;span style="color:#aa89ea">b&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">B&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">C&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">A()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">B()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习6">练习6&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a06">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//如果不在BoardGame()中调用基类构造器，编译器将“抱怨”无法找到Game()形式的构造器。调用基类构造器必须是在导出类构造器中要做的第一件事.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Game&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Game&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Game constuctor&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">BoardGame&lt;/span> &lt;span style="color:#76a9f9">extends&lt;/span> &lt;span style="color:#aa89ea">Game&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">BoardGame&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">super&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>		&lt;span style="color:#8a93a5;font-style:italic">//调用基类构造器，去掉这条语句会提示编译错误。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;BoardGame constuctor&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Chess&lt;/span> &lt;span style="color:#76a9f9">extends&lt;/span> &lt;span style="color:#aa89ea">BoardGame&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Chess&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">super&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">11&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Chess constructor&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Chess&lt;/span> &lt;span style="color:#aa89ea">x&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Chess&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习7">练习7&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a07">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//修改练习5，使A和B以带参数的构造器取代默认的构造器，为C写一个构造器，并在其中执行所有的初始化。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">A&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">A&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;A()&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">B&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">B&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;B()&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">C&lt;/span> &lt;span style="color:#76a9f9">extends&lt;/span> &lt;span style="color:#aa89ea">A&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">C&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">super&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">B&lt;/span> &lt;span style="color:#aa89ea">b&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">B&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;C()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">C&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">A()1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">B()1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">C()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习8">练习8&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a08">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//创建一个基类，它仅有一个非默认构造器，在创建一个导出类，它带有默认构造器和非默认构造器，在导出类的构造器中调用基类的构造器。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">A&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">A&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;A(i)&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">B&lt;/span> &lt;span style="color:#76a9f9">extends&lt;/span> &lt;span style="color:#aa89ea">A&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">B&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">super&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;B(i)&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Main()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Main&lt;/span> &lt;span style="color:#aa89ea">m&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">B&lt;/span> &lt;span style="color:#aa89ea">b&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">B&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">11&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Main()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">A(i)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">B(i)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习9">练习9&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a09">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//创建一个Root类，令其含有名为Component1、Component2、Component3类的各一个实例，从Root中派生一个类Stem，也含有上述各“组成部分”，所有的类都应带有可打印出类的相关信息的默认构造器。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Component1&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Component1&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Component1()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Component2&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Component2&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Component2()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Component3&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Component3&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Component3()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Root&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Component1&lt;/span> &lt;span style="color:#aa89ea">c1&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Component1&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Component2&lt;/span> &lt;span style="color:#aa89ea">c2&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Component2&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Component3&lt;/span> &lt;span style="color:#aa89ea">c3&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Component3&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Root&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Root()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Stem&lt;/span> &lt;span style="color:#76a9f9">extends&lt;/span> &lt;span style="color:#aa89ea">Root&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Component1&lt;/span> &lt;span style="color:#aa89ea">c1&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Component1&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Component2&lt;/span> &lt;span style="color:#aa89ea">c2&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Component2&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Component3&lt;/span> &lt;span style="color:#aa89ea">c3&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Component3&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Stem&lt;/span> &lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Stem()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Stem&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Main()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Component1&lt;/span> &lt;span style="color:#aa89ea">c1&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Component1&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Component2&lt;/span> &lt;span style="color:#aa89ea">c2&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Component2&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Component3&lt;/span> &lt;span style="color:#aa89ea">c3&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Component3&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Component1()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Component2()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Component3()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Root()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Component1()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Component2()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Component3()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Stem()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Main()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Component1()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Component2()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Component3()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习11">练习11&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a011">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//修改Detergent.java，让它使用代理&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Cleanser&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">private&lt;/span> &lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Cleanser &amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">append&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#54b1c7">+=&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">dilute&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">append&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;dilute()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">apply&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">append&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;apply()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">scrub&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">append&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;scrub()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#00b1f7">toString&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">return&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span> &lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Cleanser&lt;/span> &lt;span style="color:#aa89ea">c&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Cleanser&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">c&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">apply&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">c&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">scrub&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">c&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">dilute&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">c&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Detergent&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Cleanser&lt;/span> &lt;span style="color:#aa89ea">c1&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Cleanser&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">dilute&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">c1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">dilute&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">apply&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">c1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">apply&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">scrub&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">c1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">scrub&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Cleanser&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Cleanser apply()scrub()dilute()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span> &lt;span style="color:#aa89ea">发现书里面那个append的用法好纠结&lt;/span>，&lt;span style="color:#aa89ea">非要用String&lt;/span> &lt;span style="color:#aa89ea">toString&lt;/span>。。。&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习13">练习13&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a013">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//创建一个类，他应带有一个 被重载的三次的方法，继承产生一个新类，并添加一个该方法的新的重载定义，展示这四个方法在导出类中是可以被使用的。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#ca72ff">test&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Home&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">doh&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;doh()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#00b1f7">doh&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;doh(int)&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">return&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">char&lt;/span> &lt;span style="color:#00b1f7">doh&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">char&lt;/span> &lt;span style="color:#aa89ea">c&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;doh(char)&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">return&lt;/span> &lt;span style="color:#aa89ea">c&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Homehome&lt;/span> &lt;span style="color:#abb2bf">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Milhome&lt;/span> &lt;span style="color:#76a9f9">extends&lt;/span> &lt;span style="color:#aa89ea">Home&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">doh&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">Homehome&lt;/span> &lt;span style="color:#aa89ea">h&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Milhome.doh()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Milhome&lt;/span> &lt;span style="color:#aa89ea">m&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Milhome&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">m&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">doh&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">m&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">doh&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">m&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">doh&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;c&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">m&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">doh&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Homehome&lt;/span>&lt;span style="color:#abb2bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">doh()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">doh(int)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">doh(char)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Milhome.doh()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习14">练习14&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a014">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//ServiceEngine.java中给Engine添加一个service（）方法，并在main()中调用该方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Engine&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">start&lt;/span>&lt;span style="color:#abb2bf">(){}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">rev&lt;/span>&lt;span style="color:#abb2bf">(){}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">stop&lt;/span>&lt;span style="color:#abb2bf">(){}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Wheel&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">inflate&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">psi&lt;/span>&lt;span style="color:#abb2bf">){}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Window&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">rollup&lt;/span>&lt;span style="color:#abb2bf">(){}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">rolldown&lt;/span>&lt;span style="color:#abb2bf">(){}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Door&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#aa89ea">Window&lt;/span> &lt;span style="color:#aa89ea">window&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Window&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">open&lt;/span>&lt;span style="color:#abb2bf">(){}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">close&lt;/span>&lt;span style="color:#abb2bf">(){}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">ServiceEngine&lt;/span> &lt;span style="color:#76a9f9">extends&lt;/span> &lt;span style="color:#aa89ea">Engine&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">service&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;servise&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Car&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#aa89ea">Engine&lt;/span> &lt;span style="color:#aa89ea">engine&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Engine&lt;/span> &lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#aa89ea">Wheel&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span> &lt;span style="color:#aa89ea">wheel&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Wheel&lt;/span>&lt;span style="color:#54b1c7">[&lt;/span>&lt;span style="color:#aa89ea">4&lt;/span>&lt;span style="color:#54b1c7">]&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 &lt;span style="color:#aa89ea">ServiceEngine&lt;/span> &lt;span style="color:#aa89ea">serviceEngine&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">ServiceEngine&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#aa89ea">Door&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">left&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Door&lt;/span>&lt;span style="color:#abb2bf">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">right&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Door&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#00b1f7">Car&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">0&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">&amp;lt;&lt;/span>&lt;span style="color:#aa89ea">4&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">++&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#aa89ea">wheel&lt;/span>&lt;span style="color:#54b1c7">[&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">]=&lt;/span>&lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Wheel&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">ServicebleCar&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		 &lt;span style="color:#aa89ea">Car&lt;/span> &lt;span style="color:#aa89ea">car&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Car&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		 &lt;span style="color:#aa89ea">car&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">left&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">window&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">rollup&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		 &lt;span style="color:#aa89ea">car&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">left&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">window&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">rollup&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		 &lt;span style="color:#aa89ea">car&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">serviceEngine&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">service&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"> servise
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习15">练习15&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a015">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#ca72ff">main.test&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Test&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">protected&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">test&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;protected test()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#ca72ff">main&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import&lt;/span> &lt;span style="color:#ca72ff">main.test.*&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#76a9f9">extends&lt;/span> &lt;span style="color:#aa89ea">Test&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">Maintest&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">test&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Main&lt;/span> &lt;span style="color:#aa89ea">m&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Test&lt;/span> &lt;span style="color:#aa89ea">t&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Test&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">m&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">Maintest&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//		t.test(); 编译不能通过。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">protected test()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习16">练习16&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a016">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#ca72ff">main&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//创建一个名为Amphibian的类，由此继承产生一个成为Frog的类，在基类中设置适当的方法，在main（）中，创建一个Frog向上转型至Amphibian，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//然后说明所有方法都可工作。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Amphibian&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Amphibian&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Amphibian&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">test&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Amphibian.haha&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Frog&lt;/span> &lt;span style="color:#76a9f9">extends&lt;/span> &lt;span style="color:#aa89ea">Amphibian&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Frog&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">super&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Frog&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">test&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Frog.test&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Amphibian&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Frog&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">test&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*OutPut:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Amphibian
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Frog
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Frog.test
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习17">练习17&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a017">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#ca72ff">main&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//创建一个名为Amphibian的类，由此继承产生一个成为Frog的类，在基类中设置适当的方法，在main（）中，创建一个Frog向上转型至Amphibian，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//然后说明所有方法都可工作。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Amphibian&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Amphibian&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Amphibian&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">test&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Amphibian.haha&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Frog&lt;/span> &lt;span style="color:#76a9f9">extends&lt;/span> &lt;span style="color:#aa89ea">Amphibian&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Frog&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">super&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Frog&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Amphibian&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Frog&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">test&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*OutPut:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Amphibian
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Frog
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Amphibian.haha
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习18">练习18&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a018">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#ca72ff">main&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import&lt;/span> &lt;span style="color:#ca72ff">java.util.Random&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//创建一个含有static final域和final域的类，说明二者间的区别。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">private&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#aa89ea">Random&lt;/span> &lt;span style="color:#aa89ea">rand&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Random&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">private&lt;/span> &lt;span style="color:#76a9f9">final&lt;/span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">I&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">rand&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">nextInt&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">20&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">private&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#76a9f9">final&lt;/span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">II&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">rand&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">nextInt&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">20&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Main&lt;/span> &lt;span style="color:#aa89ea">m&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;A:I=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">m&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">I&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;A:II=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">m&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">II&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Main&lt;/span> &lt;span style="color:#aa89ea">m1&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;B:I=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">m1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">I&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;B:II=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">m1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">II&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">A:I=10
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">A:II=9
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">B:I=12
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">B:II=9
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Thinking in Java 习题 - 第六章</title><link>https://yindongliang.com/posts/think-in-java-practice-6/</link><pubDate>Mon, 30 Sep 2013 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/think-in-java-practice-6/</guid><description>&lt;h2 id="练习1">练习1&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a01">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#ca72ff">access&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//在某个包中创建一个类，在这个类所处的包的外部创建该类的一个实例。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Test1&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#00b1f7">Test1&lt;/span> &lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;实例&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import&lt;/span> &lt;span style="color:#ca72ff">access.*&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Test&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Test1&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习2">练习2&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a02">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#54b1c7">//&lt;/span>&lt;span style="color:#aa89ea">将本节中的代码片段改写为完整的程序&lt;/span>，&lt;span style="color:#aa89ea">并校验实际所发生的冲突&lt;/span>。&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习3">练习3&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a03">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//创建两个包：debug和debugoff，他们都包含一个相同的类，该类有一个debug（）方法，第一个版本显示发送给控制台的String参数，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//而第二版本什么也不做，使用静态import语句将该类导入到一个测试程序中，并示范条件编译效果。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#ca72ff">access&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import static&lt;/span> &lt;span style="color:#ca72ff">debug.Test.*&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">debug&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;hello&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">s:hello
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#ca72ff">debug&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Test&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">debug&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;s:&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#ca72ff">debugoff&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Test&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">Test&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">return&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习4">练习4&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a04">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//展示protected方法具有包访问权限，但是它仍旧不是public的。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#ca72ff">access.local&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;main:&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">access&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">debug&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">Test&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">greet&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#54b1c7">//&lt;/span>&lt;span style="color:#aa89ea">编译不通过&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#ca72ff">access.debug&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Test&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">protected&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">greet&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;helloworld&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#ca72ff">access.debug&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Test1&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Test1:&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">access&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">debug&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">Test&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">greet&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习5">练习5&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a05">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#ca72ff">access.local&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//创建一个带有public，private，protected和包访问权限域以及方法成员的类。创建一个该类的一个对象，看看在你试图调用所有类成员时，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//会得到什么类型的编译信息。请注意，处于同一个目录中的所有类都是默认包的一部分。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">protected&lt;/span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">b&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">private&lt;/span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">c&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">d&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">f1&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;f1()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">protected&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">f2&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;f2()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">private&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">f3&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;f3()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">f4&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;f4()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Main&lt;/span> &lt;span style="color:#aa89ea">test&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">test&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">a&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">test&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">b&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">2&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">test&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">c&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">3&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">test&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">d&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">4&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">test&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">a&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">test&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">b&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">test&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">c&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">test&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">d&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">test&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f1&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">test&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f2&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">test&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f3&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">test&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f4&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习6">练习6&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a06">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#ca72ff">access.local&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//创建一个带有protected数据的类，运用在第一个类中处理protected数据的方法在相同的文件中创建第二个类。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Test&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">protected&lt;/span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Test&lt;/span> &lt;span style="color:#aa89ea">test&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Test&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">test&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">a&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;a=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">test&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">a&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习7">练习7&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a07">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//根据描述access和Widget的代码片段创建类库，在某个不属于access类库的类中创建一个Widget实例&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#ca72ff">access.local&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import&lt;/span> &lt;span style="color:#ca72ff">access.debug.Widget&lt;/span>&lt;span style="color:#abb2bf">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Widget&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Widget!
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">package&lt;/span> &lt;span style="color:#ca72ff">access.debug&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Widget&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#00b1f7">Widget&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Widget!&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习8">练习8&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a08">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>//效仿实例Lunch.java的形式，创建一个名为ConnectionManager的类，该类管理一个元素为Connection对象的固定数组。客户端程序员不能直接创建Connection对象，
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>//而只能通过ConnectionManager中的某个static方法来获取他们。当ConnectionManager之中不再有对象时，它会返回null引用。在main（）之中检测这些类。&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习9">练习9&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a09">#&lt;/a>&lt;/h2>
&lt;p>这章有点吃力。。本来以为挺简单的规则，看来这样复杂，需要经常回来看。&lt;/p></description></item><item><title>Thinking in Java 习题 - 第五章</title><link>https://yindongliang.com/posts/think-in-java-practice-5/</link><pubDate>Sat, 21 Sep 2013 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/think-in-java-practice-5/</guid><description>&lt;h2 id="练习1">练习1&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a01">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*创建一个类，它包含一个未初始化的String引用。验证该引用被Java初始化成了null。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;s=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">s=null
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习2">练习2&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a02">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*创建一个类，它包含一个在定义时就被初始化了的String域，以及另一个通过构造器初始化的String域，这两种方式有何差异？*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s1&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;hello&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s2&lt;/span> &lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#00b1f7">Main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">s2&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Main&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;world&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">s1&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">s2&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">hello
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">world
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习3">练习3&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a03">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*创建一个带默认构造器（即无参构造器）的类，在构造器中打印一条消息。为这个类创建一个对象。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;无参构造器&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">无参构造器
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习4">练习4&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a04">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*为前一个练习中的类添加一个重载构造器，令其接受一个字符参数，并在构造器中把你自己的信息和接受的参数一起打印出来。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;I&amp;#39;m your fans&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Hello Lady&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Hello Lady
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">I&amp;#39;m your fans
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习5">练习5&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a05">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*创建一个名为Dog的类，它具有重载的bark（）方法。此方法应根据不同的基本数据类型进行重载，并根据被调用的版本，
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">打印出不同类型的狗吠（barking）、咆哮（howling）等信息，编写main（）来调用所有不同版本的方法。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Dog&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">bark&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;barking&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">bark&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;howling&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">bark&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">double&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;wangwang&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Dog&lt;/span> &lt;span style="color:#aa89ea">dog&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Dog&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">dog&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">bark&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">dog&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">bark&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">dog&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">bark&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">0&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">barking
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">howling
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">wangwang
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习6">练习6&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a06">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*修改前一个练习的程序，让两个重载方法各自接受两个类型的不同的参数，但二者顺序相反。验证其是否工作。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Dog&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">bark&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;barking&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">bark&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">double&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;howling&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Dog&lt;/span> &lt;span style="color:#aa89ea">dog&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Dog&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">dog&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">bark&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">0&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">dog&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">bark&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">howling
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">barking
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习7">练习7&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a07">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*创建一个没有构造器的类，并在main（）中创建其对象，用以验证编译器是否真的自动加入了默认构造器。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Main&lt;/span> &lt;span style="color:#aa89ea">main&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习8">练习8&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a08">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*编写具有两个方法的类，在第一个方法内调用第二个方法两次：第一次调用时不使用this关键字，第二次调用时使用this关键字--
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">* 这里只是为了验证它是起作用的，你不应该在实践中使用这种方法。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">test1&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;调用了test1（）方法&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">test2&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;执行test1（）方法：&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">test1&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;执行test2（）方法：&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">this&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">test1&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Main&lt;/span> &lt;span style="color:#aa89ea">main&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">main&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">test2&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">执行test1（）方法：调用了test1（）方法
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">执行test2（）方法：调用了test1（）方法
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习9">练习9&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a09">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*编写两个（重载）构造器的类，并在第一个构造器中,通过this调用第二个构造器。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;s=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">this&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;i=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;hello world&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">521&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">s=hello world
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">s=i=521
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习10">练习10&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a010">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*编写具有finalize（）方法的类，并在方法中打印消息，在main（）中为该类创建一个对象，试解释这个程序的行为。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">protected&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">finalize&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;finalize()called&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习11">练习11&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a011">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//修改前一个练习的程序,让你的finalize（）总会被调用。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">protected&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">finalize&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;finalize()called&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">gc&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">runFinalization&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">finalize()called
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习12">练习12&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a012">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*编写名为Tank的类，此类的状态可以是“满的”或“空的”。其终结条件是：对象被清理时必须处于空状态。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"> * 请编写finalize（）以检验终结条件是否成立，在main（）中测试Tank可能发生的几种使用方式。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"> */&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习13">练习13&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a013">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//验证前面段落中的语句&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Cup&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Cup&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">marker&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Cup()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">f&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">marker&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;f(&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">marker&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#98c379">&amp;#34;)&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Cups&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#aa89ea">Cup&lt;/span> &lt;span style="color:#aa89ea">cup1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#aa89ea">Cup&lt;/span> &lt;span style="color:#aa89ea">cup2&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">cup1&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Cup&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">cup2&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Cup&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">2&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Cups&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Cups()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;main()&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Cups&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">cup1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">99&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#aa89ea">Cups&lt;/span> &lt;span style="color:#aa89ea">cups1&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Cups&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#aa89ea">Cups&lt;/span> &lt;span style="color:#aa89ea">cups2&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Cups&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Cup()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Cup()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Cups()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Cups()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">main()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">f(99)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习14">练习14&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a014">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//编写一个类，拥有两个静态字符串域，其中一个在定义处初始化，另一个在静态块中初始化。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//现在，加入一个静态方法用以打印出两个字段值。请证明它们都会在被使用之前完成初始化动作。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s1&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;dog&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s2&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">s2&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;kitty&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;s1=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">s1&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;s2=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">s2&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">s1=dog
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">s2=kitty
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习15">练习15&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a015">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//编写一个含有字符串域的类，并采用实例初始化方式进行初始化。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span> &lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">s&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;young for you&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#00b1f7">Main&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;s=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Main&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">s=young for you
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习16">练习16&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a016">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*创建一个String对象数据，并为每一个元素都赋值一个String。用for循环来打印该数组。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">String&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">String&lt;/span>&lt;span style="color:#54b1c7">[&lt;/span>&lt;span style="color:#aa89ea">4&lt;/span>&lt;span style="color:#54b1c7">]&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#54b1c7">[&lt;/span>&lt;span style="color:#aa89ea">0&lt;/span>&lt;span style="color:#54b1c7">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;these&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#54b1c7">[&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#54b1c7">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;are&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#54b1c7">[&lt;/span>&lt;span style="color:#aa89ea">2&lt;/span>&lt;span style="color:#54b1c7">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;some&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#54b1c7">[&lt;/span>&lt;span style="color:#aa89ea">3&lt;/span>&lt;span style="color:#54b1c7">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;String&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">0&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">&amp;lt;&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">length&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">++&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#54b1c7">[&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">]&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">these
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">are
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">some
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">String
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习17">练习17&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a017">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//创建一个类，他有一个接受一个String参数的构造器。在构造阶段，打印该参数。创建一个该类的对象引用数组，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//但是不实际去创建对象赋值给该数组。当运行程序时，请注意来自对该构造器的调用中的初始化消息是否打印了出来。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Test&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Test&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;s=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Test&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span> &lt;span style="color:#aa89ea">array1&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Test&lt;/span>&lt;span style="color:#54b1c7">[&lt;/span>&lt;span style="color:#aa89ea">5&lt;/span>&lt;span style="color:#54b1c7">]&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#54b1c7">//&lt;/span>&lt;span style="color:#aa89ea">不知这样是否符合题意&lt;/span>。。&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习18">练习18&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a018">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//通过创建对象赋值给引用数组，从而完成前一个练习。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Test&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Test&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;s=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Test&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span> &lt;span style="color:#aa89ea">array1&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Test&lt;/span>&lt;span style="color:#54b1c7">[&lt;/span>&lt;span style="color:#aa89ea">5&lt;/span>&lt;span style="color:#54b1c7">]&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">0&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">&amp;lt;&lt;/span>&lt;span style="color:#aa89ea">array1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">length&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">++&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#aa89ea">array1&lt;/span>&lt;span style="color:#54b1c7">[&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">]=&lt;/span>&lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Test&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">s=0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">s=1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">s=2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">s=3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">s=4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习19">练习19&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a019">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//写一个类，他接受一个可变参数的String数组，验证你可以向该方法传递一个用逗号分隔的String列表，或是一个String[]。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Test&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">printString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span>&lt;span style="color:#abb2bf">...&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span> &lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#98c379">&amp;#34; &amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">Test&lt;/span> &lt;span style="color:#aa89ea">test&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Test&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">test&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">printString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;nice&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#98c379">&amp;#34;to&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#98c379">&amp;#34;meet&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#98c379">&amp;#34;you&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">nice 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">to 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">meet 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">you 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习20">练习20&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a020">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//创建一个使用可变参数列表而不是普通的main()语法的main()。打印所产生的args数组的所有元素，并用各种不同数量的命令行参数来测试它。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">printString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span>&lt;span style="color:#abb2bf">...&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span> &lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#98c379">&amp;#34; &amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span>&lt;span style="color:#abb2bf">...&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">printString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;nice&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#98c379">&amp;#34;to&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#98c379">&amp;#34;meet&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#98c379">&amp;#34;you&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">printString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">String&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>&lt;span style="color:#98c379">&amp;#34;there&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#98c379">&amp;#34;are&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#98c379">&amp;#34;some&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#98c379">&amp;#34;strings&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">nice to meet you 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">there are some strings 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习21">练习21&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a021">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//创建一个enum，它包含纸币中最小面值的6种类型。通过values()循环并打印每一个值及其ordinal（）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">enum&lt;/span> &lt;span style="color:#aa89ea">Money&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">One&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">Five&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">Ten&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">Hun&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">Tho&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">Money&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">Money&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">values&lt;/span>&lt;span style="color:#abb2bf">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#98c379">&amp;#34;,ordinal:&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">ordinal&lt;/span>&lt;span style="color:#abb2bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">One,ordinal:0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Five,ordinal:1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Ten,ordinal:2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Hun,ordinal:3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Tho,ordinal:4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习22">练习22&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a022">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">//在前面的例子中，为enum写一个switch语句，对于每一个case，输出该特定货币的描述。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">enum&lt;/span> &lt;span style="color:#aa89ea">Money&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">One&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">Five&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">Ten&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">Twe&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">Fif&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">Money&lt;/span> &lt;span style="color:#aa89ea">money&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">describe&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">switch&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">money&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">case&lt;/span> &lt;span style="color:#aa89ea">One&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>&lt;span style="color:#76a9f9">break&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">case&lt;/span> &lt;span style="color:#aa89ea">Five&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;5&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>&lt;span style="color:#76a9f9">break&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">case&lt;/span> &lt;span style="color:#aa89ea">Ten&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;10&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>&lt;span style="color:#76a9f9">break&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">case&lt;/span> &lt;span style="color:#aa89ea">Twe&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;20&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>&lt;span style="color:#76a9f9">break&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">case&lt;/span> &lt;span style="color:#aa89ea">Fif&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;50&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>&lt;span style="color:#76a9f9">break&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">default&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#76a9f9">break&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">Money&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span> &lt;span style="color:#abb2bf">:&lt;/span> &lt;span style="color:#aa89ea">Money&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">values&lt;/span>&lt;span style="color:#abb2bf">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#98c379">&amp;#34;,ordinal:&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">ordinal&lt;/span>&lt;span style="color:#abb2bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">One,ordinal:0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Five,ordinal:1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Ten,ordinal:2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Twe,ordinal:3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Fif,ordinal:4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第5章完&lt;/p></description></item><item><title>Thinking in Java 习题 - 第四章</title><link>https://yindongliang.com/posts/think-in-java-practice-4/</link><pubDate>Fri, 13 Sep 2013 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/think-in-java-practice-4/</guid><description>&lt;h2 id="练习1">练习1&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a01">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*写一个程序，打印从1到100的值*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">&amp;lt;&lt;/span>&lt;span style="color:#aa89ea">101&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">++&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习2">练习2&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a02">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*写一个程序，产生25个随机数。对于每一个随机值，使用if-else语句来将其分类为大于，小于，或等于紧随它而随机生成的值*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import&lt;/span> &lt;span style="color:#ca72ff">java.util.*&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#aa89ea">Random&lt;/span> &lt;span style="color:#aa89ea">r&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Random&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">compare&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">r&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">nextInt&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">20&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">b&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">r&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">nextInt&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">20&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;a=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#98c379">&amp;#34;;b=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">b&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#54b1c7">&amp;lt;&lt;/span>&lt;span style="color:#aa89ea">b&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;a&amp;lt;b&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">else&lt;/span> &lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#54b1c7">&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">b&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;a&amp;gt;b&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;a=b&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">0&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">&amp;lt;&lt;/span>&lt;span style="color:#aa89ea">25&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">++&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">compare&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=13;b=6
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;gt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=12;b=12
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=16;b=17
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;lt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=7;b=15
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;lt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=10;b=5
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;gt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=1;b=18
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;lt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=4;b=2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;gt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=3;b=3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=10;b=1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;gt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=7;b=3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;gt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=13;b=6
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;gt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=11;b=13
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;lt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=17;b=11
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;gt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=16;b=17
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;lt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=16;b=10
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;gt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=6;b=13
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;lt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=9;b=2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;gt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=13;b=12
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;gt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=17;b=3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;gt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=11;b=15
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;lt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=8;b=8
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=14;b=1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;gt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=18;b=2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;gt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=9;b=7
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;gt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a=8;b=0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a&amp;gt;b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span> &lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习3">练习3&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a03">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import&lt;/span> &lt;span style="color:#ca72ff">java.util.Random&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*修改练习2，把代码用一个while无限循环包括起来。然后运行它直至用键盘中断其运行（通常通过按CTRL-C）。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">compare&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Random&lt;/span> &lt;span style="color:#aa89ea">r&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Random&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">r&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">nextInt&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">20&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">b&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">r&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">nextInt&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">20&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;s=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#98c379">&amp;#34;;b=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">b&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#54b1c7">&amp;lt;&lt;/span>&lt;span style="color:#aa89ea">b&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;a&amp;lt;b&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">else&lt;/span> &lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#54b1c7">&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">b&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;a&amp;gt;b&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;a=b&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">while&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">true&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">compare&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">compare&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习4">练习4&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a04">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*写一个程序，使用两个嵌套的for循环和取余操作符（%）来探测和打印素数（只能被其自身和1整除，而不能被其他数字整除的整数）*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">j&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">2&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">0&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">++&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">boolean&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#e5c07b">true&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">for&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">j&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">2&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">j&lt;/span>&lt;span style="color:#54b1c7">&amp;lt;&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>&lt;span style="color:#aa89ea">j&lt;/span>&lt;span style="color:#54b1c7">++&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">%&lt;/span>&lt;span style="color:#aa89ea">j&lt;/span>&lt;span style="color:#54b1c7">==&lt;/span>&lt;span style="color:#aa89ea">0&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#e5c07b">false&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#54b1c7">==&lt;/span>&lt;span style="color:#e5c07b">true&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习5">练习5&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a05">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*重复第3章中的练习10，不要用Integer.toBinaryString()方法，而是用三元操作符和按位操作符来显示二进制的1和0*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>待解决！！&lt;/p></description></item><item><title>Thinking in Java 习题 - 第三章</title><link>https://yindongliang.com/posts/think-in-java-practice-3/</link><pubDate>Thu, 12 Sep 2013 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/think-in-java-practice-3/</guid><description>&lt;h2 id="练习1">练习1&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a01">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*使用“简短的”和正常的打印语句来编写一个程序。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import&lt;/span> &lt;span style="color:#ca72ff">java.util.*&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import static&lt;/span> &lt;span style="color:#ca72ff">net.mindview.util.Print.*&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">)&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Hello World !&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Hello world !&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Hello World !
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Hello world !
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>导入包时花了不少劲，util前面两个文件夹好像缺少文件编译不了，于是直接删了，然后编译才通过。&lt;/p>
&lt;h2 id="练习2">练习2&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a02">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*创建一个包含一个float域的类，并用这个类来展示别名机制*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Integral&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">float&lt;/span> &lt;span style="color:#aa89ea">f&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Integral&lt;/span> &lt;span style="color:#aa89ea">f1&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Integral&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Integral&lt;/span> &lt;span style="color:#aa89ea">f2&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Integral&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">f1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">2f&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">f2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">1f&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;f1.f=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">f1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;f2.f=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">f2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">f1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">f2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;f1.f=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">f1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;f2.f=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">f2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">f2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">3f&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;f1.f=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">f1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;f2.f=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">f2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">f1&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">f2&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;f1.f=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">f1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;f2.f=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">f2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">f1.f=2.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">f2.f=1.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">f1.f=1.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">f2.f=1.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">f1.f=1.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">f2.f=3.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">f1.f=3.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">f2.f=3.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个程序应该可以说明别名机制了。&lt;/p>
&lt;h2 id="练习3">练习3&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a03">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*创建一个包含一个float域的类，并用这个类来展示方法调用是的别名机制
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">* */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Letter&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">float&lt;/span> &lt;span style="color:#aa89ea">f&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">f&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">Letter&lt;/span> &lt;span style="color:#aa89ea">f&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">f&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">1f&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Letter&lt;/span> &lt;span style="color:#aa89ea">x&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Letter&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">x&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">2f&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;x.f=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">x&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">f&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">x&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;x.f=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">x&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">f&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">x.f=2.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">x.f=1.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习4">练习4&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a04">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*编写一个计算速度的程序，他所使用的距离和时间都是常量。*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习5">练习5&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a05">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*创建一个名为Dog的类，它包含两个String域，name和says。在main（）方法中，创建两个Dog对象，
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">* 一个名为spot（它的叫声为“Ruff！”），另一个名为scruffy（它的叫声为“Wuff！”）。然后输出它们的名字和叫声*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Dog&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">name&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">says&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#54b1c7">[]&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Dog&lt;/span> &lt;span style="color:#aa89ea">dog1&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Dog&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Dog&lt;/span> &lt;span style="color:#aa89ea">dog2&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Dog&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">dog1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">name&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;spot&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">dog2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">name&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;scruffy&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">dog1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">says&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Ruff!&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">dog2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">says&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Wurf!&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">dog1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">name&lt;/span> &lt;span style="color:#54b1c7">+&lt;/span> &lt;span style="color:#98c379">&amp;#34;says:&amp;#34;&lt;/span> &lt;span style="color:#54b1c7">+&lt;/span> &lt;span style="color:#aa89ea">dog1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">says&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">dog2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">name&lt;/span> &lt;span style="color:#54b1c7">+&lt;/span> &lt;span style="color:#98c379">&amp;#34;says:&amp;#34;&lt;/span> &lt;span style="color:#54b1c7">+&lt;/span> &lt;span style="color:#aa89ea">dog2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">says&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">spotsays:Ruff!
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">scruffysays:Wurf!
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习6">练习6&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a06">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*在练习5的基础上，创建一个新的Dog索引，并对其赋值为spot对象。测试用==和equals（）方法来比较所有引用的结果。*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#aa89ea">个人理解&lt;/span>：&lt;span style="color:#54b1c7">==&lt;/span>&lt;span style="color:#aa89ea">用来比较两对象在对内存中的地址&lt;/span>，&lt;span style="color:#aa89ea">equals&lt;/span>（）&lt;span style="color:#aa89ea">用来比较两个对象的内容是否相同&lt;/span>。&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*在练习5的基础上，创建一个新的Dog索引，并对其赋值为spot对象。测试用==和equals（）方法来比较所有引用的结果。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import static&lt;/span> &lt;span style="color:#ca72ff">net.mindview.util.Print.*&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Dog&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">name&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">says&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">compare&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">Dog&lt;/span> &lt;span style="color:#aa89ea">dog1&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">Dog&lt;/span> &lt;span style="color:#aa89ea">dog2&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;with==:&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">dog1&lt;/span>&lt;span style="color:#54b1c7">==&lt;/span>&lt;span style="color:#aa89ea">dog2&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;with equals():&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">dog1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">equals&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">dog2&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;==on name:&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">dog1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">name&lt;/span>&lt;span style="color:#54b1c7">==&lt;/span>&lt;span style="color:#aa89ea">dog2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">name&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;==on says:&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">dog1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">says&lt;/span>&lt;span style="color:#54b1c7">==&lt;/span>&lt;span style="color:#aa89ea">dog2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">says&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;equals on name:&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">dog1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">name&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">equals&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">dog2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">name&lt;/span>&lt;span style="color:#abb2bf">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;equals on says:&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">dog1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">says&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">equals&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">dog2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">says&lt;/span>&lt;span style="color:#abb2bf">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Dog&lt;/span> &lt;span style="color:#aa89ea">dog1&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Dog&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Dog&lt;/span> &lt;span style="color:#aa89ea">dog2&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Dog&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Dog&lt;/span> &lt;span style="color:#aa89ea">dog3&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">dog1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">dog1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">name&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;spot&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">dog2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">name&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;scruffy&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">dog1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">says&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Ruff!&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">dog2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">says&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Wurf!&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">compare&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">dog1&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">dog2&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">compare&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">dog2&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">dog3&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">compare&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">dog1&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">dog3&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">with==:false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">with equals():false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">==on name:false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">==on says:false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">equals on name:false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">equals on says:false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">with==:false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">with equals():false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">==on name:false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">==on says:false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">equals on name:false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">equals on says:false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">with==:true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">with equals():true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">==on name:true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">==on says:true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">equals on name:true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">equals on says:true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习7">练习7&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a07">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*编写一个程序，模拟扔硬币的结果。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*布尔类型0代表硬币正面，1代表硬币反面*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import&lt;/span> &lt;span style="color:#ca72ff">java.util.Random&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Random&lt;/span> &lt;span style="color:#aa89ea">rand&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Random&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">boolean&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">rand&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">nextBoolean&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">20&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">if&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;抛得的硬币为反面&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">else&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;抛得的硬币为正面&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span> &lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">抛得的硬币为正面
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习8">练习8&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a08">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*展示用十六进制和八进制计数法来操作long值，用Long.toBinaryString()来显示结果。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import static&lt;/span> &lt;span style="color:#ca72ff">net.mindview.util.Print.*&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">long&lt;/span> &lt;span style="color:#aa89ea">i1&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">0x123L&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;i1 =&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Long&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i1&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">long&lt;/span> &lt;span style="color:#aa89ea">i2&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">0123&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;i2 =&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Long&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i2&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">i1 =100100011
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">i2 =1010011
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习9">练习9&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a09">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*分别显示用float和double指数计数法所能表示的最大和最小的数字。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;float_MAX=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Float&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">MAX_VALUE&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;float_MIN=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Float&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">MIN_VALUE&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;double_MAX=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Double&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">MAX_VALUE&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;double_MIN=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Double&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">MIN_VALUE&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">float_MAX=3.4028235E38
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">float_MIN=1.4E-45
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">double_MAX=1.7976931348623157E308
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">double_MIN=4.9E-324
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习10">练习10&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a010">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*编写一个具有两个常量值得程序，一个具有交替的二进制位1和0，其中最低有效位为0，另一个也具有交替的二进制位1和0，
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">* 但是最低有效位为1（提示：使用十六进制常量来表示是最简单的方法）。取这两个值，用按位操作符一所有可能的方式结合运算他们，
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">* 然后用Integer.toBinaryString（）显示。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import static&lt;/span> &lt;span style="color:#ca72ff">net.mindview.util.Print.*&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">0x2aa&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">j&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">0x555&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;i:&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;j:&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">j&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;~i:&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#54b1c7">~&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;~j:&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#54b1c7">~&lt;/span>&lt;span style="color:#aa89ea">j&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;(i|j):&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">|&lt;/span>&lt;span style="color:#aa89ea">j&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;(i&amp;amp;j):&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">&amp;amp;&lt;/span>&lt;span style="color:#aa89ea">j&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;(i^i):&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">^&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;(i|j):&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#54b1c7">~&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">|&lt;/span>&lt;span style="color:#aa89ea">j&lt;/span>&lt;span style="color:#abb2bf">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;~(i&amp;amp;j):&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#54b1c7">~&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">&amp;amp;&lt;/span>&lt;span style="color:#aa89ea">j&lt;/span>&lt;span style="color:#abb2bf">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;(i^j):&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#54b1c7">^&lt;/span>&lt;span style="color:#aa89ea">j&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">i:1010101010
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">j:10101010101
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">~i:11111111111111111111110101010101
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">~j:11111111111111111111101010101010
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">(i|j):11111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">(i&amp;amp;j):0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">(i^i):0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">(i|j):11111111111111111111100000000000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">~(i&amp;amp;j):11111111111111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">(i^j):11111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习11">练习11&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a011">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*以一个所有位都为1的二进制数字开始，（使用十六进制常量），用有符号右移操作符对其进行右移，直至所有的二进制位都被移出为止，
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">* 每移一位都要使用Integer.toBinaryString（）显示结果*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import static&lt;/span> &lt;span style="color:#ca72ff">net.mindview.util.Print.*&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">MAX_VALUE&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toHexString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">while&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#54b1c7">!=&lt;/span>&lt;span style="color:#aa89ea">0&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#54b1c7">&amp;gt;&amp;gt;=&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111111111111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">7fffffff
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111111111111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111111111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111111111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111111111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span> &lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习12">练习12&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a012">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*以一个所有位都为1的二进制数字开始，先左移它，然后用无符号右移操作符对其进行右移，直至所有的二进制位都被移除为止，
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">* 每移一位都要使用Integer.toBinaryString()显示结果*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import static&lt;/span> &lt;span style="color:#ca72ff">net.mindview.util.Print.*&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">MAX_VALUE&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#54b1c7">&amp;lt;&amp;lt;=&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">while&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#54b1c7">!=&lt;/span>&lt;span style="color:#aa89ea">0&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">a&lt;/span>&lt;span style="color:#54b1c7">&amp;gt;&amp;gt;&amp;gt;=&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111111111111111111111111111110
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111111111111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111111111111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111111111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111111111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111111111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">111
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">11
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习13">练习13&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a013">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*编写一个方法，它以二进制形式显示char类型的值。使用多个不同的字符来展示它。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import static&lt;/span> &lt;span style="color:#ca72ff">net.mindview.util.Print.*&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span> &lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;a:&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;a&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;b:&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;b&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;c:&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">Integer&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">toBinaryString&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#39;c&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">a:1100001
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">b:1100010
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">c:1100011
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习14">练习14&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a014">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*编写一个接收两个字符串参数的方法，用各种布尔值的比较关系来比较两个字符串，
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">* 然后把结果打印出来。做==和！=比较的同时，用equals（）做测试，在main（）里面用几个不同的字符串对象调用这个方法。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Main&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">p&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#e5c07b">boolean&lt;/span> &lt;span style="color:#aa89ea">b&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span> &lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#98c379">&amp;#34;:&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">b&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">compare&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">A&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">B&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;A:&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">A&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#98c379">&amp;#34; B:&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">B&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;A==B:&amp;#34;&lt;/span> &lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#aa89ea">A&lt;/span>&lt;span style="color:#54b1c7">==&lt;/span>&lt;span style="color:#aa89ea">B&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;A!=B&amp;#34;&lt;/span> &lt;span style="color:#abb2bf">,&lt;/span> &lt;span style="color:#aa89ea">A&lt;/span> &lt;span style="color:#54b1c7">!=&lt;/span>&lt;span style="color:#aa89ea">B&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">print&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;A.equals(B):&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">A&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">equals&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">B&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">compare&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;hello&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#98c379">&amp;#34;hello&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">String&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;fine&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">compare&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;hello&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">* A:hello B:hello
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">A==B::true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">A!=B:false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">A.equals(B):true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">A:hello B:fine
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">A==B::false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">A!=B:true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">A.equals(B):false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第三章完结。&lt;/p></description></item><item><title>Thinking in Java 习题 - 第二章</title><link>https://yindongliang.com/posts/think-in-java-practice-2/</link><pubDate>Sun, 08 Sep 2013 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/think-in-java-practice-2/</guid><description>&lt;h2 id="练习1">练习1&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a01">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*创建一个类，它包含一个int域和一个char域，
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">他们都没有被初始化，将他们打印出来，
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">以验证java执行了默认初始化。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Test&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">char&lt;/span> &lt;span style="color:#aa89ea">c&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#00b1f7">Test&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;i=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;c=[&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span> &lt;span style="color:#aa89ea">c&lt;/span> &lt;span style="color:#54b1c7">+&lt;/span> &lt;span style="color:#98c379">&amp;#39;]&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Test&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">i=0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">c=[ ]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习2">练习2&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a02">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*创建一个Hello，world程序，该程序只要输出这句话即可。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Test&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Hello World&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Hello World
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习3">练习3&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a03">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*找出含有ATypeName的代码段，将其改写成完整的程序，
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">然后编译，运行。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">ATypeName&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#aa89ea">ATypeName&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">ATypeName&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#54b1c7">///&lt;/span>&lt;span style="color:#abb2bf">:&lt;/span>&lt;span style="color:#54b1c7">~&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习4">练习4&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a04">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*将DataOnly代码段改写成一个程序，然后编译，运行。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">DataOnly&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">double&lt;/span> &lt;span style="color:#aa89ea">d&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">boolean&lt;/span> &lt;span style="color:#aa89ea">b&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">DataOnly&lt;/span> &lt;span style="color:#aa89ea">D&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">DataOnly&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">D&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">i&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">D&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">d&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">23&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">D&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">b&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#e5c07b">false&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">D.i=1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">D.d=1.23
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">D.b=false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习5">练习5&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a05">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*修改前一个练习，将DataOnly中的数据在main（）方法中赋值并打印出来。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">DataOnly&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">double&lt;/span> &lt;span style="color:#aa89ea">d&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">boolean&lt;/span> &lt;span style="color:#aa89ea">b&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">DataOnly&lt;/span> &lt;span style="color:#aa89ea">D&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">DataOnly&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">D&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">i&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">D&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">d&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">23&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">D&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">b&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#e5c07b">false&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;D.i=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">D&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">i&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;D.d=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">D&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">d&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;D.b=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">D&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">b&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">D.i=1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">D.d=1.23
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">D.b=false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习6">练习6&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a06">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*编写一个程序，让它含有本章所定义的storage（）方法的代码段，并调用之。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Storage&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;Hello&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#00b1f7">storage&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">return&lt;/span> &lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">length&lt;/span>&lt;span style="color:#abb2bf">()&lt;/span>&lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#aa89ea">2&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Storage&lt;/span> &lt;span style="color:#aa89ea">st&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Storage&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Storage(s)=&amp;#34;&lt;/span> &lt;span style="color:#54b1c7">+&lt;/span> &lt;span style="color:#aa89ea">st&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">storage&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">s&lt;/span>&lt;span style="color:#abb2bf">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span> &lt;span style="color:#8a93a5;font-style:italic">/*output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"> Storage(s)=10 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习7">练习7&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a07">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*将Incrementable的代码段改写成一个完整的可运行程序*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">StaticTest&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">0&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Incrementable&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">increment&lt;/span>&lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">StaticTest&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">i&lt;/span>&lt;span style="color:#54b1c7">++&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Incrementable&lt;/span> &lt;span style="color:#aa89ea">st&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Incrementable&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Incrementable&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">increment&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习8">练习8&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a08">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*编写一个程序，展示无论你创建了某个特定类的多少个对象，
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">这个类中的某个特定的static域只有一个实例*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Test&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">21&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Test&lt;/span> &lt;span style="color:#aa89ea">t1&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Test&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">Test&lt;/span> &lt;span style="color:#aa89ea">t2&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Test&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;t1.i=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">t1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">i&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#98c379">&amp;#34;;t2.i=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">t2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">i&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">t1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">i&lt;/span>&lt;span style="color:#54b1c7">++&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;t1.i=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">t1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">i&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#98c379">&amp;#34;;t2.i=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">t2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">i&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span> &lt;span style="color:#8a93a5;font-style:italic">/*output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">t1.i=21;t2.i=21
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">t1.i=22;t2.i=22
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习9">练习9&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a09">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*编写一个程序，展示自动包装功能对所有的基本类型和包装器类型都起作用*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">AutoBoxTest&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">boolean&lt;/span> &lt;span style="color:#aa89ea">b&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#e5c07b">true&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">21&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">char&lt;/span> &lt;span style="color:#aa89ea">c&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#98c379">&amp;#39;c&amp;#39;&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">long&lt;/span> &lt;span style="color:#aa89ea">l&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">1L&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">double&lt;/span> &lt;span style="color:#aa89ea">d&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">1d&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">float&lt;/span> &lt;span style="color:#aa89ea">f&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">2&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">1f&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">boolean&lt;/span> &lt;span style="color:#aa89ea">B&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">b&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">I&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">i&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">char&lt;/span> &lt;span style="color:#aa89ea">C&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">c&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">long&lt;/span> &lt;span style="color:#aa89ea">L&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">l&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">double&lt;/span> &lt;span style="color:#aa89ea">D&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">d&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">float&lt;/span> &lt;span style="color:#aa89ea">F&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">f&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;boolean=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">B&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;int=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">I&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;char=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">C&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;long=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">L&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;double=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">D&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;float=&amp;#34;&lt;/span>&lt;span style="color:#54b1c7">+&lt;/span>&lt;span style="color:#aa89ea">F&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">boolean=true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">int=21
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">char=c
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">long=1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">double=2.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">float=2.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习10">练习10&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a010">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*编写一个程序，打印出从命令行获得的三个参数，为此，
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">* 需要确定命令行数组中String的下表。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">Test&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[&lt;/span>&lt;span style="color:#aa89ea">0&lt;/span>&lt;span style="color:#54b1c7">]&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[&lt;/span>&lt;span style="color:#aa89ea">1&lt;/span>&lt;span style="color:#54b1c7">]&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#54b1c7">[&lt;/span>&lt;span style="color:#aa89ea">2&lt;/span>&lt;span style="color:#54b1c7">]&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*答案是这样写的，编译不过，也不懂，求解！！*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习11">练习11&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a011">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*将AllTheColorsOfTheRainbow这个实例改写成一个程序，然后编译，运行*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">AllTheColorsOfTheRainbow&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">AnIntegerRepresentingColors&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">changeTheHueOfTheColor&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">newHue&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">AnIntegerRepresentingColors&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">newHue&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">AllTheColorsOfTheRainbow&lt;/span> &lt;span style="color:#aa89ea">all&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">AllTheColorsOfTheRainbow&lt;/span>&lt;span style="color:#abb2bf">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">all&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">changeTheHueOfTheColor&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">27&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="练习12">练习12&lt;a class="anchor" href="#%e7%bb%83%e4%b9%a012">#&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*找出HelloData.java的第二个版本，也就是那个简单注释文档的示例，对该文件执行javadoc，然后通过web浏览器观看运行结果*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">import&lt;/span> &lt;span style="color:#ca72ff">java.util.*&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">/*The first Thinking in Java example program.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">* Displays a string and today&amp;#39;s date
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">* @author Bruce Eckel
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">* @author www.MindView.net
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">* @version 4.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">* */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">class&lt;/span> &lt;span style="color:#ca72ff">HelloDate&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8a93a5;font-style:italic">/*Entry point to class &amp;amp;application.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"> * @param args array of string arguments
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"> * @throws exceptions No exceptions thrown
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic"> * */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#76a9f9">public&lt;/span> &lt;span style="color:#76a9f9">static&lt;/span> &lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">String&lt;/span>&lt;span style="color:#54b1c7">[]&lt;/span> &lt;span style="color:#aa89ea">args&lt;/span>&lt;span style="color:#abb2bf">){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;Hello,it&amp;#39;s:&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#aa89ea">System&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">out&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#cebc3a">println&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#76a9f9">new&lt;/span> &lt;span style="color:#aa89ea">Date&lt;/span>&lt;span style="color:#abb2bf">());&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#abb2bf">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;span style="color:#8a93a5;font-style:italic">/*Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Hello,it&amp;#39;s:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">Sun Sep 08 12:11:08 CST 201 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">*/&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>后面的几个练习是关于 javadoc 的，不涉及程序问题。&lt;/p></description></item><item><title>使用 Github Pages 建立免费的静态网站</title><link>https://yindongliang.com/posts/use-github-page-build-static-website/</link><pubDate>Sun, 28 Jul 2013 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/use-github-page-build-static-website/</guid><description>&lt;p>github 想必都听说过，这个号称程序员的 Facebook 有着很多高质量的项目，github 就是为这些项目提供代码托管服务，你可以将自己做好的项目放到 github 上与大家共享，别人也可提出修改建议。&lt;/p></description></item><item><title>入门结构体链表</title><link>https://yindongliang.com/posts/clang-struct-primer/</link><pubDate>Wed, 05 Jun 2013 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/clang-struct-primer/</guid><description>&lt;p>学完结构体发现这一章概括了这本&lt;a href="http://book.douban.com/subject/1679623/">C程序设计&lt;/a>的多数知识点，遂做一个总结。&lt;/p>
&lt;p>ps：代码在vs2012上测试，从简单的开始。&lt;/p>
&lt;p>1.定义一个简单的结构体并输出&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#include&amp;lt;stdio.h&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#include&amp;lt;stdlib.h&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>&lt;span style="color:#76a9f9">struct&lt;/span> &lt;span style="color:#ca72ff">stu&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">num&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">char&lt;/span> &lt;span style="color:#aa89ea">name&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#d19a66">20&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">float&lt;/span> &lt;span style="color:#aa89ea">score&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">struct&lt;/span> &lt;span style="color:#ca72ff">stu&lt;/span> &lt;span style="color:#aa89ea">stu_1&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>&lt;span style="color:#d19a66">01&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#98c379">&amp;#34;张三&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#d19a66">90.5&lt;/span>&lt;span style="color:#abb2bf">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">struct&lt;/span> &lt;span style="color:#ca72ff">stu&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">=&amp;amp;&lt;/span>&lt;span style="color:#aa89ea">stu_1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;学生数据为：&lt;/span>&lt;span style="color:#d26464;font-weight:bold">\n&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;%ld%10s%10.2f&lt;/span>&lt;span style="color:#d26464;font-weight:bold">\n&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">num&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">name&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">score&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">system&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;pause&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>结构体的内容也可以在主函数中这样定义：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#include&amp;lt;stdio.h&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">#include&amp;lt;stdlib.h&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8a93a5;font-style:italic">&lt;/span>&lt;span style="color:#76a9f9">struct&lt;/span> &lt;span style="color:#ca72ff">stu&lt;/span>&lt;span style="color:#abb2bf">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">int&lt;/span> &lt;span style="color:#aa89ea">num&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">char&lt;/span> &lt;span style="color:#aa89ea">name&lt;/span>&lt;span style="color:#abb2bf">[&lt;/span>&lt;span style="color:#d19a66">20&lt;/span>&lt;span style="color:#abb2bf">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e5c07b">float&lt;/span> &lt;span style="color:#aa89ea">score&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">void&lt;/span> &lt;span style="color:#00b1f7">main&lt;/span> &lt;span style="color:#abb2bf">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">struct&lt;/span> &lt;span style="color:#ca72ff">stu&lt;/span> &lt;span style="color:#aa89ea">stu_1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#76a9f9">struct&lt;/span> &lt;span style="color:#ca72ff">stu&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">stu_1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">num&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#d19a66">01&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">strcpy&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">stu_1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">name&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#98c379">&amp;#34;张三&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">stu_1&lt;/span>&lt;span style="color:#abb2bf">.&lt;/span>&lt;span style="color:#aa89ea">score&lt;/span>&lt;span style="color:#54b1c7">=&lt;/span>&lt;span style="color:#d19a66">90.5&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">=&amp;amp;&lt;/span>&lt;span style="color:#aa89ea">stu_1&lt;/span>&lt;span style="color:#abb2bf">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;学生数据为：&lt;/span>&lt;span style="color:#d26464;font-weight:bold">\n&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">printf&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;%ld%10s%10.2f&lt;/span>&lt;span style="color:#d26464;font-weight:bold">\n&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">num&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">name&lt;/span>&lt;span style="color:#abb2bf">,&lt;/span>&lt;span style="color:#aa89ea">p&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">score&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#aa89ea">system&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#98c379">&amp;#34;pause&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#abb2bf">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>发现这里的stu有点像面向对象里的类有木有。&lt;/p></description></item><item><title>这个博客</title><link>https://yindongliang.com/posts/this-blog/</link><pubDate>Sun, 23 Dec 2012 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/this-blog/</guid><description>&lt;blockquote class='book-hint '>
&lt;p>这是一篇后记，大约写于 2015 年，但适合作为本站的第一篇来了解一下，而 2012 年是本站注册域名和我开始上大学的时间点。&lt;/p>&lt;/blockquote>&lt;div class="mermaid">timeline
 2012 : WordPress
 : VPS
 2013 : Jekyll
 : Github Pages
 2014 : Coding.net
 2015 : Hexo
 : Coding.net
 2016 : Ghost
 : VPS
 2019 : Hugo
 : Typora
 : Github Pages
 2022 : Hugo
 : Obsidian
 : Github Pages
&lt;/div>
&lt;p>我对做一个自己的博客的过程是可以说非常的折腾，技术架构上有过很多的版本，本文专门来总结一下。&lt;/p></description></item></channel></rss>