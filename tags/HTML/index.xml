<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HTML on LYon's Blog</title><link>https://yindongliang.com/tags/HTML/</link><description>Recent content in HTML on LYon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 07 Oct 2025 12:54:08 +0800</lastBuildDate><atom:link href="https://yindongliang.com/tags/HTML/index.xml" rel="self" type="application/rss+xml"/><item><title>Chrome URLs</title><link>https://yindongliang.com/docs/Frontend/Chrome/</link><pubDate>Sun, 07 Sep 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/Chrome/</guid><description>&lt;p>Chrome 浏览器提供了大量以 &lt;code>chrome://&lt;/code> 开头的特殊内部页面（有时称为 &amp;ldquo;chrome URLs&amp;rdquo; 或 &amp;ldquo;about URLs&amp;rdquo;），这些页面用于访问浏览器的各种内部信息、设置、调试和实验功能。下面是一些比较常用和实用的内部地址：&lt;/p></description></item><item><title>BOM</title><link>https://yindongliang.com/docs/Frontend/JavaScript/BOM/</link><pubDate>Sat, 06 Sep 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/JavaScript/BOM/</guid><description>&lt;h3 id="什么是-bom">什么是 BOM？&lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af-bom">#&lt;/a>&lt;/h3>
&lt;p>BOM（Browser Object Model，浏览器对象模型）不同于操作文档的 DOM（Document Object Model），它提供了独立于内容、与浏览器窗口进行交互的对象。BOM 没有正式的标准（但存在一些事实标准），因此不同浏览器在实现上可能存在细微差异，但核心对象和方法是基本一致的。&lt;/p></description></item><item><title>DOM</title><link>https://yindongliang.com/docs/Frontend/JavaScript/DOM/</link><pubDate>Sat, 06 Sep 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/JavaScript/DOM/</guid><description>&lt;h1 id="javascript-dom-api-全面介绍">JavaScript DOM API 全面介绍&lt;a class="anchor" href="#javascript-dom-api-%e5%85%a8%e9%9d%a2%e4%bb%8b%e7%bb%8d">#&lt;/a>&lt;/h1>
&lt;p>DOM（文档对象模型）是HTML和XML文档的编程接口，它提供了对文档的结构化表示，并定义了一种方式使程序可以访问和操作文档的结构、样式和内容。&lt;/p></description></item><item><title>Pagefind</title><link>https://yindongliang.com/links/202509/Pagefind/</link><pubDate>Sat, 06 Sep 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/links/202509/Pagefind/</guid><description>&lt;p>Pagefind is a fully static search library that aims to perform well on large sites, while using as little of your users’ bandwidth as possible, and without hosting any infrastructure.&lt;/p></description></item><item><title>零宽度空格与 CSS 换行行为</title><link>https://yindongliang.com/posts/zero-width-space-and-css-word-wrap/</link><pubDate>Fri, 22 Nov 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/zero-width-space-and-css-word-wrap/</guid><description>&lt;p>在解决 &lt;a href="https://yindongliang.com/tags">Tags&lt;/a> 页面行尾词语被迫换行的问题时，发现 &lt;code>&amp;amp;nbsp;&lt;/code> 并不能强制连接字符，于是调查发现，还有零宽度空格这一概念。在 HTML 中，如果你需要一个既不会占用额外空间，又能用作连接的字符，可以使用零宽度符号，它们也是一种 &lt;a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Entity">HTML 实体&lt;/a>（HTML Entities）。&lt;/p></description></item><item><title>HTML</title><link>https://yindongliang.com/docs/Frontend/HTML/</link><pubDate>Tue, 04 Jun 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/docs/Frontend/HTML/</guid><description>&lt;h2 id="viewport">Viewport&lt;a class="anchor" href="#viewport">#&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Viewport_meta_tag">https://developer.mozilla.org/zh-CN/docs/Web/HTML/Viewport_meta_tag&lt;/a>&lt;/p>
&lt;h2 id="aside">aside&lt;a class="anchor" href="#aside">#&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/aside">https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/aside&lt;/a>&lt;/p></description></item><item><title>了解下自定义数据属性 data-*</title><link>https://yindongliang.com/posts/HTMLElement-dataset/</link><pubDate>Mon, 27 May 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/HTMLElement-dataset/</guid><description>&lt;p>测试主题切换功能时，遇到了 &lt;code>data-theme&lt;/code> 这个属性，问了下 gpt， 发现 &lt;code>data-theme&lt;/code> 不是 CSS 标准中的预定义属性，而是一个自定义的属性。更准确地说，它是 HTML5 中的 &amp;ldquo;data-&amp;rdquo; &lt;a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Howto/Use_data_attributes">数据属性&lt;/a>的一种。&lt;/p>
&lt;h2 id="html5-中的-data--属性">HTML5 中的 &amp;ldquo;data-&amp;rdquo; 属性&lt;a class="anchor" href="#html5-%e4%b8%ad%e7%9a%84-data--%e5%b1%9e%e6%80%a7">#&lt;/a>&lt;/h2>
&lt;p>HTML5 引入了 &lt;code>data-&lt;/code> 属性，允许你为元素添加自定义的非标准属性。这些自定义属性必须以 &lt;code>data-&lt;/code> 开头，后面跟一个名称。例如，&lt;code>data-theme&lt;/code>、&lt;code>data-user-id&lt;/code>、&lt;code>data-state&lt;/code> 等等。这些属性的主要目的是为元素存储与页面或应用程序相关的私有数据，而这些数据不会影响元素的展示或行为。&lt;/p></description></item><item><title>使 HTML 元素居中有哪些方案？</title><link>https://yindongliang.com/posts/how-to-make-html-element-center/</link><pubDate>Sat, 25 May 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/how-to-make-html-element-center/</guid><description>&lt;p>有多种方式可以实现HTML标签的居中，具体的方式会根据需要居中的元素类型（块级元素还是行内元素）以及具体应用的上下文来决定。下面将介绍几种常见的方法，涉及到的知识包括 CSS 盒模型、Flexbox 布局和 Grid 布局等。&lt;/p></description></item></channel></rss>