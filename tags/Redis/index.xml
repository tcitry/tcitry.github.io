<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Redis on LYon's Blog</title><link>https://yindongliang.com/tags/Redis/</link><description>Recent content in Redis on LYon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sat, 18 Oct 2025 13:05:57 +0800</lastBuildDate><atom:link href="https://yindongliang.com/tags/Redis/index.xml" rel="self" type="application/rss+xml"/><item><title>深入了解 Redis 的各种数据结构</title><link>https://yindongliang.com/posts/deep-in-redis-data-structure/</link><pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/deep-in-redis-data-structure/</guid><description>&lt;p>最近面试中发现我比较薄弱的地方还是在 Redis，很多数据结构对应的底层的原理不知道，于是来看看相关资料和&lt;a href="https://github.com/redis/redis">源码&lt;/a>，工作中没有这么深入研究过，惭愧了。&lt;/p>
&lt;h2 id="string">String&lt;a class="anchor" href="#string">#&lt;/a>&lt;/h2>
&lt;h3 id="使用方法">使用方法&lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8%e6%96%b9%e6%b3%95">#&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>127.0.0.1:6379&amp;gt; &lt;span style="color:#e5c07b">set&lt;/span> key value
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1:6379&amp;gt; &lt;span style="color:#e5c07b">set&lt;/span> number &lt;span style="color:#d19a66">10086&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1:6379&amp;gt; &lt;span style="color:#e5c07b">set&lt;/span> title &lt;span style="color:#63c381">&amp;#34;hello redis&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1:6379&amp;gt; get key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#63c381">&amp;#34;value&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1:6379&amp;gt; get number
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#63c381">&amp;#34;10086&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1:6379&amp;gt; get title
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#63c381">&amp;#34;hello redis&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="底层结构">底层结构&lt;a class="anchor" href="#%e5%ba%95%e5%b1%82%e7%bb%93%e6%9e%84">#&lt;/a>&lt;/h3>
&lt;p>String 类型的底层的数据结构实现主要是 int 和 SDS（简单动态字符串），C 语言内置的 int 就不用介绍了，下面详细说一下 SDS。&lt;/p></description></item><item><title>实现限流的几种方案</title><link>https://yindongliang.com/posts/go-rate-limit/</link><pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/go-rate-limit/</guid><description>&lt;p>限流是服务在高并发的情况下，通过限制处理请求的速率，以达到保证服务不过载的目的，实现高可用和稳定性的目标。限流的方案一般有计数法、滑动窗口、漏桶、令牌桶几种，其中各有各的特点，通常需要根据场景采用不同的方案。&lt;/p></description></item><item><title>Redis 的分布式锁使用注意</title><link>https://yindongliang.com/posts/redis-distribute-lock/</link><pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/redis-distribute-lock/</guid><description>&lt;h2 id="为什么需要分布式锁">为什么需要分布式锁&lt;a class="anchor" href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81%e5%88%86%e5%b8%83%e5%bc%8f%e9%94%81">#&lt;/a>&lt;/h2>
&lt;p>锁机制用于管理对共享资源的并发访问控制，当同一服务的多台机器间需要控制并发的时候，需要保证服务间在同一时间只能被一个线程访问。由于 Redis 的特点是单进程，并且具有高性能的特点，所以一般用 Redis 来做分布式锁。另外分布式锁还有以下几个特点：&lt;/p></description></item><item><title>Redis 实现布隆过滤器</title><link>https://yindongliang.com/posts/bloom-filter/</link><pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/bloom-filter/</guid><description>&lt;p>布隆过滤器（Bloom Filter，BF），能够确定一个东西&lt;strong>一定不存在或可能存在&lt;/strong>，常用于在海量并发情况下防止缓存击穿，相比较传统的 List、Set、Map 数据结构，布隆过滤器能够在大数据量的情况下，相比其他结构更能节省大量的内存空间。&lt;/p></description></item><item><title>Redis 基础知识</title><link>https://yindongliang.com/posts/redis-101/</link><pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/redis-101/</guid><description>&lt;h2 id="redis-介绍">Redis 介绍&lt;a class="anchor" href="#redis-%e4%bb%8b%e7%bb%8d">#&lt;/a>&lt;/h2>
&lt;h3 id="历史">历史&lt;a class="anchor" href="#%e5%8e%86%e5%8f%b2">#&lt;/a>&lt;/h3>
&lt;blockquote class='book-hint '>
&lt;p>Redis 是一个使用 ANSI C 编写的开源、支持网络、基于内存、分布式、可选持久性的键值对存储数据库，由来自意大利西西里岛的 Salvatore Sanfilippo（Antirez）发起并编写。从2015年6月开始，Redis 的开发由 Redis Labs 赞助，而2013年5月至2015年6月期间，其开发由 Pivotal 赞助。在2013年5月之前，其开发由 VMware 赞助。根据月度排行网站 DB-Engines.com 的数据，Redis 是最流行的键值对存储数据库。&lt;/p></description></item></channel></rss>