<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Recommended on LYon's Blog</title><link>https://yindongliang.com/tags/Recommended/</link><description>Recent content in Recommended on LYon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 22 Oct 2025 23:57:45 +0800</lastBuildDate><atom:link href="https://yindongliang.com/tags/Recommended/index.xml" rel="self" type="application/rss+xml"/><item><title>Icon Maker by Raycast</title><link>https://yindongliang.com/links/202508/Icon-Maker-by-Raycast/</link><pubDate>Fri, 22 Aug 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/links/202508/Icon-Maker-by-Raycast/</guid><description>&lt;p>This repository contains the source code for &lt;a href="https://ray.so/">ray.so&lt;/a>, a collection of tools built by &lt;a href="https://raycast.com/#ref=ray.so">Raycast&lt;/a>. It includes:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/raycast/ray-so/tree/main/app/%28navigation%29/%28code%29">&lt;strong>Code Images&lt;/strong>&lt;/a>: Create beautiful images of your code.&lt;/li>
&lt;li>&lt;a href="https://github.com/raycast/ray-so/tree/main/app/%28navigation%29/icon">&lt;strong>Icon Maker&lt;/strong>&lt;/a>: Create beautiful icons for Raycast Extensions.&lt;/li>
&lt;li>&lt;a href="https://github.com/raycast/ray-so/tree/main/app/%28navigation%29/prompts">&lt;strong>Prompt Explorer&lt;/strong>&lt;/a>: Explore AI Prompts for Raycast.&lt;/li>
&lt;li>&lt;a href="https://github.com/raycast/ray-so/tree/main/app/%28navigation%29/presets">&lt;strong>Preset Explorer&lt;/strong>&lt;/a>: Explore AI Presets for Raycast.&lt;/li>
&lt;li>&lt;a href="https://github.com/raycast/ray-so/tree/main/app/%28navigation%29/quicklinks">&lt;strong>Quicklink Explorer&lt;/strong>&lt;/a>: Browse and import Raycast Quicklinks.&lt;/li>
&lt;li>&lt;a href="https://github.com/raycast/ray-so/tree/main/app/%28navigation%29/snippets">&lt;strong>Snippet Explorer&lt;/strong>&lt;/a>: Browse and import Raycast Snippets.&lt;/li>
&lt;li>&lt;a href="https://github.com/raycast/ray-so/tree/main/app/%28navigation%29/themes">&lt;strong>Theme Explorer&lt;/strong>&lt;/a>: Browse and import Raycast Themes.&lt;/li>
&lt;/ul>
&lt;h2 id="项目地址">项目地址&lt;a class="anchor" href="#%e9%a1%b9%e7%9b%ae%e5%9c%b0%e5%9d%80">#&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://github.com/raycast/ray-so">https://github.com/raycast/ray-so&lt;/a>&lt;/p></description></item><item><title>我的 2024 年总结</title><link>https://yindongliang.com/posts/review-2024/</link><pubDate>Sun, 02 Feb 2025 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/review-2024/</guid><description>&lt;p>2024 年是意志坚定的一年，不管是工作、学习还是生活，来一起听一下 Gloria Gaynor 的《I Will Survive》。另外总结拖到现在才发出来的原因是，最近一个月 Windsurf 帮我写代码很上头，再没心思搞别的。现在不能再拖了，明天要开始新年第一天上班。&lt;/p></description></item><item><title>最近参加开球网积分赛🏓</title><link>https://yindongliang.com/weekly/2024/2024-W38/</link><pubDate>Tue, 17 Sep 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2024/2024-W38/</guid><description>&lt;p>停了一个半月的周报，主要原因是业余时间确实没投入精力去关注技术，只是晚上回家偶尔看看文档。也许是受奥运会的影响，也许是前两个月好东西吃多了导致长了点肉，于是乎最近一段时间下班就跑球馆打球去了，周末还参加了几次积分赛，以至于经过一个多月的密集练习和比赛，最后还拿了俱乐部 U1600 分段的一次季军和一次亚军，也算小有收获，当然还会继续努力，争取早日进入下一分段。&lt;/p></description></item><item><title>技术大牛也会焦虑</title><link>https://yindongliang.com/weekly/2024/2024-W28/</link><pubDate>Mon, 08 Jul 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2024/2024-W28/</guid><description>&lt;p>下面这段话是本周摸鱼时在图拉鼎的博客中重新读到的，之前没有注意到，但是最近同时在读《当下的力量》这本书，突然就产生了共鸣，这也是我一直想解决的问题不是么，看到大佬们都有这个问题，我也感觉轻松多了。&lt;/p></description></item><item><title>2024 年我的工具列表</title><link>https://yindongliang.com/posts/my-toolkit-2024/</link><pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/my-toolkit-2024/</guid><description>&lt;p>从桌面端的应用软件这个角度来看，当下也是一个动荡的年代，不管是之前已经有的形态，还是还未出现的形态，也不管是开源的还是收费的，好用的新工具层出不穷，AI 的入场更是要把所有软件重新设计的节奏。我希望整理下最近几年一直在用的软件，记录当前的状态，这是相关主题的第一篇，争取后面每年都能关注下一下这个话题。&lt;/p></description></item><item><title>我的 2023 年总结</title><link>https://yindongliang.com/posts/review-2023/</link><pubDate>Sun, 31 Dec 2023 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/review-2023/</guid><description>&lt;blockquote class='book-hint '>
&lt;p>播放配乐 Blowing in the Wind - Bob Dylan，阅读效果更佳。&lt;/p>&lt;/blockquote>&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=566993785&amp;auto=1&amp;height=66">&lt;/iframe>
&lt;p>2023 这一年，工作上相当生活，生活上相当工作。&lt;/p>
&lt;h2 id="生活">生活&lt;a class="anchor" href="#%e7%94%9f%e6%b4%bb">#&lt;/a>&lt;/h2>
&lt;p>因为生活上相当工作，所以我觉得还是先说生活，琐事我断断续续记录在了周报里，这里就不再重复，只说重点。&lt;/p></description></item><item><title>我的 2022 年总结</title><link>https://yindongliang.com/posts/review-2022/</link><pubDate>Fri, 30 Dec 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/review-2022/</guid><description>&lt;blockquote class='book-hint '>
&lt;p>播放配乐，阅读效果更佳。&lt;/p>&lt;/blockquote>&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=1934010087&amp;auto=1&amp;height=66">&lt;/iframe>
&lt;p>转眼又到了 2022 年底，时间过得飞快，今年算是完成了几件有意义的事情，但这期间也充满了迷茫与艰难选择，内心发生了跌宕起伏的情绪变化，无论结果如何，2022 年发生的一切对我来说都是宝贵的经历。&lt;/p></description></item><item><title>做了个周刊</title><link>https://yindongliang.com/weekly/2022/2022-W41/</link><pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/weekly/2022/2022-W41/</guid><description>&lt;p>花了周六一天时间，在 Hugo 模版基础上新加了一个 &lt;a href="https://yindongliang.com/weekly">Weekly&lt;/a> 功能，受 &lt;a href="https://weekly.tw93.fun/">潮流周刊&lt;/a> 启发，并学到了一些新东西：&lt;/p>
&lt;ul>
&lt;li>现在前端好像已经不流行写 CSS 了，有一个解决方案：&lt;a href="https://tailwindcss.com/">Tailwind CSS - Rapidly build modern websites without ever leaving your HTML&lt;/a>，非常香，基本可以直接在 HTML 中使用 class 属性来替代在 CSS 文件里各种起名+声明，问题就是会覆盖一些本地原有的配置，所以它适合项目创建之初就开始使用。&lt;/li>
&lt;li>更激进的，前端好像也不流行自己写布局、框架了，又一个解决方案：&lt;a href="https://shuffle.dev/">Shuffle — An online editor for busy developers&lt;/a>，貌似是收费的，但是非常适合 startup。&lt;/li>
&lt;/ul>
&lt;p>与其叫周刊，其实定位在周报。看大佬们的周刊一般是第 99 期、256 期之类的，但是我不想每次去计算周刊到第几期了，对我来说意义不大，存在的问题可能就是没有唯一索引了，其实自己起的名也基本可以避开重复，总之够用。&lt;/p></description></item><item><title>浏览器的事件机制</title><link>https://yindongliang.com/posts/browser-event/</link><pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/browser-event/</guid><description>&lt;p>事件是在编程时系统内发生的动作或者发生的事情，系统响应事件后，如果需要，我们可以用事件处理器（event handler）对事件做出回应。浏览器中常见的可以触发事件的时机比如有：&lt;/p></description></item><item><title>我的 2021 年总结</title><link>https://yindongliang.com/posts/review-2021/</link><pubDate>Fri, 31 Dec 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/review-2021/</guid><description>&lt;p>这是一篇 2021 年的年终总结，如果给 2021 一个关键词：那绝对是“价值观”。因为 2021 这一年是我价值观发生巨大改变的一年。回头看我还是感谢这一年发生过的事情，生活的很多道理我们都懂，但是如果没有经历过可能就没有深入的思考和实际的改变。&lt;/p></description></item><item><title>HTTPS 的 SSL/TLS 协议</title><link>https://yindongliang.com/posts/https-ssl-tls-protocol/</link><pubDate>Thu, 16 Dec 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/https-ssl-tls-protocol/</guid><description>&lt;h2 id="https-简介">HTTPS 简介&lt;a class="anchor" href="#https-%e7%ae%80%e4%bb%8b">#&lt;/a>&lt;/h2>
&lt;p>通过上一篇的&lt;a href="http://localhost:1313/posts/https-algorithems/">HTTPS 之密码学基础&lt;/a>，现在可以正式进入 HTTPS 的介绍了。HTTPS 指的是超文本传输安全协议（&lt;strong>H&lt;/strong>yper&lt;strong>T&lt;/strong>ext &lt;strong>T&lt;/strong>ransfer &lt;strong>P&lt;/strong>rotocol &lt;strong>S&lt;/strong>ecure），顾名思义，比 HTTP 多了一个“安全”，而这里的安全指的就是 SSL/TLS 协议了，即 HTTPS 是由 HTTP + SSL/TLS 协议组成的。&lt;/p></description></item><item><title>HTTPS 的密码学基础</title><link>https://yindongliang.com/posts/https-algorithems/</link><pubDate>Thu, 02 Dec 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/https-algorithems/</guid><description>&lt;p>本来打算直接总结下 HTTPS，但是发现要写的很多内容其实都依靠密码学的基础概念，其实我在阅读别的资料的时候发现基本也是这样，不然说的时候上下文都串不起来，甚至可以说研究 HTTPS 约等于在研究加密算法。所以还是专门分一篇来说一下加密，这样后面说 SSL/TLS 的时候就可以拉通底层概念了。&lt;/p></description></item><item><title>数据库的索引</title><link>https://yindongliang.com/posts/db-index/</link><pubDate>Fri, 29 Oct 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/db-index/</guid><description>&lt;p>索引在数据库中的地位非常重要，只有搞明白索引，才有可能在日常的数据库相关工作中解决实际问题：提高库表设计能力、优化查询效率、提升数据库性能等核心问题。数据库的索引有哪些？以 MySQL 的 InnoDB 存储引擎为例，一般可分为聚集索引、辅助索引、全文索引、哈希索引。但是只说这些可能还不够，因为你应该还听说过主键索引、联合索引、唯一索引，甚至自适应哈希索引等等，他们都称为索引，只是通常描述的维度不一样，下面会逐渐区分开。本文就先从索引在数据结构上的实现开始说起。&lt;/p></description></item><item><title>数据库的事务</title><link>https://yindongliang.com/posts/db-tx/</link><pubDate>Fri, 22 Oct 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/db-tx/</guid><description>&lt;p>请思考一个我在工作中遇到的一个场景：假设用户参加了一个优惠活动，买了一个30 天的会员卡，然后活动又送了一个 7 天的体验卡，最终我要交付给用户 37 天的会员权益时间。如果这两笔订单同时请求系统进行交付，那如何能够一直正确的交付 37天，并正确计算各订单的开始结束时间？（公司 MySQL 的隔离级别是 RC）&lt;/p></description></item><item><title>数据库的锁</title><link>https://yindongliang.com/posts/db-lock/</link><pubDate>Sat, 16 Oct 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/db-lock/</guid><description>&lt;p>数据库里的锁根据范围和维度都有不同的实现和叫法，如果我这样列出来你可能会很焦虑：GAP 锁，记录锁，显式锁定，表级锁，行级锁，页级锁，咨询锁，间隙锁，共享锁，排他锁，互斥锁，自旋锁，读写锁，悲观锁，乐观锁，因为当初我也是这种感觉，现在我重新整理一遍，希望对你也有帮助。&lt;/p></description></item><item><title>跨域相关问题</title><link>https://yindongliang.com/posts/http-cross-domain-problem/</link><pubDate>Sat, 21 Aug 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/http-cross-domain-problem/</guid><description>&lt;p>本文先从 &lt;strong>CSRF&lt;/strong> 攻击的介绍开始，说明了跨域存在的问题，然后引入浏览器&lt;strong>同源策略&lt;/strong>的概念，明白了要限制跨域的原因后，再给出了标准的跨域请求方案：&lt;strong>CORS&lt;/strong>，所以总体上就三部分：CSRF、同源策略、CORS，文章有点长但不用慌，按顺序看就可以了。&lt;/p></description></item><item><title>Go 程序是怎样跑起来的？</title><link>https://yindongliang.com/posts/how-go-program-run/</link><pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/how-go-program-run/</guid><description>&lt;p>Go 程序是怎么跑起来的？面对问题我第一反应是，Go 是静态编译型语言，和 C 语言一样，就是编译、链接那一套，尤其是最近对着 Go 的一些资料看感觉又学习了一遍编译原理。编译原理的内容本身就很深，本文仅以我暂时理解到的视角进行总结，参考资料列在了最下面。&lt;/p></description></item><item><title>常见的垃圾回收算法</title><link>https://yindongliang.com/posts/GC-algorithms/</link><pubDate>Sun, 28 Feb 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/GC-algorithms/</guid><description>&lt;p>本来想直接看下 Go 的垃圾回收机制，但是发现自己现在对内存管理和垃圾回收的了解都比较少，所以只能先来研究下常见的垃圾回收算法了，本篇即是《&lt;a href="https://book.douban.com/subject/26821357/">垃圾回收的算法与实现&lt;/a>》的学习笔记，目标是能够描述清楚各种 GC 算法的复杂度、优缺点。&lt;/p></description></item><item><title>操作系统的内存管理机制</title><link>https://yindongliang.com/posts/memory-management-in-os/</link><pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/memory-management-in-os/</guid><description>&lt;p>继续复习操作系统，话说随着 CPU 计算资源的性能开始过剩，压在内存身上的担子越来越重了，堪称新时期的性能瓶颈，对操作系统来说，内存管理机制也要进行近乎极致的优化才可以充分发挥 CPU 的正常水平。&lt;/p></description></item><item><title>乒乓理财，了解一下？</title><link>https://yindongliang.com/posts/pingpang-financing/</link><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/pingpang-financing/</guid><description>&lt;h2 id="谁需要看">谁需要看&lt;a class="anchor" href="#%e8%b0%81%e9%9c%80%e8%a6%81%e7%9c%8b">#&lt;/a>&lt;/h2>
&lt;p>如果你有100 万要理财，这个不适合你。如果你只有 1 万？那向你介绍一下我总结的理财方案~&lt;/p>
&lt;h2 id="认识乒乓球拍">认识乒乓球拍&lt;a class="anchor" href="#%e8%ae%a4%e8%af%86%e4%b9%92%e4%b9%93%e7%90%83%e6%8b%8d">#&lt;/a>&lt;/h2>
&lt;p>关于球拍的分类，我从各个角度出发整理了一个图：&lt;/p>
&lt;img src="https://cdn.yindongliang.com/uPic/pingpang-category.png" style="zoom:50%;" />
&lt;p>可见，正是球拍的种类非常之多，每种特性组合在一起，会发生各种各样的效果，这也是为什么球友们对器材津津乐道、各种尝试的原因，也是乒乓球拍多样性表现，况且现在还没有介绍胶皮的多样性。&lt;/p></description></item><item><title>Kafka 和 RabbitMQ 对比</title><link>https://yindongliang.com/posts/compare-kafka-and-rabbitmq/</link><pubDate>Sat, 11 Jul 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/compare-kafka-and-rabbitmq/</guid><description>&lt;p>消息队列中间件（Message Queue Middleware，简称 MQ）在后端领域扮演很重要的角色，但是笔者之前日常多止步于使用，对机制原理研究很少。之前用 Python 写 Web 服务的时候，用到 RabbitMQ 的情况比较多，可能是因为有一个基于 Python 的消息队列的封装库 Celery 非常好用。后来写 Go 服务的时候，接入了公司整体的技术架构，Kafka 又用的比较多。这里接针对两种消息中间件专门对比一下各自的底层机制，方便在业务场景中做决策。&lt;/p></description></item><item><title>使用 Typora 来编辑你的 Hugo 博客</title><link>https://yindongliang.com/posts/use-typora-write-hugo-blog/</link><pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/use-typora-write-hugo-blog/</guid><description>&lt;p>最近 typroa 用的比较多，然后又想着继续维护在 github pages 的博客，觉得把 typora 编辑完的东西再复制到博客项目里很麻烦，于是开始了一番折腾。&lt;/p>
&lt;h2 id="目标是啥">目标是啥&lt;a class="anchor" href="#%e7%9b%ae%e6%a0%87%e6%98%af%e5%95%a5">#&lt;/a>&lt;/h2>
&lt;p>在 typora 写的笔记放在了 iCloud，然后可以一键同步到我的线上博客&lt;/p></description></item><item><title>学习钢琴半年的体会</title><link>https://yindongliang.com/posts/learn-piano/</link><pubDate>Fri, 27 Dec 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/learn-piano/</guid><description>&lt;p>婚礼上为了给媳妇制造一个印象深刻的惊喜，我提前三个月去学了钢琴，现在回想起来也算是一件有意思的事情。6 月底报名后，经过和钢琴老师的讨论，对于我这种零基础短期想突击的，同时后期还想继续学下去的，最后老师推荐了我《月亮代表我的心》，尤其在老师弹了以后我自己也觉得这首曲子非常好。&lt;/p></description></item><item><title>AES 对称加密学习笔记</title><link>https://yindongliang.com/posts/aes-notes/</link><pubDate>Fri, 26 Apr 2019 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/aes-notes/</guid><description>&lt;p>工作中的需求，需要一个基于 Django 的数据脱敏解决方案，我们的目标是要用 AES 对称加密算法，接入不能影响现有业务逻辑，数据迁移方便，失败可以回滚，最好可以开源。经过调研与开发，我最终产出了一个开源项目：&lt;a href="https://github.com/luojilab/django-mirage-field">luojilab/django-mirage-field&lt;/a>，目前已经有 50+ star。本篇即为学习对称加密算法的笔记。&lt;/p></description></item><item><title>浅谈 Django-REST-Framework 的设计与源码</title><link>https://yindongliang.com/posts/talk-about-django-rest-framework/</link><pubDate>Thu, 20 Oct 2016 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/talk-about-django-rest-framework/</guid><description>&lt;p>最近又重新接触 DRF，翻看文档发现，当时很难理解的东西，如今一看就懂了，顺带看了源码，也比较容易理解，至少比 Django 的源码简单不少。下面开始从 DRF 的设计和源码两个方面，结合自己的看法，谈谈DRF。&lt;/p></description></item><item><title>使用 Github Pages 建立免费的静态网站</title><link>https://yindongliang.com/posts/use-github-page-build-static-website/</link><pubDate>Sun, 28 Jul 2013 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/use-github-page-build-static-website/</guid><description>&lt;p>github 想必都听说过，这个号称程序员的 Facebook 有着很多高质量的项目，github 就是为这些项目提供代码托管服务，你可以将自己做好的项目放到 github 上与大家共享，别人也可提出修改建议。&lt;/p></description></item><item><title>这个博客</title><link>https://yindongliang.com/posts/this-blog/</link><pubDate>Sun, 23 Dec 2012 00:00:00 +0000</pubDate><guid>https://yindongliang.com/posts/this-blog/</guid><description>&lt;blockquote class='book-hint '>
&lt;p>这是一篇后记，大约写于 2015 年，但适合作为本站的第一篇来了解一下，而 2012 年是本站注册域名和我开始上大学的时间点。&lt;/p>&lt;/blockquote>&lt;div class="mermaid">timeline
 2012 : WordPress
 : VPS
 2013 : Jekyll
 : Github Pages
 2014 : Coding.net
 2015 : Hexo
 : Coding.net
 2016 : Ghost
 : VPS
 2019 : Hugo
 : Typora
 : Github Pages
 2022 : Hugo
 : Obsidian
 : Github Pages
&lt;/div>
&lt;p>我对做一个自己的博客的过程是可以说非常的折腾，技术架构上有过很多的版本，本文专门来总结一下。&lt;/p></description></item></channel></rss>